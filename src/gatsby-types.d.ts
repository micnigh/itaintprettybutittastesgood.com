/* eslint-disable */

/* THIS FILE IS AUTOGENERATED. CHANGES WILL BE LOST ON SUBSEQUENT RUNS. */

declare namespace Queries {

type Maybe<T> = T | null;
type InputMaybe<T> = T | null;
type Exact<T extends { [key: string]: unknown }> = { [K in keyof T]: T[K] };
type MakeOptional<T, K extends keyof T> = Omit<T, K> & { [SubKey in K]?: Maybe<T[SubKey]> };
type MakeMaybe<T, K extends keyof T> = Omit<T, K> & { [SubKey in K]: Maybe<T[SubKey]> };
/** All built-in and custom scalars, mapped to their actual values */
type Scalars = {
  /** The `ID` scalar type represents a unique identifier, often used to refetch an object or as key for a cache. The ID type appears in a JSON response as a String; however, it is not intended to be human-readable. When expected as an input type, any string (such as `"4"`) or integer (such as `4`) input value will be accepted as an ID. */
  ID: string;
  /** The `String` scalar type represents textual data, represented as UTF-8 character sequences. The String type is most often used by GraphQL to represent free-form human-readable text. */
  String: string;
  /** The `Boolean` scalar type represents `true` or `false`. */
  Boolean: boolean;
  /** The `Int` scalar type represents non-fractional signed whole numeric values. Int can represent values between -(2^31) and 2^31 - 1. */
  Int: number;
  /** The `Float` scalar type represents signed double-precision fractional values as specified by [IEEE 754](https://en.wikipedia.org/wiki/IEEE_floating_point). */
  Float: number;
  /** A date string, such as 2007-12-03, compliant with the ISO 8601 standard for representation of dates and times using the Gregorian calendar. */
  Date: string;
  GatsbyImageData: import('gatsby-plugin-image').IGatsbyImageData;
  /** The `JSON` scalar type represents JSON values as specified by [ECMA-404](http://www.ecma-international.org/publications/files/ECMA-ST/ECMA-404.pdf). */
  JSON: Record<string, unknown>;
};

type AVIFOptions = {
  readonly lossless: InputMaybe<Scalars['Boolean']>;
  readonly quality: InputMaybe<Scalars['Int']>;
  readonly speed: InputMaybe<Scalars['Int']>;
};

type BlurredOptions = {
  /** Force the output format for the low-res preview. Default is to use the same format as the input. You should rarely need to change this */
  readonly toFormat: InputMaybe<ImageFormat>;
  /** Width of the generated low-res preview. Default is 20px */
  readonly width: InputMaybe<Scalars['Int']>;
};

type BooleanQueryOperatorInput = {
  readonly eq: InputMaybe<Scalars['Boolean']>;
  readonly in: InputMaybe<ReadonlyArray<InputMaybe<Scalars['Boolean']>>>;
  readonly ne: InputMaybe<Scalars['Boolean']>;
  readonly nin: InputMaybe<ReadonlyArray<InputMaybe<Scalars['Boolean']>>>;
};

type BreadcrumbItem = {
  readonly name: Scalars['String'];
  readonly slug: Scalars['String'];
};

type BreadcrumbItemFilterInput = {
  readonly name: InputMaybe<StringQueryOperatorInput>;
  readonly slug: InputMaybe<StringQueryOperatorInput>;
};

type BreadcrumbItemFilterListInput = {
  readonly elemMatch: InputMaybe<BreadcrumbItemFilterInput>;
};

type Cover = {
  readonly alt: Maybe<Scalars['String']>;
  readonly image: Maybe<File>;
  readonly title: Maybe<Scalars['String']>;
};

type CoverFilterInput = {
  readonly alt: InputMaybe<StringQueryOperatorInput>;
  readonly image: InputMaybe<FileFilterInput>;
  readonly title: InputMaybe<StringQueryOperatorInput>;
};

type DateQueryOperatorInput = {
  readonly eq: InputMaybe<Scalars['Date']>;
  readonly gt: InputMaybe<Scalars['Date']>;
  readonly gte: InputMaybe<Scalars['Date']>;
  readonly in: InputMaybe<ReadonlyArray<InputMaybe<Scalars['Date']>>>;
  readonly lt: InputMaybe<Scalars['Date']>;
  readonly lte: InputMaybe<Scalars['Date']>;
  readonly ne: InputMaybe<Scalars['Date']>;
  readonly nin: InputMaybe<ReadonlyArray<InputMaybe<Scalars['Date']>>>;
};

type Directory = Node & {
  readonly absolutePath: Scalars['String'];
  readonly accessTime: Scalars['Date'];
  readonly atime: Scalars['Date'];
  readonly atimeMs: Scalars['Float'];
  readonly base: Scalars['String'];
  readonly birthTime: Scalars['Date'];
  /** @deprecated Use `birthTime` instead */
  readonly birthtime: Maybe<Scalars['Date']>;
  /** @deprecated Use `birthTime` instead */
  readonly birthtimeMs: Maybe<Scalars['Float']>;
  readonly changeTime: Scalars['Date'];
  readonly children: ReadonlyArray<Node>;
  readonly ctime: Scalars['Date'];
  readonly ctimeMs: Scalars['Float'];
  readonly dev: Scalars['Int'];
  readonly dir: Scalars['String'];
  readonly ext: Scalars['String'];
  readonly extension: Scalars['String'];
  readonly gid: Scalars['Int'];
  readonly id: Scalars['ID'];
  readonly ino: Scalars['Float'];
  readonly internal: Internal;
  readonly mode: Scalars['Int'];
  readonly modifiedTime: Scalars['Date'];
  readonly mtime: Scalars['Date'];
  readonly mtimeMs: Scalars['Float'];
  readonly name: Scalars['String'];
  readonly nlink: Scalars['Int'];
  readonly parent: Maybe<Node>;
  readonly prettySize: Scalars['String'];
  readonly rdev: Scalars['Int'];
  readonly relativeDirectory: Scalars['String'];
  readonly relativePath: Scalars['String'];
  readonly root: Scalars['String'];
  readonly size: Scalars['Int'];
  readonly sourceInstanceName: Scalars['String'];
  readonly uid: Scalars['Int'];
};


type Directory_accessTimeArgs = {
  difference: InputMaybe<Scalars['String']>;
  formatString: InputMaybe<Scalars['String']>;
  fromNow: InputMaybe<Scalars['Boolean']>;
  locale: InputMaybe<Scalars['String']>;
};


type Directory_atimeArgs = {
  difference: InputMaybe<Scalars['String']>;
  formatString: InputMaybe<Scalars['String']>;
  fromNow: InputMaybe<Scalars['Boolean']>;
  locale: InputMaybe<Scalars['String']>;
};


type Directory_birthTimeArgs = {
  difference: InputMaybe<Scalars['String']>;
  formatString: InputMaybe<Scalars['String']>;
  fromNow: InputMaybe<Scalars['Boolean']>;
  locale: InputMaybe<Scalars['String']>;
};


type Directory_changeTimeArgs = {
  difference: InputMaybe<Scalars['String']>;
  formatString: InputMaybe<Scalars['String']>;
  fromNow: InputMaybe<Scalars['Boolean']>;
  locale: InputMaybe<Scalars['String']>;
};


type Directory_ctimeArgs = {
  difference: InputMaybe<Scalars['String']>;
  formatString: InputMaybe<Scalars['String']>;
  fromNow: InputMaybe<Scalars['Boolean']>;
  locale: InputMaybe<Scalars['String']>;
};


type Directory_modifiedTimeArgs = {
  difference: InputMaybe<Scalars['String']>;
  formatString: InputMaybe<Scalars['String']>;
  fromNow: InputMaybe<Scalars['Boolean']>;
  locale: InputMaybe<Scalars['String']>;
};


type Directory_mtimeArgs = {
  difference: InputMaybe<Scalars['String']>;
  formatString: InputMaybe<Scalars['String']>;
  fromNow: InputMaybe<Scalars['Boolean']>;
  locale: InputMaybe<Scalars['String']>;
};

type DirectoryConnection = {
  readonly distinct: ReadonlyArray<Scalars['String']>;
  readonly edges: ReadonlyArray<DirectoryEdge>;
  readonly group: ReadonlyArray<DirectoryGroupConnection>;
  readonly max: Maybe<Scalars['Float']>;
  readonly min: Maybe<Scalars['Float']>;
  readonly nodes: ReadonlyArray<Directory>;
  readonly pageInfo: PageInfo;
  readonly sum: Maybe<Scalars['Float']>;
  readonly totalCount: Scalars['Int'];
};


type DirectoryConnection_distinctArgs = {
  field: DirectoryFieldsEnum;
};


type DirectoryConnection_groupArgs = {
  field: DirectoryFieldsEnum;
  limit: InputMaybe<Scalars['Int']>;
  skip: InputMaybe<Scalars['Int']>;
};


type DirectoryConnection_maxArgs = {
  field: DirectoryFieldsEnum;
};


type DirectoryConnection_minArgs = {
  field: DirectoryFieldsEnum;
};


type DirectoryConnection_sumArgs = {
  field: DirectoryFieldsEnum;
};

type DirectoryEdge = {
  readonly next: Maybe<Directory>;
  readonly node: Directory;
  readonly previous: Maybe<Directory>;
};

type DirectoryFieldsEnum =
  | 'absolutePath'
  | 'accessTime'
  | 'atime'
  | 'atimeMs'
  | 'base'
  | 'birthTime'
  | 'birthtime'
  | 'birthtimeMs'
  | 'changeTime'
  | 'children'
  | 'children.children'
  | 'children.children.children'
  | 'children.children.children.children'
  | 'children.children.children.id'
  | 'children.children.id'
  | 'children.children.internal.content'
  | 'children.children.internal.contentDigest'
  | 'children.children.internal.contentFilePath'
  | 'children.children.internal.description'
  | 'children.children.internal.fieldOwners'
  | 'children.children.internal.ignoreType'
  | 'children.children.internal.mediaType'
  | 'children.children.internal.owner'
  | 'children.children.internal.type'
  | 'children.children.parent.children'
  | 'children.children.parent.id'
  | 'children.id'
  | 'children.internal.content'
  | 'children.internal.contentDigest'
  | 'children.internal.contentFilePath'
  | 'children.internal.description'
  | 'children.internal.fieldOwners'
  | 'children.internal.ignoreType'
  | 'children.internal.mediaType'
  | 'children.internal.owner'
  | 'children.internal.type'
  | 'children.parent.children'
  | 'children.parent.children.children'
  | 'children.parent.children.id'
  | 'children.parent.id'
  | 'children.parent.internal.content'
  | 'children.parent.internal.contentDigest'
  | 'children.parent.internal.contentFilePath'
  | 'children.parent.internal.description'
  | 'children.parent.internal.fieldOwners'
  | 'children.parent.internal.ignoreType'
  | 'children.parent.internal.mediaType'
  | 'children.parent.internal.owner'
  | 'children.parent.internal.type'
  | 'children.parent.parent.children'
  | 'children.parent.parent.id'
  | 'ctime'
  | 'ctimeMs'
  | 'dev'
  | 'dir'
  | 'ext'
  | 'extension'
  | 'gid'
  | 'id'
  | 'ino'
  | 'internal.content'
  | 'internal.contentDigest'
  | 'internal.contentFilePath'
  | 'internal.description'
  | 'internal.fieldOwners'
  | 'internal.ignoreType'
  | 'internal.mediaType'
  | 'internal.owner'
  | 'internal.type'
  | 'mode'
  | 'modifiedTime'
  | 'mtime'
  | 'mtimeMs'
  | 'name'
  | 'nlink'
  | 'parent.children'
  | 'parent.children.children'
  | 'parent.children.children.children'
  | 'parent.children.children.id'
  | 'parent.children.id'
  | 'parent.children.internal.content'
  | 'parent.children.internal.contentDigest'
  | 'parent.children.internal.contentFilePath'
  | 'parent.children.internal.description'
  | 'parent.children.internal.fieldOwners'
  | 'parent.children.internal.ignoreType'
  | 'parent.children.internal.mediaType'
  | 'parent.children.internal.owner'
  | 'parent.children.internal.type'
  | 'parent.children.parent.children'
  | 'parent.children.parent.id'
  | 'parent.id'
  | 'parent.internal.content'
  | 'parent.internal.contentDigest'
  | 'parent.internal.contentFilePath'
  | 'parent.internal.description'
  | 'parent.internal.fieldOwners'
  | 'parent.internal.ignoreType'
  | 'parent.internal.mediaType'
  | 'parent.internal.owner'
  | 'parent.internal.type'
  | 'parent.parent.children'
  | 'parent.parent.children.children'
  | 'parent.parent.children.id'
  | 'parent.parent.id'
  | 'parent.parent.internal.content'
  | 'parent.parent.internal.contentDigest'
  | 'parent.parent.internal.contentFilePath'
  | 'parent.parent.internal.description'
  | 'parent.parent.internal.fieldOwners'
  | 'parent.parent.internal.ignoreType'
  | 'parent.parent.internal.mediaType'
  | 'parent.parent.internal.owner'
  | 'parent.parent.internal.type'
  | 'parent.parent.parent.children'
  | 'parent.parent.parent.id'
  | 'prettySize'
  | 'rdev'
  | 'relativeDirectory'
  | 'relativePath'
  | 'root'
  | 'size'
  | 'sourceInstanceName'
  | 'uid';

type DirectoryFilterInput = {
  readonly absolutePath: InputMaybe<StringQueryOperatorInput>;
  readonly accessTime: InputMaybe<DateQueryOperatorInput>;
  readonly atime: InputMaybe<DateQueryOperatorInput>;
  readonly atimeMs: InputMaybe<FloatQueryOperatorInput>;
  readonly base: InputMaybe<StringQueryOperatorInput>;
  readonly birthTime: InputMaybe<DateQueryOperatorInput>;
  readonly birthtime: InputMaybe<DateQueryOperatorInput>;
  readonly birthtimeMs: InputMaybe<FloatQueryOperatorInput>;
  readonly changeTime: InputMaybe<DateQueryOperatorInput>;
  readonly children: InputMaybe<NodeFilterListInput>;
  readonly ctime: InputMaybe<DateQueryOperatorInput>;
  readonly ctimeMs: InputMaybe<FloatQueryOperatorInput>;
  readonly dev: InputMaybe<IntQueryOperatorInput>;
  readonly dir: InputMaybe<StringQueryOperatorInput>;
  readonly ext: InputMaybe<StringQueryOperatorInput>;
  readonly extension: InputMaybe<StringQueryOperatorInput>;
  readonly gid: InputMaybe<IntQueryOperatorInput>;
  readonly id: InputMaybe<StringQueryOperatorInput>;
  readonly ino: InputMaybe<FloatQueryOperatorInput>;
  readonly internal: InputMaybe<InternalFilterInput>;
  readonly mode: InputMaybe<IntQueryOperatorInput>;
  readonly modifiedTime: InputMaybe<DateQueryOperatorInput>;
  readonly mtime: InputMaybe<DateQueryOperatorInput>;
  readonly mtimeMs: InputMaybe<FloatQueryOperatorInput>;
  readonly name: InputMaybe<StringQueryOperatorInput>;
  readonly nlink: InputMaybe<IntQueryOperatorInput>;
  readonly parent: InputMaybe<NodeFilterInput>;
  readonly prettySize: InputMaybe<StringQueryOperatorInput>;
  readonly rdev: InputMaybe<IntQueryOperatorInput>;
  readonly relativeDirectory: InputMaybe<StringQueryOperatorInput>;
  readonly relativePath: InputMaybe<StringQueryOperatorInput>;
  readonly root: InputMaybe<StringQueryOperatorInput>;
  readonly size: InputMaybe<IntQueryOperatorInput>;
  readonly sourceInstanceName: InputMaybe<StringQueryOperatorInput>;
  readonly uid: InputMaybe<IntQueryOperatorInput>;
};

type DirectoryGroupConnection = {
  readonly distinct: ReadonlyArray<Scalars['String']>;
  readonly edges: ReadonlyArray<DirectoryEdge>;
  readonly field: Scalars['String'];
  readonly fieldValue: Maybe<Scalars['String']>;
  readonly group: ReadonlyArray<DirectoryGroupConnection>;
  readonly max: Maybe<Scalars['Float']>;
  readonly min: Maybe<Scalars['Float']>;
  readonly nodes: ReadonlyArray<Directory>;
  readonly pageInfo: PageInfo;
  readonly sum: Maybe<Scalars['Float']>;
  readonly totalCount: Scalars['Int'];
};


type DirectoryGroupConnection_distinctArgs = {
  field: DirectoryFieldsEnum;
};


type DirectoryGroupConnection_groupArgs = {
  field: DirectoryFieldsEnum;
  limit: InputMaybe<Scalars['Int']>;
  skip: InputMaybe<Scalars['Int']>;
};


type DirectoryGroupConnection_maxArgs = {
  field: DirectoryFieldsEnum;
};


type DirectoryGroupConnection_minArgs = {
  field: DirectoryFieldsEnum;
};


type DirectoryGroupConnection_sumArgs = {
  field: DirectoryFieldsEnum;
};

type DirectorySortInput = {
  readonly fields: InputMaybe<ReadonlyArray<InputMaybe<DirectoryFieldsEnum>>>;
  readonly order: InputMaybe<ReadonlyArray<InputMaybe<SortOrderEnum>>>;
};

type DuotoneGradient = {
  readonly highlight: Scalars['String'];
  readonly opacity: InputMaybe<Scalars['Int']>;
  readonly shadow: Scalars['String'];
};

type File = Node & {
  readonly absolutePath: Scalars['String'];
  readonly accessTime: Scalars['Date'];
  readonly atime: Scalars['Date'];
  readonly atimeMs: Scalars['Float'];
  readonly base: Scalars['String'];
  readonly birthTime: Scalars['Date'];
  /** @deprecated Use `birthTime` instead */
  readonly birthtime: Maybe<Scalars['Date']>;
  /** @deprecated Use `birthTime` instead */
  readonly birthtimeMs: Maybe<Scalars['Float']>;
  readonly blksize: Maybe<Scalars['Int']>;
  readonly blocks: Maybe<Scalars['Int']>;
  readonly changeTime: Scalars['Date'];
  /** Returns the first child node of type ImageSharp or null if there are no children of given type on this node */
  readonly childImageSharp: Maybe<ImageSharp>;
  readonly children: ReadonlyArray<Node>;
  /** Returns all children nodes filtered by type ImageSharp */
  readonly childrenImageSharp: Maybe<ReadonlyArray<Maybe<ImageSharp>>>;
  readonly ctime: Scalars['Date'];
  readonly ctimeMs: Scalars['Float'];
  readonly dev: Scalars['Int'];
  readonly dir: Scalars['String'];
  readonly ext: Scalars['String'];
  readonly extension: Scalars['String'];
  readonly gid: Scalars['Int'];
  readonly id: Scalars['ID'];
  readonly ino: Scalars['Float'];
  readonly internal: Internal;
  readonly mode: Scalars['Int'];
  readonly modifiedTime: Scalars['Date'];
  readonly mtime: Scalars['Date'];
  readonly mtimeMs: Scalars['Float'];
  readonly name: Scalars['String'];
  readonly nlink: Scalars['Int'];
  readonly parent: Maybe<Node>;
  readonly prettySize: Scalars['String'];
  readonly rdev: Scalars['Int'];
  readonly relativeDirectory: Scalars['String'];
  readonly relativePath: Scalars['String'];
  readonly root: Scalars['String'];
  readonly size: Scalars['Int'];
  readonly sourceInstanceName: Scalars['String'];
  readonly uid: Scalars['Int'];
  readonly url: Maybe<Scalars['String']>;
};


type File_accessTimeArgs = {
  difference: InputMaybe<Scalars['String']>;
  formatString: InputMaybe<Scalars['String']>;
  fromNow: InputMaybe<Scalars['Boolean']>;
  locale: InputMaybe<Scalars['String']>;
};


type File_atimeArgs = {
  difference: InputMaybe<Scalars['String']>;
  formatString: InputMaybe<Scalars['String']>;
  fromNow: InputMaybe<Scalars['Boolean']>;
  locale: InputMaybe<Scalars['String']>;
};


type File_birthTimeArgs = {
  difference: InputMaybe<Scalars['String']>;
  formatString: InputMaybe<Scalars['String']>;
  fromNow: InputMaybe<Scalars['Boolean']>;
  locale: InputMaybe<Scalars['String']>;
};


type File_changeTimeArgs = {
  difference: InputMaybe<Scalars['String']>;
  formatString: InputMaybe<Scalars['String']>;
  fromNow: InputMaybe<Scalars['Boolean']>;
  locale: InputMaybe<Scalars['String']>;
};


type File_ctimeArgs = {
  difference: InputMaybe<Scalars['String']>;
  formatString: InputMaybe<Scalars['String']>;
  fromNow: InputMaybe<Scalars['Boolean']>;
  locale: InputMaybe<Scalars['String']>;
};


type File_modifiedTimeArgs = {
  difference: InputMaybe<Scalars['String']>;
  formatString: InputMaybe<Scalars['String']>;
  fromNow: InputMaybe<Scalars['Boolean']>;
  locale: InputMaybe<Scalars['String']>;
};


type File_mtimeArgs = {
  difference: InputMaybe<Scalars['String']>;
  formatString: InputMaybe<Scalars['String']>;
  fromNow: InputMaybe<Scalars['Boolean']>;
  locale: InputMaybe<Scalars['String']>;
};

type FileConnection = {
  readonly distinct: ReadonlyArray<Scalars['String']>;
  readonly edges: ReadonlyArray<FileEdge>;
  readonly group: ReadonlyArray<FileGroupConnection>;
  readonly max: Maybe<Scalars['Float']>;
  readonly min: Maybe<Scalars['Float']>;
  readonly nodes: ReadonlyArray<File>;
  readonly pageInfo: PageInfo;
  readonly sum: Maybe<Scalars['Float']>;
  readonly totalCount: Scalars['Int'];
};


type FileConnection_distinctArgs = {
  field: FileFieldsEnum;
};


type FileConnection_groupArgs = {
  field: FileFieldsEnum;
  limit: InputMaybe<Scalars['Int']>;
  skip: InputMaybe<Scalars['Int']>;
};


type FileConnection_maxArgs = {
  field: FileFieldsEnum;
};


type FileConnection_minArgs = {
  field: FileFieldsEnum;
};


type FileConnection_sumArgs = {
  field: FileFieldsEnum;
};

type FileEdge = {
  readonly next: Maybe<File>;
  readonly node: File;
  readonly previous: Maybe<File>;
};

type FileFieldsEnum =
  | 'absolutePath'
  | 'accessTime'
  | 'atime'
  | 'atimeMs'
  | 'base'
  | 'birthTime'
  | 'birthtime'
  | 'birthtimeMs'
  | 'blksize'
  | 'blocks'
  | 'changeTime'
  | 'childImageSharp.children'
  | 'childImageSharp.children.children'
  | 'childImageSharp.children.children.children'
  | 'childImageSharp.children.children.id'
  | 'childImageSharp.children.id'
  | 'childImageSharp.children.internal.content'
  | 'childImageSharp.children.internal.contentDigest'
  | 'childImageSharp.children.internal.contentFilePath'
  | 'childImageSharp.children.internal.description'
  | 'childImageSharp.children.internal.fieldOwners'
  | 'childImageSharp.children.internal.ignoreType'
  | 'childImageSharp.children.internal.mediaType'
  | 'childImageSharp.children.internal.owner'
  | 'childImageSharp.children.internal.type'
  | 'childImageSharp.children.parent.children'
  | 'childImageSharp.children.parent.id'
  | 'childImageSharp.fixed.aspectRatio'
  | 'childImageSharp.fixed.base64'
  | 'childImageSharp.fixed.height'
  | 'childImageSharp.fixed.originalName'
  | 'childImageSharp.fixed.src'
  | 'childImageSharp.fixed.srcSet'
  | 'childImageSharp.fixed.srcSetWebp'
  | 'childImageSharp.fixed.srcWebp'
  | 'childImageSharp.fixed.tracedSVG'
  | 'childImageSharp.fixed.width'
  | 'childImageSharp.fluid.aspectRatio'
  | 'childImageSharp.fluid.base64'
  | 'childImageSharp.fluid.originalImg'
  | 'childImageSharp.fluid.originalName'
  | 'childImageSharp.fluid.presentationHeight'
  | 'childImageSharp.fluid.presentationWidth'
  | 'childImageSharp.fluid.sizes'
  | 'childImageSharp.fluid.src'
  | 'childImageSharp.fluid.srcSet'
  | 'childImageSharp.fluid.srcSetWebp'
  | 'childImageSharp.fluid.srcWebp'
  | 'childImageSharp.fluid.tracedSVG'
  | 'childImageSharp.gatsbyImageData'
  | 'childImageSharp.id'
  | 'childImageSharp.internal.content'
  | 'childImageSharp.internal.contentDigest'
  | 'childImageSharp.internal.contentFilePath'
  | 'childImageSharp.internal.description'
  | 'childImageSharp.internal.fieldOwners'
  | 'childImageSharp.internal.ignoreType'
  | 'childImageSharp.internal.mediaType'
  | 'childImageSharp.internal.owner'
  | 'childImageSharp.internal.type'
  | 'childImageSharp.original.height'
  | 'childImageSharp.original.src'
  | 'childImageSharp.original.width'
  | 'childImageSharp.parent.children'
  | 'childImageSharp.parent.children.children'
  | 'childImageSharp.parent.children.id'
  | 'childImageSharp.parent.id'
  | 'childImageSharp.parent.internal.content'
  | 'childImageSharp.parent.internal.contentDigest'
  | 'childImageSharp.parent.internal.contentFilePath'
  | 'childImageSharp.parent.internal.description'
  | 'childImageSharp.parent.internal.fieldOwners'
  | 'childImageSharp.parent.internal.ignoreType'
  | 'childImageSharp.parent.internal.mediaType'
  | 'childImageSharp.parent.internal.owner'
  | 'childImageSharp.parent.internal.type'
  | 'childImageSharp.parent.parent.children'
  | 'childImageSharp.parent.parent.id'
  | 'childImageSharp.resize.aspectRatio'
  | 'childImageSharp.resize.height'
  | 'childImageSharp.resize.originalName'
  | 'childImageSharp.resize.src'
  | 'childImageSharp.resize.tracedSVG'
  | 'childImageSharp.resize.width'
  | 'children'
  | 'childrenImageSharp'
  | 'childrenImageSharp.children'
  | 'childrenImageSharp.children.children'
  | 'childrenImageSharp.children.children.children'
  | 'childrenImageSharp.children.children.id'
  | 'childrenImageSharp.children.id'
  | 'childrenImageSharp.children.internal.content'
  | 'childrenImageSharp.children.internal.contentDigest'
  | 'childrenImageSharp.children.internal.contentFilePath'
  | 'childrenImageSharp.children.internal.description'
  | 'childrenImageSharp.children.internal.fieldOwners'
  | 'childrenImageSharp.children.internal.ignoreType'
  | 'childrenImageSharp.children.internal.mediaType'
  | 'childrenImageSharp.children.internal.owner'
  | 'childrenImageSharp.children.internal.type'
  | 'childrenImageSharp.children.parent.children'
  | 'childrenImageSharp.children.parent.id'
  | 'childrenImageSharp.fixed.aspectRatio'
  | 'childrenImageSharp.fixed.base64'
  | 'childrenImageSharp.fixed.height'
  | 'childrenImageSharp.fixed.originalName'
  | 'childrenImageSharp.fixed.src'
  | 'childrenImageSharp.fixed.srcSet'
  | 'childrenImageSharp.fixed.srcSetWebp'
  | 'childrenImageSharp.fixed.srcWebp'
  | 'childrenImageSharp.fixed.tracedSVG'
  | 'childrenImageSharp.fixed.width'
  | 'childrenImageSharp.fluid.aspectRatio'
  | 'childrenImageSharp.fluid.base64'
  | 'childrenImageSharp.fluid.originalImg'
  | 'childrenImageSharp.fluid.originalName'
  | 'childrenImageSharp.fluid.presentationHeight'
  | 'childrenImageSharp.fluid.presentationWidth'
  | 'childrenImageSharp.fluid.sizes'
  | 'childrenImageSharp.fluid.src'
  | 'childrenImageSharp.fluid.srcSet'
  | 'childrenImageSharp.fluid.srcSetWebp'
  | 'childrenImageSharp.fluid.srcWebp'
  | 'childrenImageSharp.fluid.tracedSVG'
  | 'childrenImageSharp.gatsbyImageData'
  | 'childrenImageSharp.id'
  | 'childrenImageSharp.internal.content'
  | 'childrenImageSharp.internal.contentDigest'
  | 'childrenImageSharp.internal.contentFilePath'
  | 'childrenImageSharp.internal.description'
  | 'childrenImageSharp.internal.fieldOwners'
  | 'childrenImageSharp.internal.ignoreType'
  | 'childrenImageSharp.internal.mediaType'
  | 'childrenImageSharp.internal.owner'
  | 'childrenImageSharp.internal.type'
  | 'childrenImageSharp.original.height'
  | 'childrenImageSharp.original.src'
  | 'childrenImageSharp.original.width'
  | 'childrenImageSharp.parent.children'
  | 'childrenImageSharp.parent.children.children'
  | 'childrenImageSharp.parent.children.id'
  | 'childrenImageSharp.parent.id'
  | 'childrenImageSharp.parent.internal.content'
  | 'childrenImageSharp.parent.internal.contentDigest'
  | 'childrenImageSharp.parent.internal.contentFilePath'
  | 'childrenImageSharp.parent.internal.description'
  | 'childrenImageSharp.parent.internal.fieldOwners'
  | 'childrenImageSharp.parent.internal.ignoreType'
  | 'childrenImageSharp.parent.internal.mediaType'
  | 'childrenImageSharp.parent.internal.owner'
  | 'childrenImageSharp.parent.internal.type'
  | 'childrenImageSharp.parent.parent.children'
  | 'childrenImageSharp.parent.parent.id'
  | 'childrenImageSharp.resize.aspectRatio'
  | 'childrenImageSharp.resize.height'
  | 'childrenImageSharp.resize.originalName'
  | 'childrenImageSharp.resize.src'
  | 'childrenImageSharp.resize.tracedSVG'
  | 'childrenImageSharp.resize.width'
  | 'children.children'
  | 'children.children.children'
  | 'children.children.children.children'
  | 'children.children.children.id'
  | 'children.children.id'
  | 'children.children.internal.content'
  | 'children.children.internal.contentDigest'
  | 'children.children.internal.contentFilePath'
  | 'children.children.internal.description'
  | 'children.children.internal.fieldOwners'
  | 'children.children.internal.ignoreType'
  | 'children.children.internal.mediaType'
  | 'children.children.internal.owner'
  | 'children.children.internal.type'
  | 'children.children.parent.children'
  | 'children.children.parent.id'
  | 'children.id'
  | 'children.internal.content'
  | 'children.internal.contentDigest'
  | 'children.internal.contentFilePath'
  | 'children.internal.description'
  | 'children.internal.fieldOwners'
  | 'children.internal.ignoreType'
  | 'children.internal.mediaType'
  | 'children.internal.owner'
  | 'children.internal.type'
  | 'children.parent.children'
  | 'children.parent.children.children'
  | 'children.parent.children.id'
  | 'children.parent.id'
  | 'children.parent.internal.content'
  | 'children.parent.internal.contentDigest'
  | 'children.parent.internal.contentFilePath'
  | 'children.parent.internal.description'
  | 'children.parent.internal.fieldOwners'
  | 'children.parent.internal.ignoreType'
  | 'children.parent.internal.mediaType'
  | 'children.parent.internal.owner'
  | 'children.parent.internal.type'
  | 'children.parent.parent.children'
  | 'children.parent.parent.id'
  | 'ctime'
  | 'ctimeMs'
  | 'dev'
  | 'dir'
  | 'ext'
  | 'extension'
  | 'gid'
  | 'id'
  | 'ino'
  | 'internal.content'
  | 'internal.contentDigest'
  | 'internal.contentFilePath'
  | 'internal.description'
  | 'internal.fieldOwners'
  | 'internal.ignoreType'
  | 'internal.mediaType'
  | 'internal.owner'
  | 'internal.type'
  | 'mode'
  | 'modifiedTime'
  | 'mtime'
  | 'mtimeMs'
  | 'name'
  | 'nlink'
  | 'parent.children'
  | 'parent.children.children'
  | 'parent.children.children.children'
  | 'parent.children.children.id'
  | 'parent.children.id'
  | 'parent.children.internal.content'
  | 'parent.children.internal.contentDigest'
  | 'parent.children.internal.contentFilePath'
  | 'parent.children.internal.description'
  | 'parent.children.internal.fieldOwners'
  | 'parent.children.internal.ignoreType'
  | 'parent.children.internal.mediaType'
  | 'parent.children.internal.owner'
  | 'parent.children.internal.type'
  | 'parent.children.parent.children'
  | 'parent.children.parent.id'
  | 'parent.id'
  | 'parent.internal.content'
  | 'parent.internal.contentDigest'
  | 'parent.internal.contentFilePath'
  | 'parent.internal.description'
  | 'parent.internal.fieldOwners'
  | 'parent.internal.ignoreType'
  | 'parent.internal.mediaType'
  | 'parent.internal.owner'
  | 'parent.internal.type'
  | 'parent.parent.children'
  | 'parent.parent.children.children'
  | 'parent.parent.children.id'
  | 'parent.parent.id'
  | 'parent.parent.internal.content'
  | 'parent.parent.internal.contentDigest'
  | 'parent.parent.internal.contentFilePath'
  | 'parent.parent.internal.description'
  | 'parent.parent.internal.fieldOwners'
  | 'parent.parent.internal.ignoreType'
  | 'parent.parent.internal.mediaType'
  | 'parent.parent.internal.owner'
  | 'parent.parent.internal.type'
  | 'parent.parent.parent.children'
  | 'parent.parent.parent.id'
  | 'prettySize'
  | 'rdev'
  | 'relativeDirectory'
  | 'relativePath'
  | 'root'
  | 'size'
  | 'sourceInstanceName'
  | 'uid'
  | 'url';

type FileFilterInput = {
  readonly absolutePath: InputMaybe<StringQueryOperatorInput>;
  readonly accessTime: InputMaybe<DateQueryOperatorInput>;
  readonly atime: InputMaybe<DateQueryOperatorInput>;
  readonly atimeMs: InputMaybe<FloatQueryOperatorInput>;
  readonly base: InputMaybe<StringQueryOperatorInput>;
  readonly birthTime: InputMaybe<DateQueryOperatorInput>;
  readonly birthtime: InputMaybe<DateQueryOperatorInput>;
  readonly birthtimeMs: InputMaybe<FloatQueryOperatorInput>;
  readonly blksize: InputMaybe<IntQueryOperatorInput>;
  readonly blocks: InputMaybe<IntQueryOperatorInput>;
  readonly changeTime: InputMaybe<DateQueryOperatorInput>;
  readonly childImageSharp: InputMaybe<ImageSharpFilterInput>;
  readonly children: InputMaybe<NodeFilterListInput>;
  readonly childrenImageSharp: InputMaybe<ImageSharpFilterListInput>;
  readonly ctime: InputMaybe<DateQueryOperatorInput>;
  readonly ctimeMs: InputMaybe<FloatQueryOperatorInput>;
  readonly dev: InputMaybe<IntQueryOperatorInput>;
  readonly dir: InputMaybe<StringQueryOperatorInput>;
  readonly ext: InputMaybe<StringQueryOperatorInput>;
  readonly extension: InputMaybe<StringQueryOperatorInput>;
  readonly gid: InputMaybe<IntQueryOperatorInput>;
  readonly id: InputMaybe<StringQueryOperatorInput>;
  readonly ino: InputMaybe<FloatQueryOperatorInput>;
  readonly internal: InputMaybe<InternalFilterInput>;
  readonly mode: InputMaybe<IntQueryOperatorInput>;
  readonly modifiedTime: InputMaybe<DateQueryOperatorInput>;
  readonly mtime: InputMaybe<DateQueryOperatorInput>;
  readonly mtimeMs: InputMaybe<FloatQueryOperatorInput>;
  readonly name: InputMaybe<StringQueryOperatorInput>;
  readonly nlink: InputMaybe<IntQueryOperatorInput>;
  readonly parent: InputMaybe<NodeFilterInput>;
  readonly prettySize: InputMaybe<StringQueryOperatorInput>;
  readonly rdev: InputMaybe<IntQueryOperatorInput>;
  readonly relativeDirectory: InputMaybe<StringQueryOperatorInput>;
  readonly relativePath: InputMaybe<StringQueryOperatorInput>;
  readonly root: InputMaybe<StringQueryOperatorInput>;
  readonly size: InputMaybe<IntQueryOperatorInput>;
  readonly sourceInstanceName: InputMaybe<StringQueryOperatorInput>;
  readonly uid: InputMaybe<IntQueryOperatorInput>;
  readonly url: InputMaybe<StringQueryOperatorInput>;
};

type FileFilterListInput = {
  readonly elemMatch: InputMaybe<FileFilterInput>;
};

type FileGroupConnection = {
  readonly distinct: ReadonlyArray<Scalars['String']>;
  readonly edges: ReadonlyArray<FileEdge>;
  readonly field: Scalars['String'];
  readonly fieldValue: Maybe<Scalars['String']>;
  readonly group: ReadonlyArray<FileGroupConnection>;
  readonly max: Maybe<Scalars['Float']>;
  readonly min: Maybe<Scalars['Float']>;
  readonly nodes: ReadonlyArray<File>;
  readonly pageInfo: PageInfo;
  readonly sum: Maybe<Scalars['Float']>;
  readonly totalCount: Scalars['Int'];
};


type FileGroupConnection_distinctArgs = {
  field: FileFieldsEnum;
};


type FileGroupConnection_groupArgs = {
  field: FileFieldsEnum;
  limit: InputMaybe<Scalars['Int']>;
  skip: InputMaybe<Scalars['Int']>;
};


type FileGroupConnection_maxArgs = {
  field: FileFieldsEnum;
};


type FileGroupConnection_minArgs = {
  field: FileFieldsEnum;
};


type FileGroupConnection_sumArgs = {
  field: FileFieldsEnum;
};

type FileSortInput = {
  readonly fields: InputMaybe<ReadonlyArray<InputMaybe<FileFieldsEnum>>>;
  readonly order: InputMaybe<ReadonlyArray<InputMaybe<SortOrderEnum>>>;
};

type FloatQueryOperatorInput = {
  readonly eq: InputMaybe<Scalars['Float']>;
  readonly gt: InputMaybe<Scalars['Float']>;
  readonly gte: InputMaybe<Scalars['Float']>;
  readonly in: InputMaybe<ReadonlyArray<InputMaybe<Scalars['Float']>>>;
  readonly lt: InputMaybe<Scalars['Float']>;
  readonly lte: InputMaybe<Scalars['Float']>;
  readonly ne: InputMaybe<Scalars['Float']>;
  readonly nin: InputMaybe<ReadonlyArray<InputMaybe<Scalars['Float']>>>;
};

type GatsbyImageDataQueryOperatorInput = {
  readonly eq: InputMaybe<Scalars['GatsbyImageData']>;
  readonly in: InputMaybe<ReadonlyArray<InputMaybe<Scalars['GatsbyImageData']>>>;
  readonly ne: InputMaybe<Scalars['GatsbyImageData']>;
  readonly nin: InputMaybe<ReadonlyArray<InputMaybe<Scalars['GatsbyImageData']>>>;
};

type GatsbyImageFormat =
  | 'auto'
  | 'avif'
  | 'jpg'
  | ''
  | 'png'
  | 'webp';

type GatsbyImageLayout =
  | 'constrained'
  | 'fixed'
  | 'fullWidth';

type GatsbyImagePlaceholder =
  | 'blurred'
  | 'dominantColor'
  | 'none'
  | 'tracedSVG';

type GoogleDocs = Node & {
  readonly breadcrumb: ReadonlyArray<BreadcrumbItem>;
  /** Returns the first child node of type Mdx or null if there are no children of given type on this node */
  readonly childMdx: Maybe<Mdx>;
  readonly children: ReadonlyArray<Node>;
  /** Returns all children nodes filtered by type Mdx */
  readonly childrenMdx: Maybe<ReadonlyArray<Maybe<Mdx>>>;
  readonly cook: Maybe<Scalars['String']>;
  readonly cover: Maybe<Cover>;
  readonly createdTime: Maybe<Scalars['Date']>;
  readonly date: Maybe<Scalars['Date']>;
  readonly description: Maybe<Scalars['String']>;
  readonly dir: Maybe<Scalars['String']>;
  readonly document: Maybe<GoogleDocsDocument>;
  readonly exclude: Maybe<Scalars['Boolean']>;
  readonly id: Scalars['ID'];
  readonly images: Maybe<ReadonlyArray<Maybe<File>>>;
  readonly index: Maybe<Scalars['Boolean']>;
  readonly internal: Internal;
  readonly level: Maybe<Scalars['String']>;
  readonly markdown: Maybe<Scalars['String']>;
  readonly mimeType: Maybe<Scalars['String']>;
  readonly modifiedTime: Maybe<Scalars['Date']>;
  readonly name: Maybe<Scalars['String']>;
  readonly page: Maybe<Scalars['Boolean']>;
  readonly parent: Maybe<Node>;
  readonly parents: Maybe<ReadonlyArray<Maybe<Scalars['String']>>>;
  readonly path: Scalars['String'];
  readonly prep: Maybe<Scalars['String']>;
  readonly related: Maybe<ReadonlyArray<GoogleDocs>>;
  readonly servings: Maybe<Scalars['Int']>;
  readonly slug: Scalars['String'];
  readonly starred: Maybe<Scalars['Boolean']>;
  readonly tags: Maybe<ReadonlyArray<Maybe<Scalars['String']>>>;
  readonly template: Maybe<Scalars['String']>;
};


type GoogleDocs_createdTimeArgs = {
  difference: InputMaybe<Scalars['String']>;
  formatString: InputMaybe<Scalars['String']>;
  fromNow: InputMaybe<Scalars['Boolean']>;
  locale: InputMaybe<Scalars['String']>;
};


type GoogleDocs_dateArgs = {
  difference: InputMaybe<Scalars['String']>;
  formatString: InputMaybe<Scalars['String']>;
  fromNow: InputMaybe<Scalars['Boolean']>;
  locale: InputMaybe<Scalars['String']>;
};


type GoogleDocs_modifiedTimeArgs = {
  difference: InputMaybe<Scalars['String']>;
  formatString: InputMaybe<Scalars['String']>;
  fromNow: InputMaybe<Scalars['Boolean']>;
  locale: InputMaybe<Scalars['String']>;
};

type GoogleDocsConnection = {
  readonly distinct: ReadonlyArray<Scalars['String']>;
  readonly edges: ReadonlyArray<GoogleDocsEdge>;
  readonly group: ReadonlyArray<GoogleDocsGroupConnection>;
  readonly max: Maybe<Scalars['Float']>;
  readonly min: Maybe<Scalars['Float']>;
  readonly nodes: ReadonlyArray<GoogleDocs>;
  readonly pageInfo: PageInfo;
  readonly sum: Maybe<Scalars['Float']>;
  readonly totalCount: Scalars['Int'];
};


type GoogleDocsConnection_distinctArgs = {
  field: GoogleDocsFieldsEnum;
};


type GoogleDocsConnection_groupArgs = {
  field: GoogleDocsFieldsEnum;
  limit: InputMaybe<Scalars['Int']>;
  skip: InputMaybe<Scalars['Int']>;
};


type GoogleDocsConnection_maxArgs = {
  field: GoogleDocsFieldsEnum;
};


type GoogleDocsConnection_minArgs = {
  field: GoogleDocsFieldsEnum;
};


type GoogleDocsConnection_sumArgs = {
  field: GoogleDocsFieldsEnum;
};

type GoogleDocsDocument = {
  readonly body: Maybe<GoogleDocsDocumentBody>;
  readonly documentId: Maybe<Scalars['String']>;
  readonly documentStyle: Maybe<GoogleDocsDocumentDocumentStyle>;
  readonly footers: Maybe<GoogleDocsDocumentFooters>;
  readonly headers: Maybe<GoogleDocsDocumentHeaders>;
  readonly inlineObjects: Maybe<GoogleDocsDocumentInlineObjects>;
  readonly lists: Maybe<GoogleDocsDocumentLists>;
  readonly namedStyles: Maybe<GoogleDocsDocumentNamedStyles>;
  readonly revisionId: Maybe<Scalars['String']>;
  readonly suggestionsViewMode: Maybe<Scalars['String']>;
  readonly title: Maybe<Scalars['String']>;
};

type GoogleDocsDocumentBody = {
  readonly content: Maybe<ReadonlyArray<Maybe<GoogleDocsDocumentBodyContent>>>;
};

type GoogleDocsDocumentBodyContent = {
  readonly endIndex: Maybe<Scalars['Int']>;
  readonly paragraph: Maybe<GoogleDocsDocumentBodyContentParagraph>;
  readonly sectionBreak: Maybe<GoogleDocsDocumentBodyContentSectionBreak>;
  readonly startIndex: Maybe<Scalars['Int']>;
};

type GoogleDocsDocumentBodyContentFilterInput = {
  readonly endIndex: InputMaybe<IntQueryOperatorInput>;
  readonly paragraph: InputMaybe<GoogleDocsDocumentBodyContentParagraphFilterInput>;
  readonly sectionBreak: InputMaybe<GoogleDocsDocumentBodyContentSectionBreakFilterInput>;
  readonly startIndex: InputMaybe<IntQueryOperatorInput>;
};

type GoogleDocsDocumentBodyContentFilterListInput = {
  readonly elemMatch: InputMaybe<GoogleDocsDocumentBodyContentFilterInput>;
};

type GoogleDocsDocumentBodyContentParagraph = {
  readonly bullet: Maybe<GoogleDocsDocumentBodyContentParagraphBullet>;
  readonly elements: Maybe<ReadonlyArray<Maybe<GoogleDocsDocumentBodyContentParagraphElements>>>;
  readonly paragraphStyle: Maybe<GoogleDocsDocumentBodyContentParagraphParagraphStyle>;
};

type GoogleDocsDocumentBodyContentParagraphBullet = {
  readonly listId: Maybe<Scalars['String']>;
  readonly textStyle: Maybe<GoogleDocsDocumentBodyContentParagraphBulletTextStyle>;
};

type GoogleDocsDocumentBodyContentParagraphBulletFilterInput = {
  readonly listId: InputMaybe<StringQueryOperatorInput>;
  readonly textStyle: InputMaybe<GoogleDocsDocumentBodyContentParagraphBulletTextStyleFilterInput>;
};

type GoogleDocsDocumentBodyContentParagraphBulletTextStyle = {
  readonly underline: Maybe<Scalars['Boolean']>;
};

type GoogleDocsDocumentBodyContentParagraphBulletTextStyleFilterInput = {
  readonly underline: InputMaybe<BooleanQueryOperatorInput>;
};

type GoogleDocsDocumentBodyContentParagraphElements = {
  readonly endIndex: Maybe<Scalars['Int']>;
  readonly startIndex: Maybe<Scalars['Int']>;
  readonly textRun: Maybe<GoogleDocsDocumentBodyContentParagraphElementsTextRun>;
};

type GoogleDocsDocumentBodyContentParagraphElementsFilterInput = {
  readonly endIndex: InputMaybe<IntQueryOperatorInput>;
  readonly startIndex: InputMaybe<IntQueryOperatorInput>;
  readonly textRun: InputMaybe<GoogleDocsDocumentBodyContentParagraphElementsTextRunFilterInput>;
};

type GoogleDocsDocumentBodyContentParagraphElementsFilterListInput = {
  readonly elemMatch: InputMaybe<GoogleDocsDocumentBodyContentParagraphElementsFilterInput>;
};

type GoogleDocsDocumentBodyContentParagraphElementsTextRun = {
  readonly content: Maybe<Scalars['String']>;
  readonly textStyle: Maybe<GoogleDocsDocumentBodyContentParagraphElementsTextRunTextStyle>;
};

type GoogleDocsDocumentBodyContentParagraphElementsTextRunFilterInput = {
  readonly content: InputMaybe<StringQueryOperatorInput>;
  readonly textStyle: InputMaybe<GoogleDocsDocumentBodyContentParagraphElementsTextRunTextStyleFilterInput>;
};

type GoogleDocsDocumentBodyContentParagraphElementsTextRunTextStyle = {
  readonly bold: Maybe<Scalars['Boolean']>;
  readonly foregroundColor: Maybe<GoogleDocsDocumentBodyContentParagraphElementsTextRunTextStyleForegroundColor>;
  readonly link: Maybe<GoogleDocsDocumentBodyContentParagraphElementsTextRunTextStyleLink>;
  readonly underline: Maybe<Scalars['Boolean']>;
};

type GoogleDocsDocumentBodyContentParagraphElementsTextRunTextStyleFilterInput = {
  readonly bold: InputMaybe<BooleanQueryOperatorInput>;
  readonly foregroundColor: InputMaybe<GoogleDocsDocumentBodyContentParagraphElementsTextRunTextStyleForegroundColorFilterInput>;
  readonly link: InputMaybe<GoogleDocsDocumentBodyContentParagraphElementsTextRunTextStyleLinkFilterInput>;
  readonly underline: InputMaybe<BooleanQueryOperatorInput>;
};

type GoogleDocsDocumentBodyContentParagraphElementsTextRunTextStyleForegroundColor = {
  readonly color: Maybe<GoogleDocsDocumentBodyContentParagraphElementsTextRunTextStyleForegroundColorColor>;
};

type GoogleDocsDocumentBodyContentParagraphElementsTextRunTextStyleForegroundColorColor = {
  readonly rgbColor: Maybe<GoogleDocsDocumentBodyContentParagraphElementsTextRunTextStyleForegroundColorColorRgbColor>;
};

type GoogleDocsDocumentBodyContentParagraphElementsTextRunTextStyleForegroundColorColorFilterInput = {
  readonly rgbColor: InputMaybe<GoogleDocsDocumentBodyContentParagraphElementsTextRunTextStyleForegroundColorColorRgbColorFilterInput>;
};

type GoogleDocsDocumentBodyContentParagraphElementsTextRunTextStyleForegroundColorColorRgbColor = {
  readonly blue: Maybe<Scalars['Float']>;
  readonly green: Maybe<Scalars['Float']>;
  readonly red: Maybe<Scalars['Float']>;
};

type GoogleDocsDocumentBodyContentParagraphElementsTextRunTextStyleForegroundColorColorRgbColorFilterInput = {
  readonly blue: InputMaybe<FloatQueryOperatorInput>;
  readonly green: InputMaybe<FloatQueryOperatorInput>;
  readonly red: InputMaybe<FloatQueryOperatorInput>;
};

type GoogleDocsDocumentBodyContentParagraphElementsTextRunTextStyleForegroundColorFilterInput = {
  readonly color: InputMaybe<GoogleDocsDocumentBodyContentParagraphElementsTextRunTextStyleForegroundColorColorFilterInput>;
};

type GoogleDocsDocumentBodyContentParagraphElementsTextRunTextStyleLink = {
  readonly url: Maybe<Scalars['String']>;
};

type GoogleDocsDocumentBodyContentParagraphElementsTextRunTextStyleLinkFilterInput = {
  readonly url: InputMaybe<StringQueryOperatorInput>;
};

type GoogleDocsDocumentBodyContentParagraphFilterInput = {
  readonly bullet: InputMaybe<GoogleDocsDocumentBodyContentParagraphBulletFilterInput>;
  readonly elements: InputMaybe<GoogleDocsDocumentBodyContentParagraphElementsFilterListInput>;
  readonly paragraphStyle: InputMaybe<GoogleDocsDocumentBodyContentParagraphParagraphStyleFilterInput>;
};

type GoogleDocsDocumentBodyContentParagraphParagraphStyle = {
  readonly alignment: Maybe<Scalars['String']>;
  readonly direction: Maybe<Scalars['String']>;
  readonly headingId: Maybe<Scalars['String']>;
  readonly indentFirstLine: Maybe<GoogleDocsDocumentBodyContentParagraphParagraphStyleIndentFirstLine>;
  readonly indentStart: Maybe<GoogleDocsDocumentBodyContentParagraphParagraphStyleIndentStart>;
  readonly namedStyleType: Maybe<Scalars['String']>;
};

type GoogleDocsDocumentBodyContentParagraphParagraphStyleFilterInput = {
  readonly alignment: InputMaybe<StringQueryOperatorInput>;
  readonly direction: InputMaybe<StringQueryOperatorInput>;
  readonly headingId: InputMaybe<StringQueryOperatorInput>;
  readonly indentFirstLine: InputMaybe<GoogleDocsDocumentBodyContentParagraphParagraphStyleIndentFirstLineFilterInput>;
  readonly indentStart: InputMaybe<GoogleDocsDocumentBodyContentParagraphParagraphStyleIndentStartFilterInput>;
  readonly namedStyleType: InputMaybe<StringQueryOperatorInput>;
};

type GoogleDocsDocumentBodyContentParagraphParagraphStyleIndentFirstLine = {
  readonly magnitude: Maybe<Scalars['Int']>;
  readonly unit: Maybe<Scalars['String']>;
};

type GoogleDocsDocumentBodyContentParagraphParagraphStyleIndentFirstLineFilterInput = {
  readonly magnitude: InputMaybe<IntQueryOperatorInput>;
  readonly unit: InputMaybe<StringQueryOperatorInput>;
};

type GoogleDocsDocumentBodyContentParagraphParagraphStyleIndentStart = {
  readonly magnitude: Maybe<Scalars['Int']>;
  readonly unit: Maybe<Scalars['String']>;
};

type GoogleDocsDocumentBodyContentParagraphParagraphStyleIndentStartFilterInput = {
  readonly magnitude: InputMaybe<IntQueryOperatorInput>;
  readonly unit: InputMaybe<StringQueryOperatorInput>;
};

type GoogleDocsDocumentBodyContentSectionBreak = {
  readonly sectionStyle: Maybe<GoogleDocsDocumentBodyContentSectionBreakSectionStyle>;
};

type GoogleDocsDocumentBodyContentSectionBreakFilterInput = {
  readonly sectionStyle: InputMaybe<GoogleDocsDocumentBodyContentSectionBreakSectionStyleFilterInput>;
};

type GoogleDocsDocumentBodyContentSectionBreakSectionStyle = {
  readonly columnSeparatorStyle: Maybe<Scalars['String']>;
  readonly contentDirection: Maybe<Scalars['String']>;
  readonly sectionType: Maybe<Scalars['String']>;
};

type GoogleDocsDocumentBodyContentSectionBreakSectionStyleFilterInput = {
  readonly columnSeparatorStyle: InputMaybe<StringQueryOperatorInput>;
  readonly contentDirection: InputMaybe<StringQueryOperatorInput>;
  readonly sectionType: InputMaybe<StringQueryOperatorInput>;
};

type GoogleDocsDocumentBodyFilterInput = {
  readonly content: InputMaybe<GoogleDocsDocumentBodyContentFilterListInput>;
};

type GoogleDocsDocumentDocumentStyle = {
  readonly defaultHeaderId: Maybe<Scalars['String']>;
  readonly firstPageFooterId: Maybe<Scalars['String']>;
  readonly firstPageHeaderId: Maybe<Scalars['String']>;
  readonly marginBottom: Maybe<GoogleDocsDocumentDocumentStyleMarginBottom>;
  readonly marginFooter: Maybe<GoogleDocsDocumentDocumentStyleMarginFooter>;
  readonly marginHeader: Maybe<GoogleDocsDocumentDocumentStyleMarginHeader>;
  readonly marginLeft: Maybe<GoogleDocsDocumentDocumentStyleMarginLeft>;
  readonly marginRight: Maybe<GoogleDocsDocumentDocumentStyleMarginRight>;
  readonly marginTop: Maybe<GoogleDocsDocumentDocumentStyleMarginTop>;
  readonly pageNumberStart: Maybe<Scalars['Int']>;
  readonly pageSize: Maybe<GoogleDocsDocumentDocumentStylePageSize>;
  readonly useCustomHeaderFooterMargins: Maybe<Scalars['Boolean']>;
  readonly useFirstPageHeaderFooter: Maybe<Scalars['Boolean']>;
};

type GoogleDocsDocumentDocumentStyleFilterInput = {
  readonly defaultHeaderId: InputMaybe<StringQueryOperatorInput>;
  readonly firstPageFooterId: InputMaybe<StringQueryOperatorInput>;
  readonly firstPageHeaderId: InputMaybe<StringQueryOperatorInput>;
  readonly marginBottom: InputMaybe<GoogleDocsDocumentDocumentStyleMarginBottomFilterInput>;
  readonly marginFooter: InputMaybe<GoogleDocsDocumentDocumentStyleMarginFooterFilterInput>;
  readonly marginHeader: InputMaybe<GoogleDocsDocumentDocumentStyleMarginHeaderFilterInput>;
  readonly marginLeft: InputMaybe<GoogleDocsDocumentDocumentStyleMarginLeftFilterInput>;
  readonly marginRight: InputMaybe<GoogleDocsDocumentDocumentStyleMarginRightFilterInput>;
  readonly marginTop: InputMaybe<GoogleDocsDocumentDocumentStyleMarginTopFilterInput>;
  readonly pageNumberStart: InputMaybe<IntQueryOperatorInput>;
  readonly pageSize: InputMaybe<GoogleDocsDocumentDocumentStylePageSizeFilterInput>;
  readonly useCustomHeaderFooterMargins: InputMaybe<BooleanQueryOperatorInput>;
  readonly useFirstPageHeaderFooter: InputMaybe<BooleanQueryOperatorInput>;
};

type GoogleDocsDocumentDocumentStyleMarginBottom = {
  readonly magnitude: Maybe<Scalars['Int']>;
  readonly unit: Maybe<Scalars['String']>;
};

type GoogleDocsDocumentDocumentStyleMarginBottomFilterInput = {
  readonly magnitude: InputMaybe<IntQueryOperatorInput>;
  readonly unit: InputMaybe<StringQueryOperatorInput>;
};

type GoogleDocsDocumentDocumentStyleMarginFooter = {
  readonly magnitude: Maybe<Scalars['Int']>;
  readonly unit: Maybe<Scalars['String']>;
};

type GoogleDocsDocumentDocumentStyleMarginFooterFilterInput = {
  readonly magnitude: InputMaybe<IntQueryOperatorInput>;
  readonly unit: InputMaybe<StringQueryOperatorInput>;
};

type GoogleDocsDocumentDocumentStyleMarginHeader = {
  readonly magnitude: Maybe<Scalars['Int']>;
  readonly unit: Maybe<Scalars['String']>;
};

type GoogleDocsDocumentDocumentStyleMarginHeaderFilterInput = {
  readonly magnitude: InputMaybe<IntQueryOperatorInput>;
  readonly unit: InputMaybe<StringQueryOperatorInput>;
};

type GoogleDocsDocumentDocumentStyleMarginLeft = {
  readonly magnitude: Maybe<Scalars['Int']>;
  readonly unit: Maybe<Scalars['String']>;
};

type GoogleDocsDocumentDocumentStyleMarginLeftFilterInput = {
  readonly magnitude: InputMaybe<IntQueryOperatorInput>;
  readonly unit: InputMaybe<StringQueryOperatorInput>;
};

type GoogleDocsDocumentDocumentStyleMarginRight = {
  readonly magnitude: Maybe<Scalars['Int']>;
  readonly unit: Maybe<Scalars['String']>;
};

type GoogleDocsDocumentDocumentStyleMarginRightFilterInput = {
  readonly magnitude: InputMaybe<IntQueryOperatorInput>;
  readonly unit: InputMaybe<StringQueryOperatorInput>;
};

type GoogleDocsDocumentDocumentStyleMarginTop = {
  readonly magnitude: Maybe<Scalars['Int']>;
  readonly unit: Maybe<Scalars['String']>;
};

type GoogleDocsDocumentDocumentStyleMarginTopFilterInput = {
  readonly magnitude: InputMaybe<IntQueryOperatorInput>;
  readonly unit: InputMaybe<StringQueryOperatorInput>;
};

type GoogleDocsDocumentDocumentStylePageSize = {
  readonly height: Maybe<GoogleDocsDocumentDocumentStylePageSizeHeight>;
  readonly width: Maybe<GoogleDocsDocumentDocumentStylePageSizeWidth>;
};

type GoogleDocsDocumentDocumentStylePageSizeFilterInput = {
  readonly height: InputMaybe<GoogleDocsDocumentDocumentStylePageSizeHeightFilterInput>;
  readonly width: InputMaybe<GoogleDocsDocumentDocumentStylePageSizeWidthFilterInput>;
};

type GoogleDocsDocumentDocumentStylePageSizeHeight = {
  readonly magnitude: Maybe<Scalars['Int']>;
  readonly unit: Maybe<Scalars['String']>;
};

type GoogleDocsDocumentDocumentStylePageSizeHeightFilterInput = {
  readonly magnitude: InputMaybe<IntQueryOperatorInput>;
  readonly unit: InputMaybe<StringQueryOperatorInput>;
};

type GoogleDocsDocumentDocumentStylePageSizeWidth = {
  readonly magnitude: Maybe<Scalars['Int']>;
  readonly unit: Maybe<Scalars['String']>;
};

type GoogleDocsDocumentDocumentStylePageSizeWidthFilterInput = {
  readonly magnitude: InputMaybe<IntQueryOperatorInput>;
  readonly unit: InputMaybe<StringQueryOperatorInput>;
};

type GoogleDocsDocumentFilterInput = {
  readonly body: InputMaybe<GoogleDocsDocumentBodyFilterInput>;
  readonly documentId: InputMaybe<StringQueryOperatorInput>;
  readonly documentStyle: InputMaybe<GoogleDocsDocumentDocumentStyleFilterInput>;
  readonly footers: InputMaybe<GoogleDocsDocumentFootersFilterInput>;
  readonly headers: InputMaybe<GoogleDocsDocumentHeadersFilterInput>;
  readonly inlineObjects: InputMaybe<GoogleDocsDocumentInlineObjectsFilterInput>;
  readonly lists: InputMaybe<GoogleDocsDocumentListsFilterInput>;
  readonly namedStyles: InputMaybe<GoogleDocsDocumentNamedStylesFilterInput>;
  readonly revisionId: InputMaybe<StringQueryOperatorInput>;
  readonly suggestionsViewMode: InputMaybe<StringQueryOperatorInput>;
  readonly title: InputMaybe<StringQueryOperatorInput>;
};

type GoogleDocsDocumentFooters = {
  readonly kix_ces0yq1s0u9w: Maybe<GoogleDocsDocumentFootersKix_ces0yq1s0u9w>;
};

type GoogleDocsDocumentFootersFilterInput = {
  readonly kix_ces0yq1s0u9w: InputMaybe<GoogleDocsDocumentFootersKix_ces0yq1s0u9wFilterInput>;
};

type GoogleDocsDocumentFootersKix_ces0yq1s0u9w = {
  readonly content: Maybe<ReadonlyArray<Maybe<GoogleDocsDocumentFootersKix_ces0yq1s0u9wContent>>>;
  readonly footerId: Maybe<Scalars['String']>;
};

type GoogleDocsDocumentFootersKix_ces0yq1s0u9wContent = {
  readonly endIndex: Maybe<Scalars['Int']>;
  readonly paragraph: Maybe<GoogleDocsDocumentFootersKix_ces0yq1s0u9wContentParagraph>;
};

type GoogleDocsDocumentFootersKix_ces0yq1s0u9wContentFilterInput = {
  readonly endIndex: InputMaybe<IntQueryOperatorInput>;
  readonly paragraph: InputMaybe<GoogleDocsDocumentFootersKix_ces0yq1s0u9wContentParagraphFilterInput>;
};

type GoogleDocsDocumentFootersKix_ces0yq1s0u9wContentFilterListInput = {
  readonly elemMatch: InputMaybe<GoogleDocsDocumentFootersKix_ces0yq1s0u9wContentFilterInput>;
};

type GoogleDocsDocumentFootersKix_ces0yq1s0u9wContentParagraph = {
  readonly elements: Maybe<ReadonlyArray<Maybe<GoogleDocsDocumentFootersKix_ces0yq1s0u9wContentParagraphElements>>>;
  readonly paragraphStyle: Maybe<GoogleDocsDocumentFootersKix_ces0yq1s0u9wContentParagraphParagraphStyle>;
};

type GoogleDocsDocumentFootersKix_ces0yq1s0u9wContentParagraphElements = {
  readonly endIndex: Maybe<Scalars['Int']>;
  readonly textRun: Maybe<GoogleDocsDocumentFootersKix_ces0yq1s0u9wContentParagraphElementsTextRun>;
};

type GoogleDocsDocumentFootersKix_ces0yq1s0u9wContentParagraphElementsFilterInput = {
  readonly endIndex: InputMaybe<IntQueryOperatorInput>;
  readonly textRun: InputMaybe<GoogleDocsDocumentFootersKix_ces0yq1s0u9wContentParagraphElementsTextRunFilterInput>;
};

type GoogleDocsDocumentFootersKix_ces0yq1s0u9wContentParagraphElementsFilterListInput = {
  readonly elemMatch: InputMaybe<GoogleDocsDocumentFootersKix_ces0yq1s0u9wContentParagraphElementsFilterInput>;
};

type GoogleDocsDocumentFootersKix_ces0yq1s0u9wContentParagraphElementsTextRun = {
  readonly content: Maybe<Scalars['String']>;
};

type GoogleDocsDocumentFootersKix_ces0yq1s0u9wContentParagraphElementsTextRunFilterInput = {
  readonly content: InputMaybe<StringQueryOperatorInput>;
};

type GoogleDocsDocumentFootersKix_ces0yq1s0u9wContentParagraphFilterInput = {
  readonly elements: InputMaybe<GoogleDocsDocumentFootersKix_ces0yq1s0u9wContentParagraphElementsFilterListInput>;
  readonly paragraphStyle: InputMaybe<GoogleDocsDocumentFootersKix_ces0yq1s0u9wContentParagraphParagraphStyleFilterInput>;
};

type GoogleDocsDocumentFootersKix_ces0yq1s0u9wContentParagraphParagraphStyle = {
  readonly direction: Maybe<Scalars['String']>;
  readonly namedStyleType: Maybe<Scalars['String']>;
};

type GoogleDocsDocumentFootersKix_ces0yq1s0u9wContentParagraphParagraphStyleFilterInput = {
  readonly direction: InputMaybe<StringQueryOperatorInput>;
  readonly namedStyleType: InputMaybe<StringQueryOperatorInput>;
};

type GoogleDocsDocumentFootersKix_ces0yq1s0u9wFilterInput = {
  readonly content: InputMaybe<GoogleDocsDocumentFootersKix_ces0yq1s0u9wContentFilterListInput>;
  readonly footerId: InputMaybe<StringQueryOperatorInput>;
};

type GoogleDocsDocumentHeaders = {
  readonly kix_80xbd1bs2xxd: Maybe<GoogleDocsDocumentHeadersKix_80xbd1bs2xxd>;
  readonly kix_q0jj7o765vkn: Maybe<GoogleDocsDocumentHeadersKix_q0jj7o765vkn>;
};

type GoogleDocsDocumentHeadersFilterInput = {
  readonly kix_80xbd1bs2xxd: InputMaybe<GoogleDocsDocumentHeadersKix_80xbd1bs2xxdFilterInput>;
  readonly kix_q0jj7o765vkn: InputMaybe<GoogleDocsDocumentHeadersKix_q0jj7o765vknFilterInput>;
};

type GoogleDocsDocumentHeadersKix_80xbd1bs2xxd = {
  readonly content: Maybe<ReadonlyArray<Maybe<GoogleDocsDocumentHeadersKix_80xbd1bs2xxdContent>>>;
  readonly headerId: Maybe<Scalars['String']>;
};

type GoogleDocsDocumentHeadersKix_80xbd1bs2xxdContent = {
  readonly endIndex: Maybe<Scalars['Int']>;
  readonly paragraph: Maybe<GoogleDocsDocumentHeadersKix_80xbd1bs2xxdContentParagraph>;
};

type GoogleDocsDocumentHeadersKix_80xbd1bs2xxdContentFilterInput = {
  readonly endIndex: InputMaybe<IntQueryOperatorInput>;
  readonly paragraph: InputMaybe<GoogleDocsDocumentHeadersKix_80xbd1bs2xxdContentParagraphFilterInput>;
};

type GoogleDocsDocumentHeadersKix_80xbd1bs2xxdContentFilterListInput = {
  readonly elemMatch: InputMaybe<GoogleDocsDocumentHeadersKix_80xbd1bs2xxdContentFilterInput>;
};

type GoogleDocsDocumentHeadersKix_80xbd1bs2xxdContentParagraph = {
  readonly elements: Maybe<ReadonlyArray<Maybe<GoogleDocsDocumentHeadersKix_80xbd1bs2xxdContentParagraphElements>>>;
  readonly paragraphStyle: Maybe<GoogleDocsDocumentHeadersKix_80xbd1bs2xxdContentParagraphParagraphStyle>;
};

type GoogleDocsDocumentHeadersKix_80xbd1bs2xxdContentParagraphElements = {
  readonly endIndex: Maybe<Scalars['Int']>;
  readonly inlineObjectElement: Maybe<GoogleDocsDocumentHeadersKix_80xbd1bs2xxdContentParagraphElementsInlineObjectElement>;
  readonly startIndex: Maybe<Scalars['Int']>;
  readonly textRun: Maybe<GoogleDocsDocumentHeadersKix_80xbd1bs2xxdContentParagraphElementsTextRun>;
};

type GoogleDocsDocumentHeadersKix_80xbd1bs2xxdContentParagraphElementsFilterInput = {
  readonly endIndex: InputMaybe<IntQueryOperatorInput>;
  readonly inlineObjectElement: InputMaybe<GoogleDocsDocumentHeadersKix_80xbd1bs2xxdContentParagraphElementsInlineObjectElementFilterInput>;
  readonly startIndex: InputMaybe<IntQueryOperatorInput>;
  readonly textRun: InputMaybe<GoogleDocsDocumentHeadersKix_80xbd1bs2xxdContentParagraphElementsTextRunFilterInput>;
};

type GoogleDocsDocumentHeadersKix_80xbd1bs2xxdContentParagraphElementsFilterListInput = {
  readonly elemMatch: InputMaybe<GoogleDocsDocumentHeadersKix_80xbd1bs2xxdContentParagraphElementsFilterInput>;
};

type GoogleDocsDocumentHeadersKix_80xbd1bs2xxdContentParagraphElementsInlineObjectElement = {
  readonly inlineObjectId: Maybe<Scalars['String']>;
};

type GoogleDocsDocumentHeadersKix_80xbd1bs2xxdContentParagraphElementsInlineObjectElementFilterInput = {
  readonly inlineObjectId: InputMaybe<StringQueryOperatorInput>;
};

type GoogleDocsDocumentHeadersKix_80xbd1bs2xxdContentParagraphElementsTextRun = {
  readonly content: Maybe<Scalars['String']>;
};

type GoogleDocsDocumentHeadersKix_80xbd1bs2xxdContentParagraphElementsTextRunFilterInput = {
  readonly content: InputMaybe<StringQueryOperatorInput>;
};

type GoogleDocsDocumentHeadersKix_80xbd1bs2xxdContentParagraphFilterInput = {
  readonly elements: InputMaybe<GoogleDocsDocumentHeadersKix_80xbd1bs2xxdContentParagraphElementsFilterListInput>;
  readonly paragraphStyle: InputMaybe<GoogleDocsDocumentHeadersKix_80xbd1bs2xxdContentParagraphParagraphStyleFilterInput>;
};

type GoogleDocsDocumentHeadersKix_80xbd1bs2xxdContentParagraphParagraphStyle = {
  readonly direction: Maybe<Scalars['String']>;
  readonly namedStyleType: Maybe<Scalars['String']>;
};

type GoogleDocsDocumentHeadersKix_80xbd1bs2xxdContentParagraphParagraphStyleFilterInput = {
  readonly direction: InputMaybe<StringQueryOperatorInput>;
  readonly namedStyleType: InputMaybe<StringQueryOperatorInput>;
};

type GoogleDocsDocumentHeadersKix_80xbd1bs2xxdFilterInput = {
  readonly content: InputMaybe<GoogleDocsDocumentHeadersKix_80xbd1bs2xxdContentFilterListInput>;
  readonly headerId: InputMaybe<StringQueryOperatorInput>;
};

type GoogleDocsDocumentHeadersKix_q0jj7o765vkn = {
  readonly content: Maybe<ReadonlyArray<Maybe<GoogleDocsDocumentHeadersKix_q0jj7o765vknContent>>>;
  readonly headerId: Maybe<Scalars['String']>;
};

type GoogleDocsDocumentHeadersKix_q0jj7o765vknContent = {
  readonly endIndex: Maybe<Scalars['Int']>;
  readonly paragraph: Maybe<GoogleDocsDocumentHeadersKix_q0jj7o765vknContentParagraph>;
};

type GoogleDocsDocumentHeadersKix_q0jj7o765vknContentFilterInput = {
  readonly endIndex: InputMaybe<IntQueryOperatorInput>;
  readonly paragraph: InputMaybe<GoogleDocsDocumentHeadersKix_q0jj7o765vknContentParagraphFilterInput>;
};

type GoogleDocsDocumentHeadersKix_q0jj7o765vknContentFilterListInput = {
  readonly elemMatch: InputMaybe<GoogleDocsDocumentHeadersKix_q0jj7o765vknContentFilterInput>;
};

type GoogleDocsDocumentHeadersKix_q0jj7o765vknContentParagraph = {
  readonly elements: Maybe<ReadonlyArray<Maybe<GoogleDocsDocumentHeadersKix_q0jj7o765vknContentParagraphElements>>>;
  readonly paragraphStyle: Maybe<GoogleDocsDocumentHeadersKix_q0jj7o765vknContentParagraphParagraphStyle>;
};

type GoogleDocsDocumentHeadersKix_q0jj7o765vknContentParagraphElements = {
  readonly endIndex: Maybe<Scalars['Int']>;
  readonly textRun: Maybe<GoogleDocsDocumentHeadersKix_q0jj7o765vknContentParagraphElementsTextRun>;
};

type GoogleDocsDocumentHeadersKix_q0jj7o765vknContentParagraphElementsFilterInput = {
  readonly endIndex: InputMaybe<IntQueryOperatorInput>;
  readonly textRun: InputMaybe<GoogleDocsDocumentHeadersKix_q0jj7o765vknContentParagraphElementsTextRunFilterInput>;
};

type GoogleDocsDocumentHeadersKix_q0jj7o765vknContentParagraphElementsFilterListInput = {
  readonly elemMatch: InputMaybe<GoogleDocsDocumentHeadersKix_q0jj7o765vknContentParagraphElementsFilterInput>;
};

type GoogleDocsDocumentHeadersKix_q0jj7o765vknContentParagraphElementsTextRun = {
  readonly content: Maybe<Scalars['String']>;
};

type GoogleDocsDocumentHeadersKix_q0jj7o765vknContentParagraphElementsTextRunFilterInput = {
  readonly content: InputMaybe<StringQueryOperatorInput>;
};

type GoogleDocsDocumentHeadersKix_q0jj7o765vknContentParagraphFilterInput = {
  readonly elements: InputMaybe<GoogleDocsDocumentHeadersKix_q0jj7o765vknContentParagraphElementsFilterListInput>;
  readonly paragraphStyle: InputMaybe<GoogleDocsDocumentHeadersKix_q0jj7o765vknContentParagraphParagraphStyleFilterInput>;
};

type GoogleDocsDocumentHeadersKix_q0jj7o765vknContentParagraphParagraphStyle = {
  readonly direction: Maybe<Scalars['String']>;
  readonly namedStyleType: Maybe<Scalars['String']>;
};

type GoogleDocsDocumentHeadersKix_q0jj7o765vknContentParagraphParagraphStyleFilterInput = {
  readonly direction: InputMaybe<StringQueryOperatorInput>;
  readonly namedStyleType: InputMaybe<StringQueryOperatorInput>;
};

type GoogleDocsDocumentHeadersKix_q0jj7o765vknFilterInput = {
  readonly content: InputMaybe<GoogleDocsDocumentHeadersKix_q0jj7o765vknContentFilterListInput>;
  readonly headerId: InputMaybe<StringQueryOperatorInput>;
};

type GoogleDocsDocumentInlineObjects = {
  readonly kix_eowahsesxtr2: Maybe<GoogleDocsDocumentInlineObjectsKix_eowahsesxtr2>;
  readonly kix_rhb2qyc6rw7f: Maybe<GoogleDocsDocumentInlineObjectsKix_rhb2qyc6rw7f>;
  readonly kix_y6go88nd7iyp: Maybe<GoogleDocsDocumentInlineObjectsKix_y6go88nd7iyp>;
};

type GoogleDocsDocumentInlineObjectsFilterInput = {
  readonly kix_eowahsesxtr2: InputMaybe<GoogleDocsDocumentInlineObjectsKix_eowahsesxtr2FilterInput>;
  readonly kix_rhb2qyc6rw7f: InputMaybe<GoogleDocsDocumentInlineObjectsKix_rhb2qyc6rw7fFilterInput>;
  readonly kix_y6go88nd7iyp: InputMaybe<GoogleDocsDocumentInlineObjectsKix_y6go88nd7iypFilterInput>;
};

type GoogleDocsDocumentInlineObjectsKix_eowahsesxtr2 = {
  readonly inlineObjectProperties: Maybe<GoogleDocsDocumentInlineObjectsKix_eowahsesxtr2InlineObjectProperties>;
  readonly objectId: Maybe<Scalars['String']>;
};

type GoogleDocsDocumentInlineObjectsKix_eowahsesxtr2FilterInput = {
  readonly inlineObjectProperties: InputMaybe<GoogleDocsDocumentInlineObjectsKix_eowahsesxtr2InlineObjectPropertiesFilterInput>;
  readonly objectId: InputMaybe<StringQueryOperatorInput>;
};

type GoogleDocsDocumentInlineObjectsKix_eowahsesxtr2InlineObjectProperties = {
  readonly embeddedObject: Maybe<GoogleDocsDocumentInlineObjectsKix_eowahsesxtr2InlineObjectPropertiesEmbeddedObject>;
};

type GoogleDocsDocumentInlineObjectsKix_eowahsesxtr2InlineObjectPropertiesEmbeddedObject = {
  readonly embeddedObjectBorder: Maybe<GoogleDocsDocumentInlineObjectsKix_eowahsesxtr2InlineObjectPropertiesEmbeddedObjectEmbeddedObjectBorder>;
  readonly imageProperties: Maybe<GoogleDocsDocumentInlineObjectsKix_eowahsesxtr2InlineObjectPropertiesEmbeddedObjectImageProperties>;
  readonly marginBottom: Maybe<GoogleDocsDocumentInlineObjectsKix_eowahsesxtr2InlineObjectPropertiesEmbeddedObjectMarginBottom>;
  readonly marginLeft: Maybe<GoogleDocsDocumentInlineObjectsKix_eowahsesxtr2InlineObjectPropertiesEmbeddedObjectMarginLeft>;
  readonly marginRight: Maybe<GoogleDocsDocumentInlineObjectsKix_eowahsesxtr2InlineObjectPropertiesEmbeddedObjectMarginRight>;
  readonly marginTop: Maybe<GoogleDocsDocumentInlineObjectsKix_eowahsesxtr2InlineObjectPropertiesEmbeddedObjectMarginTop>;
  readonly size: Maybe<GoogleDocsDocumentInlineObjectsKix_eowahsesxtr2InlineObjectPropertiesEmbeddedObjectSize>;
};

type GoogleDocsDocumentInlineObjectsKix_eowahsesxtr2InlineObjectPropertiesEmbeddedObjectEmbeddedObjectBorder = {
  readonly dashStyle: Maybe<Scalars['String']>;
  readonly propertyState: Maybe<Scalars['String']>;
  readonly width: Maybe<GoogleDocsDocumentInlineObjectsKix_eowahsesxtr2InlineObjectPropertiesEmbeddedObjectEmbeddedObjectBorderWidth>;
};

type GoogleDocsDocumentInlineObjectsKix_eowahsesxtr2InlineObjectPropertiesEmbeddedObjectEmbeddedObjectBorderFilterInput = {
  readonly dashStyle: InputMaybe<StringQueryOperatorInput>;
  readonly propertyState: InputMaybe<StringQueryOperatorInput>;
  readonly width: InputMaybe<GoogleDocsDocumentInlineObjectsKix_eowahsesxtr2InlineObjectPropertiesEmbeddedObjectEmbeddedObjectBorderWidthFilterInput>;
};

type GoogleDocsDocumentInlineObjectsKix_eowahsesxtr2InlineObjectPropertiesEmbeddedObjectEmbeddedObjectBorderWidth = {
  readonly unit: Maybe<Scalars['String']>;
};

type GoogleDocsDocumentInlineObjectsKix_eowahsesxtr2InlineObjectPropertiesEmbeddedObjectEmbeddedObjectBorderWidthFilterInput = {
  readonly unit: InputMaybe<StringQueryOperatorInput>;
};

type GoogleDocsDocumentInlineObjectsKix_eowahsesxtr2InlineObjectPropertiesEmbeddedObjectFilterInput = {
  readonly embeddedObjectBorder: InputMaybe<GoogleDocsDocumentInlineObjectsKix_eowahsesxtr2InlineObjectPropertiesEmbeddedObjectEmbeddedObjectBorderFilterInput>;
  readonly imageProperties: InputMaybe<GoogleDocsDocumentInlineObjectsKix_eowahsesxtr2InlineObjectPropertiesEmbeddedObjectImagePropertiesFilterInput>;
  readonly marginBottom: InputMaybe<GoogleDocsDocumentInlineObjectsKix_eowahsesxtr2InlineObjectPropertiesEmbeddedObjectMarginBottomFilterInput>;
  readonly marginLeft: InputMaybe<GoogleDocsDocumentInlineObjectsKix_eowahsesxtr2InlineObjectPropertiesEmbeddedObjectMarginLeftFilterInput>;
  readonly marginRight: InputMaybe<GoogleDocsDocumentInlineObjectsKix_eowahsesxtr2InlineObjectPropertiesEmbeddedObjectMarginRightFilterInput>;
  readonly marginTop: InputMaybe<GoogleDocsDocumentInlineObjectsKix_eowahsesxtr2InlineObjectPropertiesEmbeddedObjectMarginTopFilterInput>;
  readonly size: InputMaybe<GoogleDocsDocumentInlineObjectsKix_eowahsesxtr2InlineObjectPropertiesEmbeddedObjectSizeFilterInput>;
};

type GoogleDocsDocumentInlineObjectsKix_eowahsesxtr2InlineObjectPropertiesEmbeddedObjectImageProperties = {
  readonly contentUri: Maybe<Scalars['String']>;
};

type GoogleDocsDocumentInlineObjectsKix_eowahsesxtr2InlineObjectPropertiesEmbeddedObjectImagePropertiesFilterInput = {
  readonly contentUri: InputMaybe<StringQueryOperatorInput>;
};

type GoogleDocsDocumentInlineObjectsKix_eowahsesxtr2InlineObjectPropertiesEmbeddedObjectMarginBottom = {
  readonly magnitude: Maybe<Scalars['Int']>;
  readonly unit: Maybe<Scalars['String']>;
};

type GoogleDocsDocumentInlineObjectsKix_eowahsesxtr2InlineObjectPropertiesEmbeddedObjectMarginBottomFilterInput = {
  readonly magnitude: InputMaybe<IntQueryOperatorInput>;
  readonly unit: InputMaybe<StringQueryOperatorInput>;
};

type GoogleDocsDocumentInlineObjectsKix_eowahsesxtr2InlineObjectPropertiesEmbeddedObjectMarginLeft = {
  readonly magnitude: Maybe<Scalars['Int']>;
  readonly unit: Maybe<Scalars['String']>;
};

type GoogleDocsDocumentInlineObjectsKix_eowahsesxtr2InlineObjectPropertiesEmbeddedObjectMarginLeftFilterInput = {
  readonly magnitude: InputMaybe<IntQueryOperatorInput>;
  readonly unit: InputMaybe<StringQueryOperatorInput>;
};

type GoogleDocsDocumentInlineObjectsKix_eowahsesxtr2InlineObjectPropertiesEmbeddedObjectMarginRight = {
  readonly magnitude: Maybe<Scalars['Int']>;
  readonly unit: Maybe<Scalars['String']>;
};

type GoogleDocsDocumentInlineObjectsKix_eowahsesxtr2InlineObjectPropertiesEmbeddedObjectMarginRightFilterInput = {
  readonly magnitude: InputMaybe<IntQueryOperatorInput>;
  readonly unit: InputMaybe<StringQueryOperatorInput>;
};

type GoogleDocsDocumentInlineObjectsKix_eowahsesxtr2InlineObjectPropertiesEmbeddedObjectMarginTop = {
  readonly magnitude: Maybe<Scalars['Int']>;
  readonly unit: Maybe<Scalars['String']>;
};

type GoogleDocsDocumentInlineObjectsKix_eowahsesxtr2InlineObjectPropertiesEmbeddedObjectMarginTopFilterInput = {
  readonly magnitude: InputMaybe<IntQueryOperatorInput>;
  readonly unit: InputMaybe<StringQueryOperatorInput>;
};

type GoogleDocsDocumentInlineObjectsKix_eowahsesxtr2InlineObjectPropertiesEmbeddedObjectSize = {
  readonly height: Maybe<GoogleDocsDocumentInlineObjectsKix_eowahsesxtr2InlineObjectPropertiesEmbeddedObjectSizeHeight>;
  readonly width: Maybe<GoogleDocsDocumentInlineObjectsKix_eowahsesxtr2InlineObjectPropertiesEmbeddedObjectSizeWidth>;
};

type GoogleDocsDocumentInlineObjectsKix_eowahsesxtr2InlineObjectPropertiesEmbeddedObjectSizeFilterInput = {
  readonly height: InputMaybe<GoogleDocsDocumentInlineObjectsKix_eowahsesxtr2InlineObjectPropertiesEmbeddedObjectSizeHeightFilterInput>;
  readonly width: InputMaybe<GoogleDocsDocumentInlineObjectsKix_eowahsesxtr2InlineObjectPropertiesEmbeddedObjectSizeWidthFilterInput>;
};

type GoogleDocsDocumentInlineObjectsKix_eowahsesxtr2InlineObjectPropertiesEmbeddedObjectSizeHeight = {
  readonly magnitude: Maybe<Scalars['Int']>;
  readonly unit: Maybe<Scalars['String']>;
};

type GoogleDocsDocumentInlineObjectsKix_eowahsesxtr2InlineObjectPropertiesEmbeddedObjectSizeHeightFilterInput = {
  readonly magnitude: InputMaybe<IntQueryOperatorInput>;
  readonly unit: InputMaybe<StringQueryOperatorInput>;
};

type GoogleDocsDocumentInlineObjectsKix_eowahsesxtr2InlineObjectPropertiesEmbeddedObjectSizeWidth = {
  readonly magnitude: Maybe<Scalars['Int']>;
  readonly unit: Maybe<Scalars['String']>;
};

type GoogleDocsDocumentInlineObjectsKix_eowahsesxtr2InlineObjectPropertiesEmbeddedObjectSizeWidthFilterInput = {
  readonly magnitude: InputMaybe<IntQueryOperatorInput>;
  readonly unit: InputMaybe<StringQueryOperatorInput>;
};

type GoogleDocsDocumentInlineObjectsKix_eowahsesxtr2InlineObjectPropertiesFilterInput = {
  readonly embeddedObject: InputMaybe<GoogleDocsDocumentInlineObjectsKix_eowahsesxtr2InlineObjectPropertiesEmbeddedObjectFilterInput>;
};

type GoogleDocsDocumentInlineObjectsKix_rhb2qyc6rw7f = {
  readonly inlineObjectProperties: Maybe<GoogleDocsDocumentInlineObjectsKix_rhb2qyc6rw7fInlineObjectProperties>;
  readonly objectId: Maybe<Scalars['String']>;
};

type GoogleDocsDocumentInlineObjectsKix_rhb2qyc6rw7fFilterInput = {
  readonly inlineObjectProperties: InputMaybe<GoogleDocsDocumentInlineObjectsKix_rhb2qyc6rw7fInlineObjectPropertiesFilterInput>;
  readonly objectId: InputMaybe<StringQueryOperatorInput>;
};

type GoogleDocsDocumentInlineObjectsKix_rhb2qyc6rw7fInlineObjectProperties = {
  readonly embeddedObject: Maybe<GoogleDocsDocumentInlineObjectsKix_rhb2qyc6rw7fInlineObjectPropertiesEmbeddedObject>;
};

type GoogleDocsDocumentInlineObjectsKix_rhb2qyc6rw7fInlineObjectPropertiesEmbeddedObject = {
  readonly embeddedObjectBorder: Maybe<GoogleDocsDocumentInlineObjectsKix_rhb2qyc6rw7fInlineObjectPropertiesEmbeddedObjectEmbeddedObjectBorder>;
  readonly imageProperties: Maybe<GoogleDocsDocumentInlineObjectsKix_rhb2qyc6rw7fInlineObjectPropertiesEmbeddedObjectImageProperties>;
  readonly marginBottom: Maybe<GoogleDocsDocumentInlineObjectsKix_rhb2qyc6rw7fInlineObjectPropertiesEmbeddedObjectMarginBottom>;
  readonly marginLeft: Maybe<GoogleDocsDocumentInlineObjectsKix_rhb2qyc6rw7fInlineObjectPropertiesEmbeddedObjectMarginLeft>;
  readonly marginRight: Maybe<GoogleDocsDocumentInlineObjectsKix_rhb2qyc6rw7fInlineObjectPropertiesEmbeddedObjectMarginRight>;
  readonly marginTop: Maybe<GoogleDocsDocumentInlineObjectsKix_rhb2qyc6rw7fInlineObjectPropertiesEmbeddedObjectMarginTop>;
  readonly size: Maybe<GoogleDocsDocumentInlineObjectsKix_rhb2qyc6rw7fInlineObjectPropertiesEmbeddedObjectSize>;
};

type GoogleDocsDocumentInlineObjectsKix_rhb2qyc6rw7fInlineObjectPropertiesEmbeddedObjectEmbeddedObjectBorder = {
  readonly dashStyle: Maybe<Scalars['String']>;
  readonly propertyState: Maybe<Scalars['String']>;
  readonly width: Maybe<GoogleDocsDocumentInlineObjectsKix_rhb2qyc6rw7fInlineObjectPropertiesEmbeddedObjectEmbeddedObjectBorderWidth>;
};

type GoogleDocsDocumentInlineObjectsKix_rhb2qyc6rw7fInlineObjectPropertiesEmbeddedObjectEmbeddedObjectBorderFilterInput = {
  readonly dashStyle: InputMaybe<StringQueryOperatorInput>;
  readonly propertyState: InputMaybe<StringQueryOperatorInput>;
  readonly width: InputMaybe<GoogleDocsDocumentInlineObjectsKix_rhb2qyc6rw7fInlineObjectPropertiesEmbeddedObjectEmbeddedObjectBorderWidthFilterInput>;
};

type GoogleDocsDocumentInlineObjectsKix_rhb2qyc6rw7fInlineObjectPropertiesEmbeddedObjectEmbeddedObjectBorderWidth = {
  readonly unit: Maybe<Scalars['String']>;
};

type GoogleDocsDocumentInlineObjectsKix_rhb2qyc6rw7fInlineObjectPropertiesEmbeddedObjectEmbeddedObjectBorderWidthFilterInput = {
  readonly unit: InputMaybe<StringQueryOperatorInput>;
};

type GoogleDocsDocumentInlineObjectsKix_rhb2qyc6rw7fInlineObjectPropertiesEmbeddedObjectFilterInput = {
  readonly embeddedObjectBorder: InputMaybe<GoogleDocsDocumentInlineObjectsKix_rhb2qyc6rw7fInlineObjectPropertiesEmbeddedObjectEmbeddedObjectBorderFilterInput>;
  readonly imageProperties: InputMaybe<GoogleDocsDocumentInlineObjectsKix_rhb2qyc6rw7fInlineObjectPropertiesEmbeddedObjectImagePropertiesFilterInput>;
  readonly marginBottom: InputMaybe<GoogleDocsDocumentInlineObjectsKix_rhb2qyc6rw7fInlineObjectPropertiesEmbeddedObjectMarginBottomFilterInput>;
  readonly marginLeft: InputMaybe<GoogleDocsDocumentInlineObjectsKix_rhb2qyc6rw7fInlineObjectPropertiesEmbeddedObjectMarginLeftFilterInput>;
  readonly marginRight: InputMaybe<GoogleDocsDocumentInlineObjectsKix_rhb2qyc6rw7fInlineObjectPropertiesEmbeddedObjectMarginRightFilterInput>;
  readonly marginTop: InputMaybe<GoogleDocsDocumentInlineObjectsKix_rhb2qyc6rw7fInlineObjectPropertiesEmbeddedObjectMarginTopFilterInput>;
  readonly size: InputMaybe<GoogleDocsDocumentInlineObjectsKix_rhb2qyc6rw7fInlineObjectPropertiesEmbeddedObjectSizeFilterInput>;
};

type GoogleDocsDocumentInlineObjectsKix_rhb2qyc6rw7fInlineObjectPropertiesEmbeddedObjectImageProperties = {
  readonly contentUri: Maybe<Scalars['String']>;
  readonly sourceUri: Maybe<Scalars['String']>;
};

type GoogleDocsDocumentInlineObjectsKix_rhb2qyc6rw7fInlineObjectPropertiesEmbeddedObjectImagePropertiesFilterInput = {
  readonly contentUri: InputMaybe<StringQueryOperatorInput>;
  readonly sourceUri: InputMaybe<StringQueryOperatorInput>;
};

type GoogleDocsDocumentInlineObjectsKix_rhb2qyc6rw7fInlineObjectPropertiesEmbeddedObjectMarginBottom = {
  readonly magnitude: Maybe<Scalars['Int']>;
  readonly unit: Maybe<Scalars['String']>;
};

type GoogleDocsDocumentInlineObjectsKix_rhb2qyc6rw7fInlineObjectPropertiesEmbeddedObjectMarginBottomFilterInput = {
  readonly magnitude: InputMaybe<IntQueryOperatorInput>;
  readonly unit: InputMaybe<StringQueryOperatorInput>;
};

type GoogleDocsDocumentInlineObjectsKix_rhb2qyc6rw7fInlineObjectPropertiesEmbeddedObjectMarginLeft = {
  readonly magnitude: Maybe<Scalars['Int']>;
  readonly unit: Maybe<Scalars['String']>;
};

type GoogleDocsDocumentInlineObjectsKix_rhb2qyc6rw7fInlineObjectPropertiesEmbeddedObjectMarginLeftFilterInput = {
  readonly magnitude: InputMaybe<IntQueryOperatorInput>;
  readonly unit: InputMaybe<StringQueryOperatorInput>;
};

type GoogleDocsDocumentInlineObjectsKix_rhb2qyc6rw7fInlineObjectPropertiesEmbeddedObjectMarginRight = {
  readonly magnitude: Maybe<Scalars['Int']>;
  readonly unit: Maybe<Scalars['String']>;
};

type GoogleDocsDocumentInlineObjectsKix_rhb2qyc6rw7fInlineObjectPropertiesEmbeddedObjectMarginRightFilterInput = {
  readonly magnitude: InputMaybe<IntQueryOperatorInput>;
  readonly unit: InputMaybe<StringQueryOperatorInput>;
};

type GoogleDocsDocumentInlineObjectsKix_rhb2qyc6rw7fInlineObjectPropertiesEmbeddedObjectMarginTop = {
  readonly magnitude: Maybe<Scalars['Int']>;
  readonly unit: Maybe<Scalars['String']>;
};

type GoogleDocsDocumentInlineObjectsKix_rhb2qyc6rw7fInlineObjectPropertiesEmbeddedObjectMarginTopFilterInput = {
  readonly magnitude: InputMaybe<IntQueryOperatorInput>;
  readonly unit: InputMaybe<StringQueryOperatorInput>;
};

type GoogleDocsDocumentInlineObjectsKix_rhb2qyc6rw7fInlineObjectPropertiesEmbeddedObjectSize = {
  readonly height: Maybe<GoogleDocsDocumentInlineObjectsKix_rhb2qyc6rw7fInlineObjectPropertiesEmbeddedObjectSizeHeight>;
  readonly width: Maybe<GoogleDocsDocumentInlineObjectsKix_rhb2qyc6rw7fInlineObjectPropertiesEmbeddedObjectSizeWidth>;
};

type GoogleDocsDocumentInlineObjectsKix_rhb2qyc6rw7fInlineObjectPropertiesEmbeddedObjectSizeFilterInput = {
  readonly height: InputMaybe<GoogleDocsDocumentInlineObjectsKix_rhb2qyc6rw7fInlineObjectPropertiesEmbeddedObjectSizeHeightFilterInput>;
  readonly width: InputMaybe<GoogleDocsDocumentInlineObjectsKix_rhb2qyc6rw7fInlineObjectPropertiesEmbeddedObjectSizeWidthFilterInput>;
};

type GoogleDocsDocumentInlineObjectsKix_rhb2qyc6rw7fInlineObjectPropertiesEmbeddedObjectSizeHeight = {
  readonly magnitude: Maybe<Scalars['Int']>;
  readonly unit: Maybe<Scalars['String']>;
};

type GoogleDocsDocumentInlineObjectsKix_rhb2qyc6rw7fInlineObjectPropertiesEmbeddedObjectSizeHeightFilterInput = {
  readonly magnitude: InputMaybe<IntQueryOperatorInput>;
  readonly unit: InputMaybe<StringQueryOperatorInput>;
};

type GoogleDocsDocumentInlineObjectsKix_rhb2qyc6rw7fInlineObjectPropertiesEmbeddedObjectSizeWidth = {
  readonly magnitude: Maybe<Scalars['Int']>;
  readonly unit: Maybe<Scalars['String']>;
};

type GoogleDocsDocumentInlineObjectsKix_rhb2qyc6rw7fInlineObjectPropertiesEmbeddedObjectSizeWidthFilterInput = {
  readonly magnitude: InputMaybe<IntQueryOperatorInput>;
  readonly unit: InputMaybe<StringQueryOperatorInput>;
};

type GoogleDocsDocumentInlineObjectsKix_rhb2qyc6rw7fInlineObjectPropertiesFilterInput = {
  readonly embeddedObject: InputMaybe<GoogleDocsDocumentInlineObjectsKix_rhb2qyc6rw7fInlineObjectPropertiesEmbeddedObjectFilterInput>;
};

type GoogleDocsDocumentInlineObjectsKix_y6go88nd7iyp = {
  readonly inlineObjectProperties: Maybe<GoogleDocsDocumentInlineObjectsKix_y6go88nd7iypInlineObjectProperties>;
  readonly objectId: Maybe<Scalars['String']>;
};

type GoogleDocsDocumentInlineObjectsKix_y6go88nd7iypFilterInput = {
  readonly inlineObjectProperties: InputMaybe<GoogleDocsDocumentInlineObjectsKix_y6go88nd7iypInlineObjectPropertiesFilterInput>;
  readonly objectId: InputMaybe<StringQueryOperatorInput>;
};

type GoogleDocsDocumentInlineObjectsKix_y6go88nd7iypInlineObjectProperties = {
  readonly embeddedObject: Maybe<GoogleDocsDocumentInlineObjectsKix_y6go88nd7iypInlineObjectPropertiesEmbeddedObject>;
};

type GoogleDocsDocumentInlineObjectsKix_y6go88nd7iypInlineObjectPropertiesEmbeddedObject = {
  readonly embeddedObjectBorder: Maybe<GoogleDocsDocumentInlineObjectsKix_y6go88nd7iypInlineObjectPropertiesEmbeddedObjectEmbeddedObjectBorder>;
  readonly imageProperties: Maybe<GoogleDocsDocumentInlineObjectsKix_y6go88nd7iypInlineObjectPropertiesEmbeddedObjectImageProperties>;
  readonly marginBottom: Maybe<GoogleDocsDocumentInlineObjectsKix_y6go88nd7iypInlineObjectPropertiesEmbeddedObjectMarginBottom>;
  readonly marginLeft: Maybe<GoogleDocsDocumentInlineObjectsKix_y6go88nd7iypInlineObjectPropertiesEmbeddedObjectMarginLeft>;
  readonly marginRight: Maybe<GoogleDocsDocumentInlineObjectsKix_y6go88nd7iypInlineObjectPropertiesEmbeddedObjectMarginRight>;
  readonly marginTop: Maybe<GoogleDocsDocumentInlineObjectsKix_y6go88nd7iypInlineObjectPropertiesEmbeddedObjectMarginTop>;
  readonly size: Maybe<GoogleDocsDocumentInlineObjectsKix_y6go88nd7iypInlineObjectPropertiesEmbeddedObjectSize>;
};

type GoogleDocsDocumentInlineObjectsKix_y6go88nd7iypInlineObjectPropertiesEmbeddedObjectEmbeddedObjectBorder = {
  readonly dashStyle: Maybe<Scalars['String']>;
  readonly propertyState: Maybe<Scalars['String']>;
  readonly width: Maybe<GoogleDocsDocumentInlineObjectsKix_y6go88nd7iypInlineObjectPropertiesEmbeddedObjectEmbeddedObjectBorderWidth>;
};

type GoogleDocsDocumentInlineObjectsKix_y6go88nd7iypInlineObjectPropertiesEmbeddedObjectEmbeddedObjectBorderFilterInput = {
  readonly dashStyle: InputMaybe<StringQueryOperatorInput>;
  readonly propertyState: InputMaybe<StringQueryOperatorInput>;
  readonly width: InputMaybe<GoogleDocsDocumentInlineObjectsKix_y6go88nd7iypInlineObjectPropertiesEmbeddedObjectEmbeddedObjectBorderWidthFilterInput>;
};

type GoogleDocsDocumentInlineObjectsKix_y6go88nd7iypInlineObjectPropertiesEmbeddedObjectEmbeddedObjectBorderWidth = {
  readonly unit: Maybe<Scalars['String']>;
};

type GoogleDocsDocumentInlineObjectsKix_y6go88nd7iypInlineObjectPropertiesEmbeddedObjectEmbeddedObjectBorderWidthFilterInput = {
  readonly unit: InputMaybe<StringQueryOperatorInput>;
};

type GoogleDocsDocumentInlineObjectsKix_y6go88nd7iypInlineObjectPropertiesEmbeddedObjectFilterInput = {
  readonly embeddedObjectBorder: InputMaybe<GoogleDocsDocumentInlineObjectsKix_y6go88nd7iypInlineObjectPropertiesEmbeddedObjectEmbeddedObjectBorderFilterInput>;
  readonly imageProperties: InputMaybe<GoogleDocsDocumentInlineObjectsKix_y6go88nd7iypInlineObjectPropertiesEmbeddedObjectImagePropertiesFilterInput>;
  readonly marginBottom: InputMaybe<GoogleDocsDocumentInlineObjectsKix_y6go88nd7iypInlineObjectPropertiesEmbeddedObjectMarginBottomFilterInput>;
  readonly marginLeft: InputMaybe<GoogleDocsDocumentInlineObjectsKix_y6go88nd7iypInlineObjectPropertiesEmbeddedObjectMarginLeftFilterInput>;
  readonly marginRight: InputMaybe<GoogleDocsDocumentInlineObjectsKix_y6go88nd7iypInlineObjectPropertiesEmbeddedObjectMarginRightFilterInput>;
  readonly marginTop: InputMaybe<GoogleDocsDocumentInlineObjectsKix_y6go88nd7iypInlineObjectPropertiesEmbeddedObjectMarginTopFilterInput>;
  readonly size: InputMaybe<GoogleDocsDocumentInlineObjectsKix_y6go88nd7iypInlineObjectPropertiesEmbeddedObjectSizeFilterInput>;
};

type GoogleDocsDocumentInlineObjectsKix_y6go88nd7iypInlineObjectPropertiesEmbeddedObjectImageProperties = {
  readonly contentUri: Maybe<Scalars['String']>;
};

type GoogleDocsDocumentInlineObjectsKix_y6go88nd7iypInlineObjectPropertiesEmbeddedObjectImagePropertiesFilterInput = {
  readonly contentUri: InputMaybe<StringQueryOperatorInput>;
};

type GoogleDocsDocumentInlineObjectsKix_y6go88nd7iypInlineObjectPropertiesEmbeddedObjectMarginBottom = {
  readonly magnitude: Maybe<Scalars['Int']>;
  readonly unit: Maybe<Scalars['String']>;
};

type GoogleDocsDocumentInlineObjectsKix_y6go88nd7iypInlineObjectPropertiesEmbeddedObjectMarginBottomFilterInput = {
  readonly magnitude: InputMaybe<IntQueryOperatorInput>;
  readonly unit: InputMaybe<StringQueryOperatorInput>;
};

type GoogleDocsDocumentInlineObjectsKix_y6go88nd7iypInlineObjectPropertiesEmbeddedObjectMarginLeft = {
  readonly magnitude: Maybe<Scalars['Int']>;
  readonly unit: Maybe<Scalars['String']>;
};

type GoogleDocsDocumentInlineObjectsKix_y6go88nd7iypInlineObjectPropertiesEmbeddedObjectMarginLeftFilterInput = {
  readonly magnitude: InputMaybe<IntQueryOperatorInput>;
  readonly unit: InputMaybe<StringQueryOperatorInput>;
};

type GoogleDocsDocumentInlineObjectsKix_y6go88nd7iypInlineObjectPropertiesEmbeddedObjectMarginRight = {
  readonly magnitude: Maybe<Scalars['Int']>;
  readonly unit: Maybe<Scalars['String']>;
};

type GoogleDocsDocumentInlineObjectsKix_y6go88nd7iypInlineObjectPropertiesEmbeddedObjectMarginRightFilterInput = {
  readonly magnitude: InputMaybe<IntQueryOperatorInput>;
  readonly unit: InputMaybe<StringQueryOperatorInput>;
};

type GoogleDocsDocumentInlineObjectsKix_y6go88nd7iypInlineObjectPropertiesEmbeddedObjectMarginTop = {
  readonly magnitude: Maybe<Scalars['Int']>;
  readonly unit: Maybe<Scalars['String']>;
};

type GoogleDocsDocumentInlineObjectsKix_y6go88nd7iypInlineObjectPropertiesEmbeddedObjectMarginTopFilterInput = {
  readonly magnitude: InputMaybe<IntQueryOperatorInput>;
  readonly unit: InputMaybe<StringQueryOperatorInput>;
};

type GoogleDocsDocumentInlineObjectsKix_y6go88nd7iypInlineObjectPropertiesEmbeddedObjectSize = {
  readonly height: Maybe<GoogleDocsDocumentInlineObjectsKix_y6go88nd7iypInlineObjectPropertiesEmbeddedObjectSizeHeight>;
  readonly width: Maybe<GoogleDocsDocumentInlineObjectsKix_y6go88nd7iypInlineObjectPropertiesEmbeddedObjectSizeWidth>;
};

type GoogleDocsDocumentInlineObjectsKix_y6go88nd7iypInlineObjectPropertiesEmbeddedObjectSizeFilterInput = {
  readonly height: InputMaybe<GoogleDocsDocumentInlineObjectsKix_y6go88nd7iypInlineObjectPropertiesEmbeddedObjectSizeHeightFilterInput>;
  readonly width: InputMaybe<GoogleDocsDocumentInlineObjectsKix_y6go88nd7iypInlineObjectPropertiesEmbeddedObjectSizeWidthFilterInput>;
};

type GoogleDocsDocumentInlineObjectsKix_y6go88nd7iypInlineObjectPropertiesEmbeddedObjectSizeHeight = {
  readonly magnitude: Maybe<Scalars['Int']>;
  readonly unit: Maybe<Scalars['String']>;
};

type GoogleDocsDocumentInlineObjectsKix_y6go88nd7iypInlineObjectPropertiesEmbeddedObjectSizeHeightFilterInput = {
  readonly magnitude: InputMaybe<IntQueryOperatorInput>;
  readonly unit: InputMaybe<StringQueryOperatorInput>;
};

type GoogleDocsDocumentInlineObjectsKix_y6go88nd7iypInlineObjectPropertiesEmbeddedObjectSizeWidth = {
  readonly magnitude: Maybe<Scalars['Int']>;
  readonly unit: Maybe<Scalars['String']>;
};

type GoogleDocsDocumentInlineObjectsKix_y6go88nd7iypInlineObjectPropertiesEmbeddedObjectSizeWidthFilterInput = {
  readonly magnitude: InputMaybe<IntQueryOperatorInput>;
  readonly unit: InputMaybe<StringQueryOperatorInput>;
};

type GoogleDocsDocumentInlineObjectsKix_y6go88nd7iypInlineObjectPropertiesFilterInput = {
  readonly embeddedObject: InputMaybe<GoogleDocsDocumentInlineObjectsKix_y6go88nd7iypInlineObjectPropertiesEmbeddedObjectFilterInput>;
};

type GoogleDocsDocumentLists = {
  readonly kix_7dwljhjoja72: Maybe<GoogleDocsDocumentListsKix_7dwljhjoja72>;
  readonly kix_21rrkddmmrvq: Maybe<GoogleDocsDocumentListsKix_21rrkddmmrvq>;
  readonly kix_ay11o713iaqe: Maybe<GoogleDocsDocumentListsKix_ay11o713iaqe>;
  readonly kix_jje6hz7oauwm: Maybe<GoogleDocsDocumentListsKix_jje6hz7oauwm>;
  readonly kix_jnts3yfq3drn: Maybe<GoogleDocsDocumentListsKix_jnts3yfq3drn>;
  readonly kix_mjl35y78w0e3: Maybe<GoogleDocsDocumentListsKix_mjl35y78w0e3>;
  readonly kix_o3m3nsr5t2cq: Maybe<GoogleDocsDocumentListsKix_o3m3nsr5t2cq>;
  readonly kix_ti11o7tro4xp: Maybe<GoogleDocsDocumentListsKix_ti11o7tro4xp>;
};

type GoogleDocsDocumentListsFilterInput = {
  readonly kix_7dwljhjoja72: InputMaybe<GoogleDocsDocumentListsKix_7dwljhjoja72FilterInput>;
  readonly kix_21rrkddmmrvq: InputMaybe<GoogleDocsDocumentListsKix_21rrkddmmrvqFilterInput>;
  readonly kix_ay11o713iaqe: InputMaybe<GoogleDocsDocumentListsKix_ay11o713iaqeFilterInput>;
  readonly kix_jje6hz7oauwm: InputMaybe<GoogleDocsDocumentListsKix_jje6hz7oauwmFilterInput>;
  readonly kix_jnts3yfq3drn: InputMaybe<GoogleDocsDocumentListsKix_jnts3yfq3drnFilterInput>;
  readonly kix_mjl35y78w0e3: InputMaybe<GoogleDocsDocumentListsKix_mjl35y78w0e3FilterInput>;
  readonly kix_o3m3nsr5t2cq: InputMaybe<GoogleDocsDocumentListsKix_o3m3nsr5t2cqFilterInput>;
  readonly kix_ti11o7tro4xp: InputMaybe<GoogleDocsDocumentListsKix_ti11o7tro4xpFilterInput>;
};

type GoogleDocsDocumentListsKix_7dwljhjoja72 = {
  readonly listProperties: Maybe<GoogleDocsDocumentListsKix_7dwljhjoja72ListProperties>;
};

type GoogleDocsDocumentListsKix_7dwljhjoja72FilterInput = {
  readonly listProperties: InputMaybe<GoogleDocsDocumentListsKix_7dwljhjoja72ListPropertiesFilterInput>;
};

type GoogleDocsDocumentListsKix_7dwljhjoja72ListProperties = {
  readonly nestingLevels: Maybe<ReadonlyArray<Maybe<GoogleDocsDocumentListsKix_7dwljhjoja72ListPropertiesNestingLevels>>>;
};

type GoogleDocsDocumentListsKix_7dwljhjoja72ListPropertiesFilterInput = {
  readonly nestingLevels: InputMaybe<GoogleDocsDocumentListsKix_7dwljhjoja72ListPropertiesNestingLevelsFilterListInput>;
};

type GoogleDocsDocumentListsKix_7dwljhjoja72ListPropertiesNestingLevels = {
  readonly bulletAlignment: Maybe<Scalars['String']>;
  readonly glyphFormat: Maybe<Scalars['String']>;
  readonly glyphType: Maybe<Scalars['String']>;
  readonly indentFirstLine: Maybe<GoogleDocsDocumentListsKix_7dwljhjoja72ListPropertiesNestingLevelsIndentFirstLine>;
  readonly indentStart: Maybe<GoogleDocsDocumentListsKix_7dwljhjoja72ListPropertiesNestingLevelsIndentStart>;
  readonly startNumber: Maybe<Scalars['Int']>;
  readonly textStyle: Maybe<GoogleDocsDocumentListsKix_7dwljhjoja72ListPropertiesNestingLevelsTextStyle>;
};

type GoogleDocsDocumentListsKix_7dwljhjoja72ListPropertiesNestingLevelsFilterInput = {
  readonly bulletAlignment: InputMaybe<StringQueryOperatorInput>;
  readonly glyphFormat: InputMaybe<StringQueryOperatorInput>;
  readonly glyphType: InputMaybe<StringQueryOperatorInput>;
  readonly indentFirstLine: InputMaybe<GoogleDocsDocumentListsKix_7dwljhjoja72ListPropertiesNestingLevelsIndentFirstLineFilterInput>;
  readonly indentStart: InputMaybe<GoogleDocsDocumentListsKix_7dwljhjoja72ListPropertiesNestingLevelsIndentStartFilterInput>;
  readonly startNumber: InputMaybe<IntQueryOperatorInput>;
  readonly textStyle: InputMaybe<GoogleDocsDocumentListsKix_7dwljhjoja72ListPropertiesNestingLevelsTextStyleFilterInput>;
};

type GoogleDocsDocumentListsKix_7dwljhjoja72ListPropertiesNestingLevelsFilterListInput = {
  readonly elemMatch: InputMaybe<GoogleDocsDocumentListsKix_7dwljhjoja72ListPropertiesNestingLevelsFilterInput>;
};

type GoogleDocsDocumentListsKix_7dwljhjoja72ListPropertiesNestingLevelsIndentFirstLine = {
  readonly magnitude: Maybe<Scalars['Int']>;
  readonly unit: Maybe<Scalars['String']>;
};

type GoogleDocsDocumentListsKix_7dwljhjoja72ListPropertiesNestingLevelsIndentFirstLineFilterInput = {
  readonly magnitude: InputMaybe<IntQueryOperatorInput>;
  readonly unit: InputMaybe<StringQueryOperatorInput>;
};

type GoogleDocsDocumentListsKix_7dwljhjoja72ListPropertiesNestingLevelsIndentStart = {
  readonly magnitude: Maybe<Scalars['Int']>;
  readonly unit: Maybe<Scalars['String']>;
};

type GoogleDocsDocumentListsKix_7dwljhjoja72ListPropertiesNestingLevelsIndentStartFilterInput = {
  readonly magnitude: InputMaybe<IntQueryOperatorInput>;
  readonly unit: InputMaybe<StringQueryOperatorInput>;
};

type GoogleDocsDocumentListsKix_7dwljhjoja72ListPropertiesNestingLevelsTextStyle = {
  readonly underline: Maybe<Scalars['Boolean']>;
};

type GoogleDocsDocumentListsKix_7dwljhjoja72ListPropertiesNestingLevelsTextStyleFilterInput = {
  readonly underline: InputMaybe<BooleanQueryOperatorInput>;
};

type GoogleDocsDocumentListsKix_21rrkddmmrvq = {
  readonly listProperties: Maybe<GoogleDocsDocumentListsKix_21rrkddmmrvqListProperties>;
};

type GoogleDocsDocumentListsKix_21rrkddmmrvqFilterInput = {
  readonly listProperties: InputMaybe<GoogleDocsDocumentListsKix_21rrkddmmrvqListPropertiesFilterInput>;
};

type GoogleDocsDocumentListsKix_21rrkddmmrvqListProperties = {
  readonly nestingLevels: Maybe<ReadonlyArray<Maybe<GoogleDocsDocumentListsKix_21rrkddmmrvqListPropertiesNestingLevels>>>;
};

type GoogleDocsDocumentListsKix_21rrkddmmrvqListPropertiesFilterInput = {
  readonly nestingLevels: InputMaybe<GoogleDocsDocumentListsKix_21rrkddmmrvqListPropertiesNestingLevelsFilterListInput>;
};

type GoogleDocsDocumentListsKix_21rrkddmmrvqListPropertiesNestingLevels = {
  readonly bulletAlignment: Maybe<Scalars['String']>;
  readonly glyphFormat: Maybe<Scalars['String']>;
  readonly glyphSymbol: Maybe<Scalars['String']>;
  readonly indentFirstLine: Maybe<GoogleDocsDocumentListsKix_21rrkddmmrvqListPropertiesNestingLevelsIndentFirstLine>;
  readonly indentStart: Maybe<GoogleDocsDocumentListsKix_21rrkddmmrvqListPropertiesNestingLevelsIndentStart>;
  readonly startNumber: Maybe<Scalars['Int']>;
  readonly textStyle: Maybe<GoogleDocsDocumentListsKix_21rrkddmmrvqListPropertiesNestingLevelsTextStyle>;
};

type GoogleDocsDocumentListsKix_21rrkddmmrvqListPropertiesNestingLevelsFilterInput = {
  readonly bulletAlignment: InputMaybe<StringQueryOperatorInput>;
  readonly glyphFormat: InputMaybe<StringQueryOperatorInput>;
  readonly glyphSymbol: InputMaybe<StringQueryOperatorInput>;
  readonly indentFirstLine: InputMaybe<GoogleDocsDocumentListsKix_21rrkddmmrvqListPropertiesNestingLevelsIndentFirstLineFilterInput>;
  readonly indentStart: InputMaybe<GoogleDocsDocumentListsKix_21rrkddmmrvqListPropertiesNestingLevelsIndentStartFilterInput>;
  readonly startNumber: InputMaybe<IntQueryOperatorInput>;
  readonly textStyle: InputMaybe<GoogleDocsDocumentListsKix_21rrkddmmrvqListPropertiesNestingLevelsTextStyleFilterInput>;
};

type GoogleDocsDocumentListsKix_21rrkddmmrvqListPropertiesNestingLevelsFilterListInput = {
  readonly elemMatch: InputMaybe<GoogleDocsDocumentListsKix_21rrkddmmrvqListPropertiesNestingLevelsFilterInput>;
};

type GoogleDocsDocumentListsKix_21rrkddmmrvqListPropertiesNestingLevelsIndentFirstLine = {
  readonly magnitude: Maybe<Scalars['Int']>;
  readonly unit: Maybe<Scalars['String']>;
};

type GoogleDocsDocumentListsKix_21rrkddmmrvqListPropertiesNestingLevelsIndentFirstLineFilterInput = {
  readonly magnitude: InputMaybe<IntQueryOperatorInput>;
  readonly unit: InputMaybe<StringQueryOperatorInput>;
};

type GoogleDocsDocumentListsKix_21rrkddmmrvqListPropertiesNestingLevelsIndentStart = {
  readonly magnitude: Maybe<Scalars['Int']>;
  readonly unit: Maybe<Scalars['String']>;
};

type GoogleDocsDocumentListsKix_21rrkddmmrvqListPropertiesNestingLevelsIndentStartFilterInput = {
  readonly magnitude: InputMaybe<IntQueryOperatorInput>;
  readonly unit: InputMaybe<StringQueryOperatorInput>;
};

type GoogleDocsDocumentListsKix_21rrkddmmrvqListPropertiesNestingLevelsTextStyle = {
  readonly underline: Maybe<Scalars['Boolean']>;
};

type GoogleDocsDocumentListsKix_21rrkddmmrvqListPropertiesNestingLevelsTextStyleFilterInput = {
  readonly underline: InputMaybe<BooleanQueryOperatorInput>;
};

type GoogleDocsDocumentListsKix_ay11o713iaqe = {
  readonly listProperties: Maybe<GoogleDocsDocumentListsKix_ay11o713iaqeListProperties>;
};

type GoogleDocsDocumentListsKix_ay11o713iaqeFilterInput = {
  readonly listProperties: InputMaybe<GoogleDocsDocumentListsKix_ay11o713iaqeListPropertiesFilterInput>;
};

type GoogleDocsDocumentListsKix_ay11o713iaqeListProperties = {
  readonly nestingLevels: Maybe<ReadonlyArray<Maybe<GoogleDocsDocumentListsKix_ay11o713iaqeListPropertiesNestingLevels>>>;
};

type GoogleDocsDocumentListsKix_ay11o713iaqeListPropertiesFilterInput = {
  readonly nestingLevels: InputMaybe<GoogleDocsDocumentListsKix_ay11o713iaqeListPropertiesNestingLevelsFilterListInput>;
};

type GoogleDocsDocumentListsKix_ay11o713iaqeListPropertiesNestingLevels = {
  readonly bulletAlignment: Maybe<Scalars['String']>;
  readonly glyphFormat: Maybe<Scalars['String']>;
  readonly glyphSymbol: Maybe<Scalars['String']>;
  readonly indentFirstLine: Maybe<GoogleDocsDocumentListsKix_ay11o713iaqeListPropertiesNestingLevelsIndentFirstLine>;
  readonly indentStart: Maybe<GoogleDocsDocumentListsKix_ay11o713iaqeListPropertiesNestingLevelsIndentStart>;
  readonly startNumber: Maybe<Scalars['Int']>;
  readonly textStyle: Maybe<GoogleDocsDocumentListsKix_ay11o713iaqeListPropertiesNestingLevelsTextStyle>;
};

type GoogleDocsDocumentListsKix_ay11o713iaqeListPropertiesNestingLevelsFilterInput = {
  readonly bulletAlignment: InputMaybe<StringQueryOperatorInput>;
  readonly glyphFormat: InputMaybe<StringQueryOperatorInput>;
  readonly glyphSymbol: InputMaybe<StringQueryOperatorInput>;
  readonly indentFirstLine: InputMaybe<GoogleDocsDocumentListsKix_ay11o713iaqeListPropertiesNestingLevelsIndentFirstLineFilterInput>;
  readonly indentStart: InputMaybe<GoogleDocsDocumentListsKix_ay11o713iaqeListPropertiesNestingLevelsIndentStartFilterInput>;
  readonly startNumber: InputMaybe<IntQueryOperatorInput>;
  readonly textStyle: InputMaybe<GoogleDocsDocumentListsKix_ay11o713iaqeListPropertiesNestingLevelsTextStyleFilterInput>;
};

type GoogleDocsDocumentListsKix_ay11o713iaqeListPropertiesNestingLevelsFilterListInput = {
  readonly elemMatch: InputMaybe<GoogleDocsDocumentListsKix_ay11o713iaqeListPropertiesNestingLevelsFilterInput>;
};

type GoogleDocsDocumentListsKix_ay11o713iaqeListPropertiesNestingLevelsIndentFirstLine = {
  readonly magnitude: Maybe<Scalars['Int']>;
  readonly unit: Maybe<Scalars['String']>;
};

type GoogleDocsDocumentListsKix_ay11o713iaqeListPropertiesNestingLevelsIndentFirstLineFilterInput = {
  readonly magnitude: InputMaybe<IntQueryOperatorInput>;
  readonly unit: InputMaybe<StringQueryOperatorInput>;
};

type GoogleDocsDocumentListsKix_ay11o713iaqeListPropertiesNestingLevelsIndentStart = {
  readonly magnitude: Maybe<Scalars['Int']>;
  readonly unit: Maybe<Scalars['String']>;
};

type GoogleDocsDocumentListsKix_ay11o713iaqeListPropertiesNestingLevelsIndentStartFilterInput = {
  readonly magnitude: InputMaybe<IntQueryOperatorInput>;
  readonly unit: InputMaybe<StringQueryOperatorInput>;
};

type GoogleDocsDocumentListsKix_ay11o713iaqeListPropertiesNestingLevelsTextStyle = {
  readonly underline: Maybe<Scalars['Boolean']>;
};

type GoogleDocsDocumentListsKix_ay11o713iaqeListPropertiesNestingLevelsTextStyleFilterInput = {
  readonly underline: InputMaybe<BooleanQueryOperatorInput>;
};

type GoogleDocsDocumentListsKix_jje6hz7oauwm = {
  readonly listProperties: Maybe<GoogleDocsDocumentListsKix_jje6hz7oauwmListProperties>;
};

type GoogleDocsDocumentListsKix_jje6hz7oauwmFilterInput = {
  readonly listProperties: InputMaybe<GoogleDocsDocumentListsKix_jje6hz7oauwmListPropertiesFilterInput>;
};

type GoogleDocsDocumentListsKix_jje6hz7oauwmListProperties = {
  readonly nestingLevels: Maybe<ReadonlyArray<Maybe<GoogleDocsDocumentListsKix_jje6hz7oauwmListPropertiesNestingLevels>>>;
};

type GoogleDocsDocumentListsKix_jje6hz7oauwmListPropertiesFilterInput = {
  readonly nestingLevels: InputMaybe<GoogleDocsDocumentListsKix_jje6hz7oauwmListPropertiesNestingLevelsFilterListInput>;
};

type GoogleDocsDocumentListsKix_jje6hz7oauwmListPropertiesNestingLevels = {
  readonly bulletAlignment: Maybe<Scalars['String']>;
  readonly glyphFormat: Maybe<Scalars['String']>;
  readonly glyphType: Maybe<Scalars['String']>;
  readonly indentFirstLine: Maybe<GoogleDocsDocumentListsKix_jje6hz7oauwmListPropertiesNestingLevelsIndentFirstLine>;
  readonly indentStart: Maybe<GoogleDocsDocumentListsKix_jje6hz7oauwmListPropertiesNestingLevelsIndentStart>;
  readonly startNumber: Maybe<Scalars['Int']>;
  readonly textStyle: Maybe<GoogleDocsDocumentListsKix_jje6hz7oauwmListPropertiesNestingLevelsTextStyle>;
};

type GoogleDocsDocumentListsKix_jje6hz7oauwmListPropertiesNestingLevelsFilterInput = {
  readonly bulletAlignment: InputMaybe<StringQueryOperatorInput>;
  readonly glyphFormat: InputMaybe<StringQueryOperatorInput>;
  readonly glyphType: InputMaybe<StringQueryOperatorInput>;
  readonly indentFirstLine: InputMaybe<GoogleDocsDocumentListsKix_jje6hz7oauwmListPropertiesNestingLevelsIndentFirstLineFilterInput>;
  readonly indentStart: InputMaybe<GoogleDocsDocumentListsKix_jje6hz7oauwmListPropertiesNestingLevelsIndentStartFilterInput>;
  readonly startNumber: InputMaybe<IntQueryOperatorInput>;
  readonly textStyle: InputMaybe<GoogleDocsDocumentListsKix_jje6hz7oauwmListPropertiesNestingLevelsTextStyleFilterInput>;
};

type GoogleDocsDocumentListsKix_jje6hz7oauwmListPropertiesNestingLevelsFilterListInput = {
  readonly elemMatch: InputMaybe<GoogleDocsDocumentListsKix_jje6hz7oauwmListPropertiesNestingLevelsFilterInput>;
};

type GoogleDocsDocumentListsKix_jje6hz7oauwmListPropertiesNestingLevelsIndentFirstLine = {
  readonly magnitude: Maybe<Scalars['Int']>;
  readonly unit: Maybe<Scalars['String']>;
};

type GoogleDocsDocumentListsKix_jje6hz7oauwmListPropertiesNestingLevelsIndentFirstLineFilterInput = {
  readonly magnitude: InputMaybe<IntQueryOperatorInput>;
  readonly unit: InputMaybe<StringQueryOperatorInput>;
};

type GoogleDocsDocumentListsKix_jje6hz7oauwmListPropertiesNestingLevelsIndentStart = {
  readonly magnitude: Maybe<Scalars['Int']>;
  readonly unit: Maybe<Scalars['String']>;
};

type GoogleDocsDocumentListsKix_jje6hz7oauwmListPropertiesNestingLevelsIndentStartFilterInput = {
  readonly magnitude: InputMaybe<IntQueryOperatorInput>;
  readonly unit: InputMaybe<StringQueryOperatorInput>;
};

type GoogleDocsDocumentListsKix_jje6hz7oauwmListPropertiesNestingLevelsTextStyle = {
  readonly underline: Maybe<Scalars['Boolean']>;
};

type GoogleDocsDocumentListsKix_jje6hz7oauwmListPropertiesNestingLevelsTextStyleFilterInput = {
  readonly underline: InputMaybe<BooleanQueryOperatorInput>;
};

type GoogleDocsDocumentListsKix_jnts3yfq3drn = {
  readonly listProperties: Maybe<GoogleDocsDocumentListsKix_jnts3yfq3drnListProperties>;
};

type GoogleDocsDocumentListsKix_jnts3yfq3drnFilterInput = {
  readonly listProperties: InputMaybe<GoogleDocsDocumentListsKix_jnts3yfq3drnListPropertiesFilterInput>;
};

type GoogleDocsDocumentListsKix_jnts3yfq3drnListProperties = {
  readonly nestingLevels: Maybe<ReadonlyArray<Maybe<GoogleDocsDocumentListsKix_jnts3yfq3drnListPropertiesNestingLevels>>>;
};

type GoogleDocsDocumentListsKix_jnts3yfq3drnListPropertiesFilterInput = {
  readonly nestingLevels: InputMaybe<GoogleDocsDocumentListsKix_jnts3yfq3drnListPropertiesNestingLevelsFilterListInput>;
};

type GoogleDocsDocumentListsKix_jnts3yfq3drnListPropertiesNestingLevels = {
  readonly bulletAlignment: Maybe<Scalars['String']>;
  readonly glyphFormat: Maybe<Scalars['String']>;
  readonly glyphSymbol: Maybe<Scalars['String']>;
  readonly indentFirstLine: Maybe<GoogleDocsDocumentListsKix_jnts3yfq3drnListPropertiesNestingLevelsIndentFirstLine>;
  readonly indentStart: Maybe<GoogleDocsDocumentListsKix_jnts3yfq3drnListPropertiesNestingLevelsIndentStart>;
  readonly startNumber: Maybe<Scalars['Int']>;
  readonly textStyle: Maybe<GoogleDocsDocumentListsKix_jnts3yfq3drnListPropertiesNestingLevelsTextStyle>;
};

type GoogleDocsDocumentListsKix_jnts3yfq3drnListPropertiesNestingLevelsFilterInput = {
  readonly bulletAlignment: InputMaybe<StringQueryOperatorInput>;
  readonly glyphFormat: InputMaybe<StringQueryOperatorInput>;
  readonly glyphSymbol: InputMaybe<StringQueryOperatorInput>;
  readonly indentFirstLine: InputMaybe<GoogleDocsDocumentListsKix_jnts3yfq3drnListPropertiesNestingLevelsIndentFirstLineFilterInput>;
  readonly indentStart: InputMaybe<GoogleDocsDocumentListsKix_jnts3yfq3drnListPropertiesNestingLevelsIndentStartFilterInput>;
  readonly startNumber: InputMaybe<IntQueryOperatorInput>;
  readonly textStyle: InputMaybe<GoogleDocsDocumentListsKix_jnts3yfq3drnListPropertiesNestingLevelsTextStyleFilterInput>;
};

type GoogleDocsDocumentListsKix_jnts3yfq3drnListPropertiesNestingLevelsFilterListInput = {
  readonly elemMatch: InputMaybe<GoogleDocsDocumentListsKix_jnts3yfq3drnListPropertiesNestingLevelsFilterInput>;
};

type GoogleDocsDocumentListsKix_jnts3yfq3drnListPropertiesNestingLevelsIndentFirstLine = {
  readonly magnitude: Maybe<Scalars['Int']>;
  readonly unit: Maybe<Scalars['String']>;
};

type GoogleDocsDocumentListsKix_jnts3yfq3drnListPropertiesNestingLevelsIndentFirstLineFilterInput = {
  readonly magnitude: InputMaybe<IntQueryOperatorInput>;
  readonly unit: InputMaybe<StringQueryOperatorInput>;
};

type GoogleDocsDocumentListsKix_jnts3yfq3drnListPropertiesNestingLevelsIndentStart = {
  readonly magnitude: Maybe<Scalars['Int']>;
  readonly unit: Maybe<Scalars['String']>;
};

type GoogleDocsDocumentListsKix_jnts3yfq3drnListPropertiesNestingLevelsIndentStartFilterInput = {
  readonly magnitude: InputMaybe<IntQueryOperatorInput>;
  readonly unit: InputMaybe<StringQueryOperatorInput>;
};

type GoogleDocsDocumentListsKix_jnts3yfq3drnListPropertiesNestingLevelsTextStyle = {
  readonly underline: Maybe<Scalars['Boolean']>;
};

type GoogleDocsDocumentListsKix_jnts3yfq3drnListPropertiesNestingLevelsTextStyleFilterInput = {
  readonly underline: InputMaybe<BooleanQueryOperatorInput>;
};

type GoogleDocsDocumentListsKix_mjl35y78w0e3 = {
  readonly listProperties: Maybe<GoogleDocsDocumentListsKix_mjl35y78w0e3ListProperties>;
};

type GoogleDocsDocumentListsKix_mjl35y78w0e3FilterInput = {
  readonly listProperties: InputMaybe<GoogleDocsDocumentListsKix_mjl35y78w0e3ListPropertiesFilterInput>;
};

type GoogleDocsDocumentListsKix_mjl35y78w0e3ListProperties = {
  readonly nestingLevels: Maybe<ReadonlyArray<Maybe<GoogleDocsDocumentListsKix_mjl35y78w0e3ListPropertiesNestingLevels>>>;
};

type GoogleDocsDocumentListsKix_mjl35y78w0e3ListPropertiesFilterInput = {
  readonly nestingLevels: InputMaybe<GoogleDocsDocumentListsKix_mjl35y78w0e3ListPropertiesNestingLevelsFilterListInput>;
};

type GoogleDocsDocumentListsKix_mjl35y78w0e3ListPropertiesNestingLevels = {
  readonly bulletAlignment: Maybe<Scalars['String']>;
  readonly glyphFormat: Maybe<Scalars['String']>;
  readonly glyphType: Maybe<Scalars['String']>;
  readonly indentFirstLine: Maybe<GoogleDocsDocumentListsKix_mjl35y78w0e3ListPropertiesNestingLevelsIndentFirstLine>;
  readonly indentStart: Maybe<GoogleDocsDocumentListsKix_mjl35y78w0e3ListPropertiesNestingLevelsIndentStart>;
  readonly startNumber: Maybe<Scalars['Int']>;
  readonly textStyle: Maybe<GoogleDocsDocumentListsKix_mjl35y78w0e3ListPropertiesNestingLevelsTextStyle>;
};

type GoogleDocsDocumentListsKix_mjl35y78w0e3ListPropertiesNestingLevelsFilterInput = {
  readonly bulletAlignment: InputMaybe<StringQueryOperatorInput>;
  readonly glyphFormat: InputMaybe<StringQueryOperatorInput>;
  readonly glyphType: InputMaybe<StringQueryOperatorInput>;
  readonly indentFirstLine: InputMaybe<GoogleDocsDocumentListsKix_mjl35y78w0e3ListPropertiesNestingLevelsIndentFirstLineFilterInput>;
  readonly indentStart: InputMaybe<GoogleDocsDocumentListsKix_mjl35y78w0e3ListPropertiesNestingLevelsIndentStartFilterInput>;
  readonly startNumber: InputMaybe<IntQueryOperatorInput>;
  readonly textStyle: InputMaybe<GoogleDocsDocumentListsKix_mjl35y78w0e3ListPropertiesNestingLevelsTextStyleFilterInput>;
};

type GoogleDocsDocumentListsKix_mjl35y78w0e3ListPropertiesNestingLevelsFilterListInput = {
  readonly elemMatch: InputMaybe<GoogleDocsDocumentListsKix_mjl35y78w0e3ListPropertiesNestingLevelsFilterInput>;
};

type GoogleDocsDocumentListsKix_mjl35y78w0e3ListPropertiesNestingLevelsIndentFirstLine = {
  readonly magnitude: Maybe<Scalars['Int']>;
  readonly unit: Maybe<Scalars['String']>;
};

type GoogleDocsDocumentListsKix_mjl35y78w0e3ListPropertiesNestingLevelsIndentFirstLineFilterInput = {
  readonly magnitude: InputMaybe<IntQueryOperatorInput>;
  readonly unit: InputMaybe<StringQueryOperatorInput>;
};

type GoogleDocsDocumentListsKix_mjl35y78w0e3ListPropertiesNestingLevelsIndentStart = {
  readonly magnitude: Maybe<Scalars['Int']>;
  readonly unit: Maybe<Scalars['String']>;
};

type GoogleDocsDocumentListsKix_mjl35y78w0e3ListPropertiesNestingLevelsIndentStartFilterInput = {
  readonly magnitude: InputMaybe<IntQueryOperatorInput>;
  readonly unit: InputMaybe<StringQueryOperatorInput>;
};

type GoogleDocsDocumentListsKix_mjl35y78w0e3ListPropertiesNestingLevelsTextStyle = {
  readonly underline: Maybe<Scalars['Boolean']>;
};

type GoogleDocsDocumentListsKix_mjl35y78w0e3ListPropertiesNestingLevelsTextStyleFilterInput = {
  readonly underline: InputMaybe<BooleanQueryOperatorInput>;
};

type GoogleDocsDocumentListsKix_o3m3nsr5t2cq = {
  readonly listProperties: Maybe<GoogleDocsDocumentListsKix_o3m3nsr5t2cqListProperties>;
};

type GoogleDocsDocumentListsKix_o3m3nsr5t2cqFilterInput = {
  readonly listProperties: InputMaybe<GoogleDocsDocumentListsKix_o3m3nsr5t2cqListPropertiesFilterInput>;
};

type GoogleDocsDocumentListsKix_o3m3nsr5t2cqListProperties = {
  readonly nestingLevels: Maybe<ReadonlyArray<Maybe<GoogleDocsDocumentListsKix_o3m3nsr5t2cqListPropertiesNestingLevels>>>;
};

type GoogleDocsDocumentListsKix_o3m3nsr5t2cqListPropertiesFilterInput = {
  readonly nestingLevels: InputMaybe<GoogleDocsDocumentListsKix_o3m3nsr5t2cqListPropertiesNestingLevelsFilterListInput>;
};

type GoogleDocsDocumentListsKix_o3m3nsr5t2cqListPropertiesNestingLevels = {
  readonly bulletAlignment: Maybe<Scalars['String']>;
  readonly glyphFormat: Maybe<Scalars['String']>;
  readonly glyphSymbol: Maybe<Scalars['String']>;
  readonly indentFirstLine: Maybe<GoogleDocsDocumentListsKix_o3m3nsr5t2cqListPropertiesNestingLevelsIndentFirstLine>;
  readonly indentStart: Maybe<GoogleDocsDocumentListsKix_o3m3nsr5t2cqListPropertiesNestingLevelsIndentStart>;
  readonly startNumber: Maybe<Scalars['Int']>;
  readonly textStyle: Maybe<GoogleDocsDocumentListsKix_o3m3nsr5t2cqListPropertiesNestingLevelsTextStyle>;
};

type GoogleDocsDocumentListsKix_o3m3nsr5t2cqListPropertiesNestingLevelsFilterInput = {
  readonly bulletAlignment: InputMaybe<StringQueryOperatorInput>;
  readonly glyphFormat: InputMaybe<StringQueryOperatorInput>;
  readonly glyphSymbol: InputMaybe<StringQueryOperatorInput>;
  readonly indentFirstLine: InputMaybe<GoogleDocsDocumentListsKix_o3m3nsr5t2cqListPropertiesNestingLevelsIndentFirstLineFilterInput>;
  readonly indentStart: InputMaybe<GoogleDocsDocumentListsKix_o3m3nsr5t2cqListPropertiesNestingLevelsIndentStartFilterInput>;
  readonly startNumber: InputMaybe<IntQueryOperatorInput>;
  readonly textStyle: InputMaybe<GoogleDocsDocumentListsKix_o3m3nsr5t2cqListPropertiesNestingLevelsTextStyleFilterInput>;
};

type GoogleDocsDocumentListsKix_o3m3nsr5t2cqListPropertiesNestingLevelsFilterListInput = {
  readonly elemMatch: InputMaybe<GoogleDocsDocumentListsKix_o3m3nsr5t2cqListPropertiesNestingLevelsFilterInput>;
};

type GoogleDocsDocumentListsKix_o3m3nsr5t2cqListPropertiesNestingLevelsIndentFirstLine = {
  readonly magnitude: Maybe<Scalars['Int']>;
  readonly unit: Maybe<Scalars['String']>;
};

type GoogleDocsDocumentListsKix_o3m3nsr5t2cqListPropertiesNestingLevelsIndentFirstLineFilterInput = {
  readonly magnitude: InputMaybe<IntQueryOperatorInput>;
  readonly unit: InputMaybe<StringQueryOperatorInput>;
};

type GoogleDocsDocumentListsKix_o3m3nsr5t2cqListPropertiesNestingLevelsIndentStart = {
  readonly magnitude: Maybe<Scalars['Int']>;
  readonly unit: Maybe<Scalars['String']>;
};

type GoogleDocsDocumentListsKix_o3m3nsr5t2cqListPropertiesNestingLevelsIndentStartFilterInput = {
  readonly magnitude: InputMaybe<IntQueryOperatorInput>;
  readonly unit: InputMaybe<StringQueryOperatorInput>;
};

type GoogleDocsDocumentListsKix_o3m3nsr5t2cqListPropertiesNestingLevelsTextStyle = {
  readonly underline: Maybe<Scalars['Boolean']>;
};

type GoogleDocsDocumentListsKix_o3m3nsr5t2cqListPropertiesNestingLevelsTextStyleFilterInput = {
  readonly underline: InputMaybe<BooleanQueryOperatorInput>;
};

type GoogleDocsDocumentListsKix_ti11o7tro4xp = {
  readonly listProperties: Maybe<GoogleDocsDocumentListsKix_ti11o7tro4xpListProperties>;
};

type GoogleDocsDocumentListsKix_ti11o7tro4xpFilterInput = {
  readonly listProperties: InputMaybe<GoogleDocsDocumentListsKix_ti11o7tro4xpListPropertiesFilterInput>;
};

type GoogleDocsDocumentListsKix_ti11o7tro4xpListProperties = {
  readonly nestingLevels: Maybe<ReadonlyArray<Maybe<GoogleDocsDocumentListsKix_ti11o7tro4xpListPropertiesNestingLevels>>>;
};

type GoogleDocsDocumentListsKix_ti11o7tro4xpListPropertiesFilterInput = {
  readonly nestingLevels: InputMaybe<GoogleDocsDocumentListsKix_ti11o7tro4xpListPropertiesNestingLevelsFilterListInput>;
};

type GoogleDocsDocumentListsKix_ti11o7tro4xpListPropertiesNestingLevels = {
  readonly bulletAlignment: Maybe<Scalars['String']>;
  readonly glyphFormat: Maybe<Scalars['String']>;
  readonly glyphSymbol: Maybe<Scalars['String']>;
  readonly indentFirstLine: Maybe<GoogleDocsDocumentListsKix_ti11o7tro4xpListPropertiesNestingLevelsIndentFirstLine>;
  readonly indentStart: Maybe<GoogleDocsDocumentListsKix_ti11o7tro4xpListPropertiesNestingLevelsIndentStart>;
  readonly startNumber: Maybe<Scalars['Int']>;
  readonly textStyle: Maybe<GoogleDocsDocumentListsKix_ti11o7tro4xpListPropertiesNestingLevelsTextStyle>;
};

type GoogleDocsDocumentListsKix_ti11o7tro4xpListPropertiesNestingLevelsFilterInput = {
  readonly bulletAlignment: InputMaybe<StringQueryOperatorInput>;
  readonly glyphFormat: InputMaybe<StringQueryOperatorInput>;
  readonly glyphSymbol: InputMaybe<StringQueryOperatorInput>;
  readonly indentFirstLine: InputMaybe<GoogleDocsDocumentListsKix_ti11o7tro4xpListPropertiesNestingLevelsIndentFirstLineFilterInput>;
  readonly indentStart: InputMaybe<GoogleDocsDocumentListsKix_ti11o7tro4xpListPropertiesNestingLevelsIndentStartFilterInput>;
  readonly startNumber: InputMaybe<IntQueryOperatorInput>;
  readonly textStyle: InputMaybe<GoogleDocsDocumentListsKix_ti11o7tro4xpListPropertiesNestingLevelsTextStyleFilterInput>;
};

type GoogleDocsDocumentListsKix_ti11o7tro4xpListPropertiesNestingLevelsFilterListInput = {
  readonly elemMatch: InputMaybe<GoogleDocsDocumentListsKix_ti11o7tro4xpListPropertiesNestingLevelsFilterInput>;
};

type GoogleDocsDocumentListsKix_ti11o7tro4xpListPropertiesNestingLevelsIndentFirstLine = {
  readonly magnitude: Maybe<Scalars['Int']>;
  readonly unit: Maybe<Scalars['String']>;
};

type GoogleDocsDocumentListsKix_ti11o7tro4xpListPropertiesNestingLevelsIndentFirstLineFilterInput = {
  readonly magnitude: InputMaybe<IntQueryOperatorInput>;
  readonly unit: InputMaybe<StringQueryOperatorInput>;
};

type GoogleDocsDocumentListsKix_ti11o7tro4xpListPropertiesNestingLevelsIndentStart = {
  readonly magnitude: Maybe<Scalars['Int']>;
  readonly unit: Maybe<Scalars['String']>;
};

type GoogleDocsDocumentListsKix_ti11o7tro4xpListPropertiesNestingLevelsIndentStartFilterInput = {
  readonly magnitude: InputMaybe<IntQueryOperatorInput>;
  readonly unit: InputMaybe<StringQueryOperatorInput>;
};

type GoogleDocsDocumentListsKix_ti11o7tro4xpListPropertiesNestingLevelsTextStyle = {
  readonly underline: Maybe<Scalars['Boolean']>;
};

type GoogleDocsDocumentListsKix_ti11o7tro4xpListPropertiesNestingLevelsTextStyleFilterInput = {
  readonly underline: InputMaybe<BooleanQueryOperatorInput>;
};

type GoogleDocsDocumentNamedStyles = {
  readonly styles: Maybe<ReadonlyArray<Maybe<GoogleDocsDocumentNamedStylesStyles>>>;
};

type GoogleDocsDocumentNamedStylesFilterInput = {
  readonly styles: InputMaybe<GoogleDocsDocumentNamedStylesStylesFilterListInput>;
};

type GoogleDocsDocumentNamedStylesStyles = {
  readonly namedStyleType: Maybe<Scalars['String']>;
  readonly paragraphStyle: Maybe<GoogleDocsDocumentNamedStylesStylesParagraphStyle>;
  readonly textStyle: Maybe<GoogleDocsDocumentNamedStylesStylesTextStyle>;
};

type GoogleDocsDocumentNamedStylesStylesFilterInput = {
  readonly namedStyleType: InputMaybe<StringQueryOperatorInput>;
  readonly paragraphStyle: InputMaybe<GoogleDocsDocumentNamedStylesStylesParagraphStyleFilterInput>;
  readonly textStyle: InputMaybe<GoogleDocsDocumentNamedStylesStylesTextStyleFilterInput>;
};

type GoogleDocsDocumentNamedStylesStylesFilterListInput = {
  readonly elemMatch: InputMaybe<GoogleDocsDocumentNamedStylesStylesFilterInput>;
};

type GoogleDocsDocumentNamedStylesStylesParagraphStyle = {
  readonly alignment: Maybe<Scalars['String']>;
  readonly avoidWidowAndOrphan: Maybe<Scalars['Boolean']>;
  readonly borderBetween: Maybe<GoogleDocsDocumentNamedStylesStylesParagraphStyleBorderBetween>;
  readonly borderBottom: Maybe<GoogleDocsDocumentNamedStylesStylesParagraphStyleBorderBottom>;
  readonly borderLeft: Maybe<GoogleDocsDocumentNamedStylesStylesParagraphStyleBorderLeft>;
  readonly borderRight: Maybe<GoogleDocsDocumentNamedStylesStylesParagraphStyleBorderRight>;
  readonly borderTop: Maybe<GoogleDocsDocumentNamedStylesStylesParagraphStyleBorderTop>;
  readonly direction: Maybe<Scalars['String']>;
  readonly indentEnd: Maybe<GoogleDocsDocumentNamedStylesStylesParagraphStyleIndentEnd>;
  readonly indentFirstLine: Maybe<GoogleDocsDocumentNamedStylesStylesParagraphStyleIndentFirstLine>;
  readonly indentStart: Maybe<GoogleDocsDocumentNamedStylesStylesParagraphStyleIndentStart>;
  readonly keepLinesTogether: Maybe<Scalars['Boolean']>;
  readonly keepWithNext: Maybe<Scalars['Boolean']>;
  readonly lineSpacing: Maybe<Scalars['Int']>;
  readonly namedStyleType: Maybe<Scalars['String']>;
  readonly pageBreakBefore: Maybe<Scalars['Boolean']>;
  readonly spaceAbove: Maybe<GoogleDocsDocumentNamedStylesStylesParagraphStyleSpaceAbove>;
  readonly spaceBelow: Maybe<GoogleDocsDocumentNamedStylesStylesParagraphStyleSpaceBelow>;
  readonly spacingMode: Maybe<Scalars['String']>;
};

type GoogleDocsDocumentNamedStylesStylesParagraphStyleBorderBetween = {
  readonly dashStyle: Maybe<Scalars['String']>;
  readonly padding: Maybe<GoogleDocsDocumentNamedStylesStylesParagraphStyleBorderBetweenPadding>;
  readonly width: Maybe<GoogleDocsDocumentNamedStylesStylesParagraphStyleBorderBetweenWidth>;
};

type GoogleDocsDocumentNamedStylesStylesParagraphStyleBorderBetweenFilterInput = {
  readonly dashStyle: InputMaybe<StringQueryOperatorInput>;
  readonly padding: InputMaybe<GoogleDocsDocumentNamedStylesStylesParagraphStyleBorderBetweenPaddingFilterInput>;
  readonly width: InputMaybe<GoogleDocsDocumentNamedStylesStylesParagraphStyleBorderBetweenWidthFilterInput>;
};

type GoogleDocsDocumentNamedStylesStylesParagraphStyleBorderBetweenPadding = {
  readonly unit: Maybe<Scalars['String']>;
};

type GoogleDocsDocumentNamedStylesStylesParagraphStyleBorderBetweenPaddingFilterInput = {
  readonly unit: InputMaybe<StringQueryOperatorInput>;
};

type GoogleDocsDocumentNamedStylesStylesParagraphStyleBorderBetweenWidth = {
  readonly unit: Maybe<Scalars['String']>;
};

type GoogleDocsDocumentNamedStylesStylesParagraphStyleBorderBetweenWidthFilterInput = {
  readonly unit: InputMaybe<StringQueryOperatorInput>;
};

type GoogleDocsDocumentNamedStylesStylesParagraphStyleBorderBottom = {
  readonly dashStyle: Maybe<Scalars['String']>;
  readonly padding: Maybe<GoogleDocsDocumentNamedStylesStylesParagraphStyleBorderBottomPadding>;
  readonly width: Maybe<GoogleDocsDocumentNamedStylesStylesParagraphStyleBorderBottomWidth>;
};

type GoogleDocsDocumentNamedStylesStylesParagraphStyleBorderBottomFilterInput = {
  readonly dashStyle: InputMaybe<StringQueryOperatorInput>;
  readonly padding: InputMaybe<GoogleDocsDocumentNamedStylesStylesParagraphStyleBorderBottomPaddingFilterInput>;
  readonly width: InputMaybe<GoogleDocsDocumentNamedStylesStylesParagraphStyleBorderBottomWidthFilterInput>;
};

type GoogleDocsDocumentNamedStylesStylesParagraphStyleBorderBottomPadding = {
  readonly unit: Maybe<Scalars['String']>;
};

type GoogleDocsDocumentNamedStylesStylesParagraphStyleBorderBottomPaddingFilterInput = {
  readonly unit: InputMaybe<StringQueryOperatorInput>;
};

type GoogleDocsDocumentNamedStylesStylesParagraphStyleBorderBottomWidth = {
  readonly unit: Maybe<Scalars['String']>;
};

type GoogleDocsDocumentNamedStylesStylesParagraphStyleBorderBottomWidthFilterInput = {
  readonly unit: InputMaybe<StringQueryOperatorInput>;
};

type GoogleDocsDocumentNamedStylesStylesParagraphStyleBorderLeft = {
  readonly dashStyle: Maybe<Scalars['String']>;
  readonly padding: Maybe<GoogleDocsDocumentNamedStylesStylesParagraphStyleBorderLeftPadding>;
  readonly width: Maybe<GoogleDocsDocumentNamedStylesStylesParagraphStyleBorderLeftWidth>;
};

type GoogleDocsDocumentNamedStylesStylesParagraphStyleBorderLeftFilterInput = {
  readonly dashStyle: InputMaybe<StringQueryOperatorInput>;
  readonly padding: InputMaybe<GoogleDocsDocumentNamedStylesStylesParagraphStyleBorderLeftPaddingFilterInput>;
  readonly width: InputMaybe<GoogleDocsDocumentNamedStylesStylesParagraphStyleBorderLeftWidthFilterInput>;
};

type GoogleDocsDocumentNamedStylesStylesParagraphStyleBorderLeftPadding = {
  readonly unit: Maybe<Scalars['String']>;
};

type GoogleDocsDocumentNamedStylesStylesParagraphStyleBorderLeftPaddingFilterInput = {
  readonly unit: InputMaybe<StringQueryOperatorInput>;
};

type GoogleDocsDocumentNamedStylesStylesParagraphStyleBorderLeftWidth = {
  readonly unit: Maybe<Scalars['String']>;
};

type GoogleDocsDocumentNamedStylesStylesParagraphStyleBorderLeftWidthFilterInput = {
  readonly unit: InputMaybe<StringQueryOperatorInput>;
};

type GoogleDocsDocumentNamedStylesStylesParagraphStyleBorderRight = {
  readonly dashStyle: Maybe<Scalars['String']>;
  readonly padding: Maybe<GoogleDocsDocumentNamedStylesStylesParagraphStyleBorderRightPadding>;
  readonly width: Maybe<GoogleDocsDocumentNamedStylesStylesParagraphStyleBorderRightWidth>;
};

type GoogleDocsDocumentNamedStylesStylesParagraphStyleBorderRightFilterInput = {
  readonly dashStyle: InputMaybe<StringQueryOperatorInput>;
  readonly padding: InputMaybe<GoogleDocsDocumentNamedStylesStylesParagraphStyleBorderRightPaddingFilterInput>;
  readonly width: InputMaybe<GoogleDocsDocumentNamedStylesStylesParagraphStyleBorderRightWidthFilterInput>;
};

type GoogleDocsDocumentNamedStylesStylesParagraphStyleBorderRightPadding = {
  readonly unit: Maybe<Scalars['String']>;
};

type GoogleDocsDocumentNamedStylesStylesParagraphStyleBorderRightPaddingFilterInput = {
  readonly unit: InputMaybe<StringQueryOperatorInput>;
};

type GoogleDocsDocumentNamedStylesStylesParagraphStyleBorderRightWidth = {
  readonly unit: Maybe<Scalars['String']>;
};

type GoogleDocsDocumentNamedStylesStylesParagraphStyleBorderRightWidthFilterInput = {
  readonly unit: InputMaybe<StringQueryOperatorInput>;
};

type GoogleDocsDocumentNamedStylesStylesParagraphStyleBorderTop = {
  readonly dashStyle: Maybe<Scalars['String']>;
  readonly padding: Maybe<GoogleDocsDocumentNamedStylesStylesParagraphStyleBorderTopPadding>;
  readonly width: Maybe<GoogleDocsDocumentNamedStylesStylesParagraphStyleBorderTopWidth>;
};

type GoogleDocsDocumentNamedStylesStylesParagraphStyleBorderTopFilterInput = {
  readonly dashStyle: InputMaybe<StringQueryOperatorInput>;
  readonly padding: InputMaybe<GoogleDocsDocumentNamedStylesStylesParagraphStyleBorderTopPaddingFilterInput>;
  readonly width: InputMaybe<GoogleDocsDocumentNamedStylesStylesParagraphStyleBorderTopWidthFilterInput>;
};

type GoogleDocsDocumentNamedStylesStylesParagraphStyleBorderTopPadding = {
  readonly unit: Maybe<Scalars['String']>;
};

type GoogleDocsDocumentNamedStylesStylesParagraphStyleBorderTopPaddingFilterInput = {
  readonly unit: InputMaybe<StringQueryOperatorInput>;
};

type GoogleDocsDocumentNamedStylesStylesParagraphStyleBorderTopWidth = {
  readonly unit: Maybe<Scalars['String']>;
};

type GoogleDocsDocumentNamedStylesStylesParagraphStyleBorderTopWidthFilterInput = {
  readonly unit: InputMaybe<StringQueryOperatorInput>;
};

type GoogleDocsDocumentNamedStylesStylesParagraphStyleFilterInput = {
  readonly alignment: InputMaybe<StringQueryOperatorInput>;
  readonly avoidWidowAndOrphan: InputMaybe<BooleanQueryOperatorInput>;
  readonly borderBetween: InputMaybe<GoogleDocsDocumentNamedStylesStylesParagraphStyleBorderBetweenFilterInput>;
  readonly borderBottom: InputMaybe<GoogleDocsDocumentNamedStylesStylesParagraphStyleBorderBottomFilterInput>;
  readonly borderLeft: InputMaybe<GoogleDocsDocumentNamedStylesStylesParagraphStyleBorderLeftFilterInput>;
  readonly borderRight: InputMaybe<GoogleDocsDocumentNamedStylesStylesParagraphStyleBorderRightFilterInput>;
  readonly borderTop: InputMaybe<GoogleDocsDocumentNamedStylesStylesParagraphStyleBorderTopFilterInput>;
  readonly direction: InputMaybe<StringQueryOperatorInput>;
  readonly indentEnd: InputMaybe<GoogleDocsDocumentNamedStylesStylesParagraphStyleIndentEndFilterInput>;
  readonly indentFirstLine: InputMaybe<GoogleDocsDocumentNamedStylesStylesParagraphStyleIndentFirstLineFilterInput>;
  readonly indentStart: InputMaybe<GoogleDocsDocumentNamedStylesStylesParagraphStyleIndentStartFilterInput>;
  readonly keepLinesTogether: InputMaybe<BooleanQueryOperatorInput>;
  readonly keepWithNext: InputMaybe<BooleanQueryOperatorInput>;
  readonly lineSpacing: InputMaybe<IntQueryOperatorInput>;
  readonly namedStyleType: InputMaybe<StringQueryOperatorInput>;
  readonly pageBreakBefore: InputMaybe<BooleanQueryOperatorInput>;
  readonly spaceAbove: InputMaybe<GoogleDocsDocumentNamedStylesStylesParagraphStyleSpaceAboveFilterInput>;
  readonly spaceBelow: InputMaybe<GoogleDocsDocumentNamedStylesStylesParagraphStyleSpaceBelowFilterInput>;
  readonly spacingMode: InputMaybe<StringQueryOperatorInput>;
};

type GoogleDocsDocumentNamedStylesStylesParagraphStyleIndentEnd = {
  readonly unit: Maybe<Scalars['String']>;
};

type GoogleDocsDocumentNamedStylesStylesParagraphStyleIndentEndFilterInput = {
  readonly unit: InputMaybe<StringQueryOperatorInput>;
};

type GoogleDocsDocumentNamedStylesStylesParagraphStyleIndentFirstLine = {
  readonly unit: Maybe<Scalars['String']>;
};

type GoogleDocsDocumentNamedStylesStylesParagraphStyleIndentFirstLineFilterInput = {
  readonly unit: InputMaybe<StringQueryOperatorInput>;
};

type GoogleDocsDocumentNamedStylesStylesParagraphStyleIndentStart = {
  readonly unit: Maybe<Scalars['String']>;
};

type GoogleDocsDocumentNamedStylesStylesParagraphStyleIndentStartFilterInput = {
  readonly unit: InputMaybe<StringQueryOperatorInput>;
};

type GoogleDocsDocumentNamedStylesStylesParagraphStyleSpaceAbove = {
  readonly magnitude: Maybe<Scalars['Int']>;
  readonly unit: Maybe<Scalars['String']>;
};

type GoogleDocsDocumentNamedStylesStylesParagraphStyleSpaceAboveFilterInput = {
  readonly magnitude: InputMaybe<IntQueryOperatorInput>;
  readonly unit: InputMaybe<StringQueryOperatorInput>;
};

type GoogleDocsDocumentNamedStylesStylesParagraphStyleSpaceBelow = {
  readonly magnitude: Maybe<Scalars['Int']>;
  readonly unit: Maybe<Scalars['String']>;
};

type GoogleDocsDocumentNamedStylesStylesParagraphStyleSpaceBelowFilterInput = {
  readonly magnitude: InputMaybe<IntQueryOperatorInput>;
  readonly unit: InputMaybe<StringQueryOperatorInput>;
};

type GoogleDocsDocumentNamedStylesStylesTextStyle = {
  readonly baselineOffset: Maybe<Scalars['String']>;
  readonly bold: Maybe<Scalars['Boolean']>;
  readonly fontSize: Maybe<GoogleDocsDocumentNamedStylesStylesTextStyleFontSize>;
  readonly foregroundColor: Maybe<GoogleDocsDocumentNamedStylesStylesTextStyleForegroundColor>;
  readonly italic: Maybe<Scalars['Boolean']>;
  readonly smallCaps: Maybe<Scalars['Boolean']>;
  readonly strikethrough: Maybe<Scalars['Boolean']>;
  readonly underline: Maybe<Scalars['Boolean']>;
  readonly weightedFontFamily: Maybe<GoogleDocsDocumentNamedStylesStylesTextStyleWeightedFontFamily>;
};

type GoogleDocsDocumentNamedStylesStylesTextStyleFilterInput = {
  readonly baselineOffset: InputMaybe<StringQueryOperatorInput>;
  readonly bold: InputMaybe<BooleanQueryOperatorInput>;
  readonly fontSize: InputMaybe<GoogleDocsDocumentNamedStylesStylesTextStyleFontSizeFilterInput>;
  readonly foregroundColor: InputMaybe<GoogleDocsDocumentNamedStylesStylesTextStyleForegroundColorFilterInput>;
  readonly italic: InputMaybe<BooleanQueryOperatorInput>;
  readonly smallCaps: InputMaybe<BooleanQueryOperatorInput>;
  readonly strikethrough: InputMaybe<BooleanQueryOperatorInput>;
  readonly underline: InputMaybe<BooleanQueryOperatorInput>;
  readonly weightedFontFamily: InputMaybe<GoogleDocsDocumentNamedStylesStylesTextStyleWeightedFontFamilyFilterInput>;
};

type GoogleDocsDocumentNamedStylesStylesTextStyleFontSize = {
  readonly magnitude: Maybe<Scalars['Int']>;
  readonly unit: Maybe<Scalars['String']>;
};

type GoogleDocsDocumentNamedStylesStylesTextStyleFontSizeFilterInput = {
  readonly magnitude: InputMaybe<IntQueryOperatorInput>;
  readonly unit: InputMaybe<StringQueryOperatorInput>;
};

type GoogleDocsDocumentNamedStylesStylesTextStyleForegroundColor = {
  readonly color: Maybe<GoogleDocsDocumentNamedStylesStylesTextStyleForegroundColorColor>;
};

type GoogleDocsDocumentNamedStylesStylesTextStyleForegroundColorColor = {
  readonly rgbColor: Maybe<GoogleDocsDocumentNamedStylesStylesTextStyleForegroundColorColorRgbColor>;
};

type GoogleDocsDocumentNamedStylesStylesTextStyleForegroundColorColorFilterInput = {
  readonly rgbColor: InputMaybe<GoogleDocsDocumentNamedStylesStylesTextStyleForegroundColorColorRgbColorFilterInput>;
};

type GoogleDocsDocumentNamedStylesStylesTextStyleForegroundColorColorRgbColor = {
  readonly blue: Maybe<Scalars['Float']>;
  readonly green: Maybe<Scalars['Float']>;
  readonly red: Maybe<Scalars['Float']>;
};

type GoogleDocsDocumentNamedStylesStylesTextStyleForegroundColorColorRgbColorFilterInput = {
  readonly blue: InputMaybe<FloatQueryOperatorInput>;
  readonly green: InputMaybe<FloatQueryOperatorInput>;
  readonly red: InputMaybe<FloatQueryOperatorInput>;
};

type GoogleDocsDocumentNamedStylesStylesTextStyleForegroundColorFilterInput = {
  readonly color: InputMaybe<GoogleDocsDocumentNamedStylesStylesTextStyleForegroundColorColorFilterInput>;
};

type GoogleDocsDocumentNamedStylesStylesTextStyleWeightedFontFamily = {
  readonly fontFamily: Maybe<Scalars['String']>;
  readonly weight: Maybe<Scalars['Int']>;
};

type GoogleDocsDocumentNamedStylesStylesTextStyleWeightedFontFamilyFilterInput = {
  readonly fontFamily: InputMaybe<StringQueryOperatorInput>;
  readonly weight: InputMaybe<IntQueryOperatorInput>;
};

type GoogleDocsEdge = {
  readonly next: Maybe<GoogleDocs>;
  readonly node: GoogleDocs;
  readonly previous: Maybe<GoogleDocs>;
};

type GoogleDocsFieldsEnum =
  | 'breadcrumb'
  | 'breadcrumb.name'
  | 'breadcrumb.slug'
  | 'childMdx.body'
  | 'childMdx.children'
  | 'childMdx.children.children'
  | 'childMdx.children.children.children'
  | 'childMdx.children.children.id'
  | 'childMdx.children.id'
  | 'childMdx.children.internal.content'
  | 'childMdx.children.internal.contentDigest'
  | 'childMdx.children.internal.contentFilePath'
  | 'childMdx.children.internal.description'
  | 'childMdx.children.internal.fieldOwners'
  | 'childMdx.children.internal.ignoreType'
  | 'childMdx.children.internal.mediaType'
  | 'childMdx.children.internal.owner'
  | 'childMdx.children.internal.type'
  | 'childMdx.children.parent.children'
  | 'childMdx.children.parent.id'
  | 'childMdx.excerpt'
  | 'childMdx.fileAbsolutePath'
  | 'childMdx.frontmatter.breadcrumb'
  | 'childMdx.frontmatter.breadcrumb.name'
  | 'childMdx.frontmatter.breadcrumb.slug'
  | 'childMdx.frontmatter.cook'
  | 'childMdx.frontmatter.cover.alt'
  | 'childMdx.frontmatter.cover.image'
  | 'childMdx.frontmatter.cover.title'
  | 'childMdx.frontmatter.createdTime'
  | 'childMdx.frontmatter.date'
  | 'childMdx.frontmatter.description'
  | 'childMdx.frontmatter.exclude'
  | 'childMdx.frontmatter.id'
  | 'childMdx.frontmatter.index'
  | 'childMdx.frontmatter.level'
  | 'childMdx.frontmatter.mimeType'
  | 'childMdx.frontmatter.modifiedTime'
  | 'childMdx.frontmatter.name'
  | 'childMdx.frontmatter.page'
  | 'childMdx.frontmatter.parents'
  | 'childMdx.frontmatter.path'
  | 'childMdx.frontmatter.prep'
  | 'childMdx.frontmatter.servings'
  | 'childMdx.frontmatter.slug'
  | 'childMdx.frontmatter.starred'
  | 'childMdx.frontmatter.tags'
  | 'childMdx.frontmatter.template'
  | 'childMdx.frontmatter.title'
  | 'childMdx.headings'
  | 'childMdx.headings.depth'
  | 'childMdx.headings.value'
  | 'childMdx.html'
  | 'childMdx.id'
  | 'childMdx.internal.content'
  | 'childMdx.internal.contentDigest'
  | 'childMdx.internal.contentFilePath'
  | 'childMdx.internal.description'
  | 'childMdx.internal.fieldOwners'
  | 'childMdx.internal.ignoreType'
  | 'childMdx.internal.mediaType'
  | 'childMdx.internal.owner'
  | 'childMdx.internal.type'
  | 'childMdx.mdxAST'
  | 'childMdx.parent.children'
  | 'childMdx.parent.children.children'
  | 'childMdx.parent.children.id'
  | 'childMdx.parent.id'
  | 'childMdx.parent.internal.content'
  | 'childMdx.parent.internal.contentDigest'
  | 'childMdx.parent.internal.contentFilePath'
  | 'childMdx.parent.internal.description'
  | 'childMdx.parent.internal.fieldOwners'
  | 'childMdx.parent.internal.ignoreType'
  | 'childMdx.parent.internal.mediaType'
  | 'childMdx.parent.internal.owner'
  | 'childMdx.parent.internal.type'
  | 'childMdx.parent.parent.children'
  | 'childMdx.parent.parent.id'
  | 'childMdx.rawBody'
  | 'childMdx.slug'
  | 'childMdx.tableOfContents'
  | 'childMdx.timeToRead'
  | 'childMdx.wordCount.paragraphs'
  | 'childMdx.wordCount.sentences'
  | 'childMdx.wordCount.words'
  | 'children'
  | 'childrenMdx'
  | 'childrenMdx.body'
  | 'childrenMdx.children'
  | 'childrenMdx.children.children'
  | 'childrenMdx.children.children.children'
  | 'childrenMdx.children.children.id'
  | 'childrenMdx.children.id'
  | 'childrenMdx.children.internal.content'
  | 'childrenMdx.children.internal.contentDigest'
  | 'childrenMdx.children.internal.contentFilePath'
  | 'childrenMdx.children.internal.description'
  | 'childrenMdx.children.internal.fieldOwners'
  | 'childrenMdx.children.internal.ignoreType'
  | 'childrenMdx.children.internal.mediaType'
  | 'childrenMdx.children.internal.owner'
  | 'childrenMdx.children.internal.type'
  | 'childrenMdx.children.parent.children'
  | 'childrenMdx.children.parent.id'
  | 'childrenMdx.excerpt'
  | 'childrenMdx.fileAbsolutePath'
  | 'childrenMdx.frontmatter.breadcrumb'
  | 'childrenMdx.frontmatter.breadcrumb.name'
  | 'childrenMdx.frontmatter.breadcrumb.slug'
  | 'childrenMdx.frontmatter.cook'
  | 'childrenMdx.frontmatter.cover.alt'
  | 'childrenMdx.frontmatter.cover.image'
  | 'childrenMdx.frontmatter.cover.title'
  | 'childrenMdx.frontmatter.createdTime'
  | 'childrenMdx.frontmatter.date'
  | 'childrenMdx.frontmatter.description'
  | 'childrenMdx.frontmatter.exclude'
  | 'childrenMdx.frontmatter.id'
  | 'childrenMdx.frontmatter.index'
  | 'childrenMdx.frontmatter.level'
  | 'childrenMdx.frontmatter.mimeType'
  | 'childrenMdx.frontmatter.modifiedTime'
  | 'childrenMdx.frontmatter.name'
  | 'childrenMdx.frontmatter.page'
  | 'childrenMdx.frontmatter.parents'
  | 'childrenMdx.frontmatter.path'
  | 'childrenMdx.frontmatter.prep'
  | 'childrenMdx.frontmatter.servings'
  | 'childrenMdx.frontmatter.slug'
  | 'childrenMdx.frontmatter.starred'
  | 'childrenMdx.frontmatter.tags'
  | 'childrenMdx.frontmatter.template'
  | 'childrenMdx.frontmatter.title'
  | 'childrenMdx.headings'
  | 'childrenMdx.headings.depth'
  | 'childrenMdx.headings.value'
  | 'childrenMdx.html'
  | 'childrenMdx.id'
  | 'childrenMdx.internal.content'
  | 'childrenMdx.internal.contentDigest'
  | 'childrenMdx.internal.contentFilePath'
  | 'childrenMdx.internal.description'
  | 'childrenMdx.internal.fieldOwners'
  | 'childrenMdx.internal.ignoreType'
  | 'childrenMdx.internal.mediaType'
  | 'childrenMdx.internal.owner'
  | 'childrenMdx.internal.type'
  | 'childrenMdx.mdxAST'
  | 'childrenMdx.parent.children'
  | 'childrenMdx.parent.children.children'
  | 'childrenMdx.parent.children.id'
  | 'childrenMdx.parent.id'
  | 'childrenMdx.parent.internal.content'
  | 'childrenMdx.parent.internal.contentDigest'
  | 'childrenMdx.parent.internal.contentFilePath'
  | 'childrenMdx.parent.internal.description'
  | 'childrenMdx.parent.internal.fieldOwners'
  | 'childrenMdx.parent.internal.ignoreType'
  | 'childrenMdx.parent.internal.mediaType'
  | 'childrenMdx.parent.internal.owner'
  | 'childrenMdx.parent.internal.type'
  | 'childrenMdx.parent.parent.children'
  | 'childrenMdx.parent.parent.id'
  | 'childrenMdx.rawBody'
  | 'childrenMdx.slug'
  | 'childrenMdx.tableOfContents'
  | 'childrenMdx.timeToRead'
  | 'childrenMdx.wordCount.paragraphs'
  | 'childrenMdx.wordCount.sentences'
  | 'childrenMdx.wordCount.words'
  | 'children.children'
  | 'children.children.children'
  | 'children.children.children.children'
  | 'children.children.children.id'
  | 'children.children.id'
  | 'children.children.internal.content'
  | 'children.children.internal.contentDigest'
  | 'children.children.internal.contentFilePath'
  | 'children.children.internal.description'
  | 'children.children.internal.fieldOwners'
  | 'children.children.internal.ignoreType'
  | 'children.children.internal.mediaType'
  | 'children.children.internal.owner'
  | 'children.children.internal.type'
  | 'children.children.parent.children'
  | 'children.children.parent.id'
  | 'children.id'
  | 'children.internal.content'
  | 'children.internal.contentDigest'
  | 'children.internal.contentFilePath'
  | 'children.internal.description'
  | 'children.internal.fieldOwners'
  | 'children.internal.ignoreType'
  | 'children.internal.mediaType'
  | 'children.internal.owner'
  | 'children.internal.type'
  | 'children.parent.children'
  | 'children.parent.children.children'
  | 'children.parent.children.id'
  | 'children.parent.id'
  | 'children.parent.internal.content'
  | 'children.parent.internal.contentDigest'
  | 'children.parent.internal.contentFilePath'
  | 'children.parent.internal.description'
  | 'children.parent.internal.fieldOwners'
  | 'children.parent.internal.ignoreType'
  | 'children.parent.internal.mediaType'
  | 'children.parent.internal.owner'
  | 'children.parent.internal.type'
  | 'children.parent.parent.children'
  | 'children.parent.parent.id'
  | 'cook'
  | 'cover.alt'
  | 'cover.image.absolutePath'
  | 'cover.image.accessTime'
  | 'cover.image.atime'
  | 'cover.image.atimeMs'
  | 'cover.image.base'
  | 'cover.image.birthTime'
  | 'cover.image.birthtime'
  | 'cover.image.birthtimeMs'
  | 'cover.image.blksize'
  | 'cover.image.blocks'
  | 'cover.image.changeTime'
  | 'cover.image.childImageSharp.children'
  | 'cover.image.childImageSharp.gatsbyImageData'
  | 'cover.image.childImageSharp.id'
  | 'cover.image.children'
  | 'cover.image.childrenImageSharp'
  | 'cover.image.childrenImageSharp.children'
  | 'cover.image.childrenImageSharp.gatsbyImageData'
  | 'cover.image.childrenImageSharp.id'
  | 'cover.image.children.children'
  | 'cover.image.children.id'
  | 'cover.image.ctime'
  | 'cover.image.ctimeMs'
  | 'cover.image.dev'
  | 'cover.image.dir'
  | 'cover.image.ext'
  | 'cover.image.extension'
  | 'cover.image.gid'
  | 'cover.image.id'
  | 'cover.image.ino'
  | 'cover.image.internal.content'
  | 'cover.image.internal.contentDigest'
  | 'cover.image.internal.contentFilePath'
  | 'cover.image.internal.description'
  | 'cover.image.internal.fieldOwners'
  | 'cover.image.internal.ignoreType'
  | 'cover.image.internal.mediaType'
  | 'cover.image.internal.owner'
  | 'cover.image.internal.type'
  | 'cover.image.mode'
  | 'cover.image.modifiedTime'
  | 'cover.image.mtime'
  | 'cover.image.mtimeMs'
  | 'cover.image.name'
  | 'cover.image.nlink'
  | 'cover.image.parent.children'
  | 'cover.image.parent.id'
  | 'cover.image.prettySize'
  | 'cover.image.rdev'
  | 'cover.image.relativeDirectory'
  | 'cover.image.relativePath'
  | 'cover.image.root'
  | 'cover.image.size'
  | 'cover.image.sourceInstanceName'
  | 'cover.image.uid'
  | 'cover.image.url'
  | 'cover.title'
  | 'createdTime'
  | 'date'
  | 'description'
  | 'dir'
  | 'document.body.content'
  | 'document.body.content.endIndex'
  | 'document.body.content.startIndex'
  | 'document.documentId'
  | 'document.documentStyle.defaultHeaderId'
  | 'document.documentStyle.firstPageFooterId'
  | 'document.documentStyle.firstPageHeaderId'
  | 'document.documentStyle.marginBottom.magnitude'
  | 'document.documentStyle.marginBottom.unit'
  | 'document.documentStyle.marginFooter.magnitude'
  | 'document.documentStyle.marginFooter.unit'
  | 'document.documentStyle.marginHeader.magnitude'
  | 'document.documentStyle.marginHeader.unit'
  | 'document.documentStyle.marginLeft.magnitude'
  | 'document.documentStyle.marginLeft.unit'
  | 'document.documentStyle.marginRight.magnitude'
  | 'document.documentStyle.marginRight.unit'
  | 'document.documentStyle.marginTop.magnitude'
  | 'document.documentStyle.marginTop.unit'
  | 'document.documentStyle.pageNumberStart'
  | 'document.documentStyle.useCustomHeaderFooterMargins'
  | 'document.documentStyle.useFirstPageHeaderFooter'
  | 'document.footers.kix_ces0yq1s0u9w.content'
  | 'document.footers.kix_ces0yq1s0u9w.footerId'
  | 'document.headers.kix_80xbd1bs2xxd.content'
  | 'document.headers.kix_80xbd1bs2xxd.headerId'
  | 'document.headers.kix_q0jj7o765vkn.content'
  | 'document.headers.kix_q0jj7o765vkn.headerId'
  | 'document.inlineObjects.kix_eowahsesxtr2.objectId'
  | 'document.inlineObjects.kix_rhb2qyc6rw7f.objectId'
  | 'document.inlineObjects.kix_y6go88nd7iyp.objectId'
  | 'document.namedStyles.styles'
  | 'document.namedStyles.styles.namedStyleType'
  | 'document.revisionId'
  | 'document.suggestionsViewMode'
  | 'document.title'
  | 'exclude'
  | 'id'
  | 'images'
  | 'images.absolutePath'
  | 'images.accessTime'
  | 'images.atime'
  | 'images.atimeMs'
  | 'images.base'
  | 'images.birthTime'
  | 'images.birthtime'
  | 'images.birthtimeMs'
  | 'images.blksize'
  | 'images.blocks'
  | 'images.changeTime'
  | 'images.childImageSharp.children'
  | 'images.childImageSharp.children.children'
  | 'images.childImageSharp.children.id'
  | 'images.childImageSharp.fixed.aspectRatio'
  | 'images.childImageSharp.fixed.base64'
  | 'images.childImageSharp.fixed.height'
  | 'images.childImageSharp.fixed.originalName'
  | 'images.childImageSharp.fixed.src'
  | 'images.childImageSharp.fixed.srcSet'
  | 'images.childImageSharp.fixed.srcSetWebp'
  | 'images.childImageSharp.fixed.srcWebp'
  | 'images.childImageSharp.fixed.tracedSVG'
  | 'images.childImageSharp.fixed.width'
  | 'images.childImageSharp.fluid.aspectRatio'
  | 'images.childImageSharp.fluid.base64'
  | 'images.childImageSharp.fluid.originalImg'
  | 'images.childImageSharp.fluid.originalName'
  | 'images.childImageSharp.fluid.presentationHeight'
  | 'images.childImageSharp.fluid.presentationWidth'
  | 'images.childImageSharp.fluid.sizes'
  | 'images.childImageSharp.fluid.src'
  | 'images.childImageSharp.fluid.srcSet'
  | 'images.childImageSharp.fluid.srcSetWebp'
  | 'images.childImageSharp.fluid.srcWebp'
  | 'images.childImageSharp.fluid.tracedSVG'
  | 'images.childImageSharp.gatsbyImageData'
  | 'images.childImageSharp.id'
  | 'images.childImageSharp.internal.content'
  | 'images.childImageSharp.internal.contentDigest'
  | 'images.childImageSharp.internal.contentFilePath'
  | 'images.childImageSharp.internal.description'
  | 'images.childImageSharp.internal.fieldOwners'
  | 'images.childImageSharp.internal.ignoreType'
  | 'images.childImageSharp.internal.mediaType'
  | 'images.childImageSharp.internal.owner'
  | 'images.childImageSharp.internal.type'
  | 'images.childImageSharp.original.height'
  | 'images.childImageSharp.original.src'
  | 'images.childImageSharp.original.width'
  | 'images.childImageSharp.parent.children'
  | 'images.childImageSharp.parent.id'
  | 'images.childImageSharp.resize.aspectRatio'
  | 'images.childImageSharp.resize.height'
  | 'images.childImageSharp.resize.originalName'
  | 'images.childImageSharp.resize.src'
  | 'images.childImageSharp.resize.tracedSVG'
  | 'images.childImageSharp.resize.width'
  | 'images.children'
  | 'images.childrenImageSharp'
  | 'images.childrenImageSharp.children'
  | 'images.childrenImageSharp.children.children'
  | 'images.childrenImageSharp.children.id'
  | 'images.childrenImageSharp.fixed.aspectRatio'
  | 'images.childrenImageSharp.fixed.base64'
  | 'images.childrenImageSharp.fixed.height'
  | 'images.childrenImageSharp.fixed.originalName'
  | 'images.childrenImageSharp.fixed.src'
  | 'images.childrenImageSharp.fixed.srcSet'
  | 'images.childrenImageSharp.fixed.srcSetWebp'
  | 'images.childrenImageSharp.fixed.srcWebp'
  | 'images.childrenImageSharp.fixed.tracedSVG'
  | 'images.childrenImageSharp.fixed.width'
  | 'images.childrenImageSharp.fluid.aspectRatio'
  | 'images.childrenImageSharp.fluid.base64'
  | 'images.childrenImageSharp.fluid.originalImg'
  | 'images.childrenImageSharp.fluid.originalName'
  | 'images.childrenImageSharp.fluid.presentationHeight'
  | 'images.childrenImageSharp.fluid.presentationWidth'
  | 'images.childrenImageSharp.fluid.sizes'
  | 'images.childrenImageSharp.fluid.src'
  | 'images.childrenImageSharp.fluid.srcSet'
  | 'images.childrenImageSharp.fluid.srcSetWebp'
  | 'images.childrenImageSharp.fluid.srcWebp'
  | 'images.childrenImageSharp.fluid.tracedSVG'
  | 'images.childrenImageSharp.gatsbyImageData'
  | 'images.childrenImageSharp.id'
  | 'images.childrenImageSharp.internal.content'
  | 'images.childrenImageSharp.internal.contentDigest'
  | 'images.childrenImageSharp.internal.contentFilePath'
  | 'images.childrenImageSharp.internal.description'
  | 'images.childrenImageSharp.internal.fieldOwners'
  | 'images.childrenImageSharp.internal.ignoreType'
  | 'images.childrenImageSharp.internal.mediaType'
  | 'images.childrenImageSharp.internal.owner'
  | 'images.childrenImageSharp.internal.type'
  | 'images.childrenImageSharp.original.height'
  | 'images.childrenImageSharp.original.src'
  | 'images.childrenImageSharp.original.width'
  | 'images.childrenImageSharp.parent.children'
  | 'images.childrenImageSharp.parent.id'
  | 'images.childrenImageSharp.resize.aspectRatio'
  | 'images.childrenImageSharp.resize.height'
  | 'images.childrenImageSharp.resize.originalName'
  | 'images.childrenImageSharp.resize.src'
  | 'images.childrenImageSharp.resize.tracedSVG'
  | 'images.childrenImageSharp.resize.width'
  | 'images.children.children'
  | 'images.children.children.children'
  | 'images.children.children.id'
  | 'images.children.id'
  | 'images.children.internal.content'
  | 'images.children.internal.contentDigest'
  | 'images.children.internal.contentFilePath'
  | 'images.children.internal.description'
  | 'images.children.internal.fieldOwners'
  | 'images.children.internal.ignoreType'
  | 'images.children.internal.mediaType'
  | 'images.children.internal.owner'
  | 'images.children.internal.type'
  | 'images.children.parent.children'
  | 'images.children.parent.id'
  | 'images.ctime'
  | 'images.ctimeMs'
  | 'images.dev'
  | 'images.dir'
  | 'images.ext'
  | 'images.extension'
  | 'images.gid'
  | 'images.id'
  | 'images.ino'
  | 'images.internal.content'
  | 'images.internal.contentDigest'
  | 'images.internal.contentFilePath'
  | 'images.internal.description'
  | 'images.internal.fieldOwners'
  | 'images.internal.ignoreType'
  | 'images.internal.mediaType'
  | 'images.internal.owner'
  | 'images.internal.type'
  | 'images.mode'
  | 'images.modifiedTime'
  | 'images.mtime'
  | 'images.mtimeMs'
  | 'images.name'
  | 'images.nlink'
  | 'images.parent.children'
  | 'images.parent.children.children'
  | 'images.parent.children.id'
  | 'images.parent.id'
  | 'images.parent.internal.content'
  | 'images.parent.internal.contentDigest'
  | 'images.parent.internal.contentFilePath'
  | 'images.parent.internal.description'
  | 'images.parent.internal.fieldOwners'
  | 'images.parent.internal.ignoreType'
  | 'images.parent.internal.mediaType'
  | 'images.parent.internal.owner'
  | 'images.parent.internal.type'
  | 'images.parent.parent.children'
  | 'images.parent.parent.id'
  | 'images.prettySize'
  | 'images.rdev'
  | 'images.relativeDirectory'
  | 'images.relativePath'
  | 'images.root'
  | 'images.size'
  | 'images.sourceInstanceName'
  | 'images.uid'
  | 'images.url'
  | 'index'
  | 'internal.content'
  | 'internal.contentDigest'
  | 'internal.contentFilePath'
  | 'internal.description'
  | 'internal.fieldOwners'
  | 'internal.ignoreType'
  | 'internal.mediaType'
  | 'internal.owner'
  | 'internal.type'
  | 'level'
  | 'markdown'
  | 'mimeType'
  | 'modifiedTime'
  | 'name'
  | 'page'
  | 'parent.children'
  | 'parent.children.children'
  | 'parent.children.children.children'
  | 'parent.children.children.id'
  | 'parent.children.id'
  | 'parent.children.internal.content'
  | 'parent.children.internal.contentDigest'
  | 'parent.children.internal.contentFilePath'
  | 'parent.children.internal.description'
  | 'parent.children.internal.fieldOwners'
  | 'parent.children.internal.ignoreType'
  | 'parent.children.internal.mediaType'
  | 'parent.children.internal.owner'
  | 'parent.children.internal.type'
  | 'parent.children.parent.children'
  | 'parent.children.parent.id'
  | 'parent.id'
  | 'parent.internal.content'
  | 'parent.internal.contentDigest'
  | 'parent.internal.contentFilePath'
  | 'parent.internal.description'
  | 'parent.internal.fieldOwners'
  | 'parent.internal.ignoreType'
  | 'parent.internal.mediaType'
  | 'parent.internal.owner'
  | 'parent.internal.type'
  | 'parent.parent.children'
  | 'parent.parent.children.children'
  | 'parent.parent.children.id'
  | 'parent.parent.id'
  | 'parent.parent.internal.content'
  | 'parent.parent.internal.contentDigest'
  | 'parent.parent.internal.contentFilePath'
  | 'parent.parent.internal.description'
  | 'parent.parent.internal.fieldOwners'
  | 'parent.parent.internal.ignoreType'
  | 'parent.parent.internal.mediaType'
  | 'parent.parent.internal.owner'
  | 'parent.parent.internal.type'
  | 'parent.parent.parent.children'
  | 'parent.parent.parent.id'
  | 'parents'
  | 'path'
  | 'prep'
  | 'related'
  | 'related.breadcrumb'
  | 'related.breadcrumb.name'
  | 'related.breadcrumb.slug'
  | 'related.childMdx.body'
  | 'related.childMdx.children'
  | 'related.childMdx.children.children'
  | 'related.childMdx.children.id'
  | 'related.childMdx.excerpt'
  | 'related.childMdx.fileAbsolutePath'
  | 'related.childMdx.frontmatter.breadcrumb'
  | 'related.childMdx.frontmatter.cook'
  | 'related.childMdx.frontmatter.createdTime'
  | 'related.childMdx.frontmatter.date'
  | 'related.childMdx.frontmatter.description'
  | 'related.childMdx.frontmatter.exclude'
  | 'related.childMdx.frontmatter.id'
  | 'related.childMdx.frontmatter.index'
  | 'related.childMdx.frontmatter.level'
  | 'related.childMdx.frontmatter.mimeType'
  | 'related.childMdx.frontmatter.modifiedTime'
  | 'related.childMdx.frontmatter.name'
  | 'related.childMdx.frontmatter.page'
  | 'related.childMdx.frontmatter.parents'
  | 'related.childMdx.frontmatter.path'
  | 'related.childMdx.frontmatter.prep'
  | 'related.childMdx.frontmatter.servings'
  | 'related.childMdx.frontmatter.slug'
  | 'related.childMdx.frontmatter.starred'
  | 'related.childMdx.frontmatter.tags'
  | 'related.childMdx.frontmatter.template'
  | 'related.childMdx.frontmatter.title'
  | 'related.childMdx.headings'
  | 'related.childMdx.headings.depth'
  | 'related.childMdx.headings.value'
  | 'related.childMdx.html'
  | 'related.childMdx.id'
  | 'related.childMdx.internal.content'
  | 'related.childMdx.internal.contentDigest'
  | 'related.childMdx.internal.contentFilePath'
  | 'related.childMdx.internal.description'
  | 'related.childMdx.internal.fieldOwners'
  | 'related.childMdx.internal.ignoreType'
  | 'related.childMdx.internal.mediaType'
  | 'related.childMdx.internal.owner'
  | 'related.childMdx.internal.type'
  | 'related.childMdx.mdxAST'
  | 'related.childMdx.parent.children'
  | 'related.childMdx.parent.id'
  | 'related.childMdx.rawBody'
  | 'related.childMdx.slug'
  | 'related.childMdx.tableOfContents'
  | 'related.childMdx.timeToRead'
  | 'related.childMdx.wordCount.paragraphs'
  | 'related.childMdx.wordCount.sentences'
  | 'related.childMdx.wordCount.words'
  | 'related.children'
  | 'related.childrenMdx'
  | 'related.childrenMdx.body'
  | 'related.childrenMdx.children'
  | 'related.childrenMdx.children.children'
  | 'related.childrenMdx.children.id'
  | 'related.childrenMdx.excerpt'
  | 'related.childrenMdx.fileAbsolutePath'
  | 'related.childrenMdx.frontmatter.breadcrumb'
  | 'related.childrenMdx.frontmatter.cook'
  | 'related.childrenMdx.frontmatter.createdTime'
  | 'related.childrenMdx.frontmatter.date'
  | 'related.childrenMdx.frontmatter.description'
  | 'related.childrenMdx.frontmatter.exclude'
  | 'related.childrenMdx.frontmatter.id'
  | 'related.childrenMdx.frontmatter.index'
  | 'related.childrenMdx.frontmatter.level'
  | 'related.childrenMdx.frontmatter.mimeType'
  | 'related.childrenMdx.frontmatter.modifiedTime'
  | 'related.childrenMdx.frontmatter.name'
  | 'related.childrenMdx.frontmatter.page'
  | 'related.childrenMdx.frontmatter.parents'
  | 'related.childrenMdx.frontmatter.path'
  | 'related.childrenMdx.frontmatter.prep'
  | 'related.childrenMdx.frontmatter.servings'
  | 'related.childrenMdx.frontmatter.slug'
  | 'related.childrenMdx.frontmatter.starred'
  | 'related.childrenMdx.frontmatter.tags'
  | 'related.childrenMdx.frontmatter.template'
  | 'related.childrenMdx.frontmatter.title'
  | 'related.childrenMdx.headings'
  | 'related.childrenMdx.headings.depth'
  | 'related.childrenMdx.headings.value'
  | 'related.childrenMdx.html'
  | 'related.childrenMdx.id'
  | 'related.childrenMdx.internal.content'
  | 'related.childrenMdx.internal.contentDigest'
  | 'related.childrenMdx.internal.contentFilePath'
  | 'related.childrenMdx.internal.description'
  | 'related.childrenMdx.internal.fieldOwners'
  | 'related.childrenMdx.internal.ignoreType'
  | 'related.childrenMdx.internal.mediaType'
  | 'related.childrenMdx.internal.owner'
  | 'related.childrenMdx.internal.type'
  | 'related.childrenMdx.mdxAST'
  | 'related.childrenMdx.parent.children'
  | 'related.childrenMdx.parent.id'
  | 'related.childrenMdx.rawBody'
  | 'related.childrenMdx.slug'
  | 'related.childrenMdx.tableOfContents'
  | 'related.childrenMdx.timeToRead'
  | 'related.childrenMdx.wordCount.paragraphs'
  | 'related.childrenMdx.wordCount.sentences'
  | 'related.childrenMdx.wordCount.words'
  | 'related.children.children'
  | 'related.children.children.children'
  | 'related.children.children.id'
  | 'related.children.id'
  | 'related.children.internal.content'
  | 'related.children.internal.contentDigest'
  | 'related.children.internal.contentFilePath'
  | 'related.children.internal.description'
  | 'related.children.internal.fieldOwners'
  | 'related.children.internal.ignoreType'
  | 'related.children.internal.mediaType'
  | 'related.children.internal.owner'
  | 'related.children.internal.type'
  | 'related.children.parent.children'
  | 'related.children.parent.id'
  | 'related.cook'
  | 'related.cover.alt'
  | 'related.cover.image.absolutePath'
  | 'related.cover.image.accessTime'
  | 'related.cover.image.atime'
  | 'related.cover.image.atimeMs'
  | 'related.cover.image.base'
  | 'related.cover.image.birthTime'
  | 'related.cover.image.birthtime'
  | 'related.cover.image.birthtimeMs'
  | 'related.cover.image.blksize'
  | 'related.cover.image.blocks'
  | 'related.cover.image.changeTime'
  | 'related.cover.image.children'
  | 'related.cover.image.childrenImageSharp'
  | 'related.cover.image.ctime'
  | 'related.cover.image.ctimeMs'
  | 'related.cover.image.dev'
  | 'related.cover.image.dir'
  | 'related.cover.image.ext'
  | 'related.cover.image.extension'
  | 'related.cover.image.gid'
  | 'related.cover.image.id'
  | 'related.cover.image.ino'
  | 'related.cover.image.mode'
  | 'related.cover.image.modifiedTime'
  | 'related.cover.image.mtime'
  | 'related.cover.image.mtimeMs'
  | 'related.cover.image.name'
  | 'related.cover.image.nlink'
  | 'related.cover.image.prettySize'
  | 'related.cover.image.rdev'
  | 'related.cover.image.relativeDirectory'
  | 'related.cover.image.relativePath'
  | 'related.cover.image.root'
  | 'related.cover.image.size'
  | 'related.cover.image.sourceInstanceName'
  | 'related.cover.image.uid'
  | 'related.cover.image.url'
  | 'related.cover.title'
  | 'related.createdTime'
  | 'related.date'
  | 'related.description'
  | 'related.dir'
  | 'related.document.body.content'
  | 'related.document.documentId'
  | 'related.document.documentStyle.defaultHeaderId'
  | 'related.document.documentStyle.firstPageFooterId'
  | 'related.document.documentStyle.firstPageHeaderId'
  | 'related.document.documentStyle.pageNumberStart'
  | 'related.document.documentStyle.useCustomHeaderFooterMargins'
  | 'related.document.documentStyle.useFirstPageHeaderFooter'
  | 'related.document.namedStyles.styles'
  | 'related.document.revisionId'
  | 'related.document.suggestionsViewMode'
  | 'related.document.title'
  | 'related.exclude'
  | 'related.id'
  | 'related.images'
  | 'related.images.absolutePath'
  | 'related.images.accessTime'
  | 'related.images.atime'
  | 'related.images.atimeMs'
  | 'related.images.base'
  | 'related.images.birthTime'
  | 'related.images.birthtime'
  | 'related.images.birthtimeMs'
  | 'related.images.blksize'
  | 'related.images.blocks'
  | 'related.images.changeTime'
  | 'related.images.childImageSharp.children'
  | 'related.images.childImageSharp.gatsbyImageData'
  | 'related.images.childImageSharp.id'
  | 'related.images.children'
  | 'related.images.childrenImageSharp'
  | 'related.images.childrenImageSharp.children'
  | 'related.images.childrenImageSharp.gatsbyImageData'
  | 'related.images.childrenImageSharp.id'
  | 'related.images.children.children'
  | 'related.images.children.id'
  | 'related.images.ctime'
  | 'related.images.ctimeMs'
  | 'related.images.dev'
  | 'related.images.dir'
  | 'related.images.ext'
  | 'related.images.extension'
  | 'related.images.gid'
  | 'related.images.id'
  | 'related.images.ino'
  | 'related.images.internal.content'
  | 'related.images.internal.contentDigest'
  | 'related.images.internal.contentFilePath'
  | 'related.images.internal.description'
  | 'related.images.internal.fieldOwners'
  | 'related.images.internal.ignoreType'
  | 'related.images.internal.mediaType'
  | 'related.images.internal.owner'
  | 'related.images.internal.type'
  | 'related.images.mode'
  | 'related.images.modifiedTime'
  | 'related.images.mtime'
  | 'related.images.mtimeMs'
  | 'related.images.name'
  | 'related.images.nlink'
  | 'related.images.parent.children'
  | 'related.images.parent.id'
  | 'related.images.prettySize'
  | 'related.images.rdev'
  | 'related.images.relativeDirectory'
  | 'related.images.relativePath'
  | 'related.images.root'
  | 'related.images.size'
  | 'related.images.sourceInstanceName'
  | 'related.images.uid'
  | 'related.images.url'
  | 'related.index'
  | 'related.internal.content'
  | 'related.internal.contentDigest'
  | 'related.internal.contentFilePath'
  | 'related.internal.description'
  | 'related.internal.fieldOwners'
  | 'related.internal.ignoreType'
  | 'related.internal.mediaType'
  | 'related.internal.owner'
  | 'related.internal.type'
  | 'related.level'
  | 'related.markdown'
  | 'related.mimeType'
  | 'related.modifiedTime'
  | 'related.name'
  | 'related.page'
  | 'related.parent.children'
  | 'related.parent.children.children'
  | 'related.parent.children.id'
  | 'related.parent.id'
  | 'related.parent.internal.content'
  | 'related.parent.internal.contentDigest'
  | 'related.parent.internal.contentFilePath'
  | 'related.parent.internal.description'
  | 'related.parent.internal.fieldOwners'
  | 'related.parent.internal.ignoreType'
  | 'related.parent.internal.mediaType'
  | 'related.parent.internal.owner'
  | 'related.parent.internal.type'
  | 'related.parent.parent.children'
  | 'related.parent.parent.id'
  | 'related.parents'
  | 'related.path'
  | 'related.prep'
  | 'related.related'
  | 'related.related.breadcrumb'
  | 'related.related.breadcrumb.name'
  | 'related.related.breadcrumb.slug'
  | 'related.related.childMdx.body'
  | 'related.related.childMdx.children'
  | 'related.related.childMdx.excerpt'
  | 'related.related.childMdx.fileAbsolutePath'
  | 'related.related.childMdx.headings'
  | 'related.related.childMdx.html'
  | 'related.related.childMdx.id'
  | 'related.related.childMdx.mdxAST'
  | 'related.related.childMdx.rawBody'
  | 'related.related.childMdx.slug'
  | 'related.related.childMdx.tableOfContents'
  | 'related.related.childMdx.timeToRead'
  | 'related.related.children'
  | 'related.related.childrenMdx'
  | 'related.related.childrenMdx.body'
  | 'related.related.childrenMdx.children'
  | 'related.related.childrenMdx.excerpt'
  | 'related.related.childrenMdx.fileAbsolutePath'
  | 'related.related.childrenMdx.headings'
  | 'related.related.childrenMdx.html'
  | 'related.related.childrenMdx.id'
  | 'related.related.childrenMdx.mdxAST'
  | 'related.related.childrenMdx.rawBody'
  | 'related.related.childrenMdx.slug'
  | 'related.related.childrenMdx.tableOfContents'
  | 'related.related.childrenMdx.timeToRead'
  | 'related.related.children.children'
  | 'related.related.children.id'
  | 'related.related.cook'
  | 'related.related.cover.alt'
  | 'related.related.cover.title'
  | 'related.related.createdTime'
  | 'related.related.date'
  | 'related.related.description'
  | 'related.related.dir'
  | 'related.related.document.documentId'
  | 'related.related.document.revisionId'
  | 'related.related.document.suggestionsViewMode'
  | 'related.related.document.title'
  | 'related.related.exclude'
  | 'related.related.id'
  | 'related.related.images'
  | 'related.related.images.absolutePath'
  | 'related.related.images.accessTime'
  | 'related.related.images.atime'
  | 'related.related.images.atimeMs'
  | 'related.related.images.base'
  | 'related.related.images.birthTime'
  | 'related.related.images.birthtime'
  | 'related.related.images.birthtimeMs'
  | 'related.related.images.blksize'
  | 'related.related.images.blocks'
  | 'related.related.images.changeTime'
  | 'related.related.images.children'
  | 'related.related.images.childrenImageSharp'
  | 'related.related.images.ctime'
  | 'related.related.images.ctimeMs'
  | 'related.related.images.dev'
  | 'related.related.images.dir'
  | 'related.related.images.ext'
  | 'related.related.images.extension'
  | 'related.related.images.gid'
  | 'related.related.images.id'
  | 'related.related.images.ino'
  | 'related.related.images.mode'
  | 'related.related.images.modifiedTime'
  | 'related.related.images.mtime'
  | 'related.related.images.mtimeMs'
  | 'related.related.images.name'
  | 'related.related.images.nlink'
  | 'related.related.images.prettySize'
  | 'related.related.images.rdev'
  | 'related.related.images.relativeDirectory'
  | 'related.related.images.relativePath'
  | 'related.related.images.root'
  | 'related.related.images.size'
  | 'related.related.images.sourceInstanceName'
  | 'related.related.images.uid'
  | 'related.related.images.url'
  | 'related.related.index'
  | 'related.related.internal.content'
  | 'related.related.internal.contentDigest'
  | 'related.related.internal.contentFilePath'
  | 'related.related.internal.description'
  | 'related.related.internal.fieldOwners'
  | 'related.related.internal.ignoreType'
  | 'related.related.internal.mediaType'
  | 'related.related.internal.owner'
  | 'related.related.internal.type'
  | 'related.related.level'
  | 'related.related.markdown'
  | 'related.related.mimeType'
  | 'related.related.modifiedTime'
  | 'related.related.name'
  | 'related.related.page'
  | 'related.related.parent.children'
  | 'related.related.parent.id'
  | 'related.related.parents'
  | 'related.related.path'
  | 'related.related.prep'
  | 'related.related.related'
  | 'related.related.related.breadcrumb'
  | 'related.related.related.children'
  | 'related.related.related.childrenMdx'
  | 'related.related.related.cook'
  | 'related.related.related.createdTime'
  | 'related.related.related.date'
  | 'related.related.related.description'
  | 'related.related.related.dir'
  | 'related.related.related.exclude'
  | 'related.related.related.id'
  | 'related.related.related.images'
  | 'related.related.related.index'
  | 'related.related.related.level'
  | 'related.related.related.markdown'
  | 'related.related.related.mimeType'
  | 'related.related.related.modifiedTime'
  | 'related.related.related.name'
  | 'related.related.related.page'
  | 'related.related.related.parents'
  | 'related.related.related.path'
  | 'related.related.related.prep'
  | 'related.related.related.related'
  | 'related.related.related.servings'
  | 'related.related.related.slug'
  | 'related.related.related.starred'
  | 'related.related.related.tags'
  | 'related.related.related.template'
  | 'related.related.servings'
  | 'related.related.slug'
  | 'related.related.starred'
  | 'related.related.tags'
  | 'related.related.template'
  | 'related.servings'
  | 'related.slug'
  | 'related.starred'
  | 'related.tags'
  | 'related.template'
  | 'servings'
  | 'slug'
  | 'starred'
  | 'tags'
  | 'template';

type GoogleDocsFilterInput = {
  readonly breadcrumb: InputMaybe<BreadcrumbItemFilterListInput>;
  readonly childMdx: InputMaybe<MdxFilterInput>;
  readonly children: InputMaybe<NodeFilterListInput>;
  readonly childrenMdx: InputMaybe<MdxFilterListInput>;
  readonly cook: InputMaybe<StringQueryOperatorInput>;
  readonly cover: InputMaybe<CoverFilterInput>;
  readonly createdTime: InputMaybe<DateQueryOperatorInput>;
  readonly date: InputMaybe<DateQueryOperatorInput>;
  readonly description: InputMaybe<StringQueryOperatorInput>;
  readonly dir: InputMaybe<StringQueryOperatorInput>;
  readonly document: InputMaybe<GoogleDocsDocumentFilterInput>;
  readonly exclude: InputMaybe<BooleanQueryOperatorInput>;
  readonly id: InputMaybe<StringQueryOperatorInput>;
  readonly images: InputMaybe<FileFilterListInput>;
  readonly index: InputMaybe<BooleanQueryOperatorInput>;
  readonly internal: InputMaybe<InternalFilterInput>;
  readonly level: InputMaybe<StringQueryOperatorInput>;
  readonly markdown: InputMaybe<StringQueryOperatorInput>;
  readonly mimeType: InputMaybe<StringQueryOperatorInput>;
  readonly modifiedTime: InputMaybe<DateQueryOperatorInput>;
  readonly name: InputMaybe<StringQueryOperatorInput>;
  readonly page: InputMaybe<BooleanQueryOperatorInput>;
  readonly parent: InputMaybe<NodeFilterInput>;
  readonly parents: InputMaybe<StringQueryOperatorInput>;
  readonly path: InputMaybe<StringQueryOperatorInput>;
  readonly prep: InputMaybe<StringQueryOperatorInput>;
  readonly related: InputMaybe<GoogleDocsFilterListInput>;
  readonly servings: InputMaybe<IntQueryOperatorInput>;
  readonly slug: InputMaybe<StringQueryOperatorInput>;
  readonly starred: InputMaybe<BooleanQueryOperatorInput>;
  readonly tags: InputMaybe<StringQueryOperatorInput>;
  readonly template: InputMaybe<StringQueryOperatorInput>;
};

type GoogleDocsFilterListInput = {
  readonly elemMatch: InputMaybe<GoogleDocsFilterInput>;
};

type GoogleDocsGroupConnection = {
  readonly distinct: ReadonlyArray<Scalars['String']>;
  readonly edges: ReadonlyArray<GoogleDocsEdge>;
  readonly field: Scalars['String'];
  readonly fieldValue: Maybe<Scalars['String']>;
  readonly group: ReadonlyArray<GoogleDocsGroupConnection>;
  readonly max: Maybe<Scalars['Float']>;
  readonly min: Maybe<Scalars['Float']>;
  readonly nodes: ReadonlyArray<GoogleDocs>;
  readonly pageInfo: PageInfo;
  readonly sum: Maybe<Scalars['Float']>;
  readonly totalCount: Scalars['Int'];
};


type GoogleDocsGroupConnection_distinctArgs = {
  field: GoogleDocsFieldsEnum;
};


type GoogleDocsGroupConnection_groupArgs = {
  field: GoogleDocsFieldsEnum;
  limit: InputMaybe<Scalars['Int']>;
  skip: InputMaybe<Scalars['Int']>;
};


type GoogleDocsGroupConnection_maxArgs = {
  field: GoogleDocsFieldsEnum;
};


type GoogleDocsGroupConnection_minArgs = {
  field: GoogleDocsFieldsEnum;
};


type GoogleDocsGroupConnection_sumArgs = {
  field: GoogleDocsFieldsEnum;
};

type GoogleDocsSortInput = {
  readonly fields: InputMaybe<ReadonlyArray<InputMaybe<GoogleDocsFieldsEnum>>>;
  readonly order: InputMaybe<ReadonlyArray<InputMaybe<SortOrderEnum>>>;
};

type HeadingsMdx =
  | 'h1'
  | 'h2'
  | 'h3'
  | 'h4'
  | 'h5'
  | 'h6';

type ImageCropFocus =
  | 17
  | 0
  | 2
  | 16
  | 1
  | 5
  | 8
  | 3
  | 6
  | 7
  | 4;

type ImageFit =
  | 'contain'
  | 'cover'
  | 'fill'
  | 'inside'
  | 'outside';

type ImageFormat =
  | ''
  | 'avif'
  | 'jpg'
  | ''
  | 'png'
  | 'webp';

type ImageLayout =
  | 'constrained'
  | 'fixed'
  | 'fullWidth';

type ImagePlaceholder =
  | 'blurred'
  | 'dominantColor'
  | 'none'
  | 'tracedSVG';

type ImageSharp = Node & {
  readonly children: ReadonlyArray<Node>;
  readonly fixed: Maybe<ImageSharpFixed>;
  readonly fluid: Maybe<ImageSharpFluid>;
  readonly gatsbyImageData: Scalars['GatsbyImageData'];
  readonly id: Scalars['ID'];
  readonly internal: Internal;
  readonly original: Maybe<ImageSharpOriginal>;
  readonly parent: Maybe<Node>;
  readonly resize: Maybe<ImageSharpResize>;
};


type ImageSharp_fixedArgs = {
  background?: InputMaybe<Scalars['String']>;
  base64Width: InputMaybe<Scalars['Int']>;
  cropFocus?: InputMaybe<ImageCropFocus>;
  duotone: InputMaybe<DuotoneGradient>;
  fit?: InputMaybe<ImageFit>;
  grayscale?: InputMaybe<Scalars['Boolean']>;
  height: InputMaybe<Scalars['Int']>;
  jpegProgressive?: InputMaybe<Scalars['Boolean']>;
  jpegQuality: InputMaybe<Scalars['Int']>;
  pngCompressionSpeed?: InputMaybe<Scalars['Int']>;
  pngQuality: InputMaybe<Scalars['Int']>;
  quality: InputMaybe<Scalars['Int']>;
  rotate?: InputMaybe<Scalars['Int']>;
  toFormat?: InputMaybe<ImageFormat>;
  toFormatBase64?: InputMaybe<ImageFormat>;
  traceSVG: InputMaybe<Potrace>;
  trim?: InputMaybe<Scalars['Float']>;
  webpQuality: InputMaybe<Scalars['Int']>;
  width: InputMaybe<Scalars['Int']>;
};


type ImageSharp_fluidArgs = {
  background?: InputMaybe<Scalars['String']>;
  base64Width: InputMaybe<Scalars['Int']>;
  cropFocus?: InputMaybe<ImageCropFocus>;
  duotone: InputMaybe<DuotoneGradient>;
  fit?: InputMaybe<ImageFit>;
  grayscale?: InputMaybe<Scalars['Boolean']>;
  jpegProgressive?: InputMaybe<Scalars['Boolean']>;
  jpegQuality: InputMaybe<Scalars['Int']>;
  maxHeight: InputMaybe<Scalars['Int']>;
  maxWidth: InputMaybe<Scalars['Int']>;
  pngCompressionSpeed?: InputMaybe<Scalars['Int']>;
  pngQuality: InputMaybe<Scalars['Int']>;
  quality: InputMaybe<Scalars['Int']>;
  rotate?: InputMaybe<Scalars['Int']>;
  sizes?: InputMaybe<Scalars['String']>;
  srcSetBreakpoints?: InputMaybe<ReadonlyArray<InputMaybe<Scalars['Int']>>>;
  toFormat?: InputMaybe<ImageFormat>;
  toFormatBase64?: InputMaybe<ImageFormat>;
  traceSVG: InputMaybe<Potrace>;
  trim?: InputMaybe<Scalars['Float']>;
  webpQuality: InputMaybe<Scalars['Int']>;
};


type ImageSharp_gatsbyImageDataArgs = {
  aspectRatio: InputMaybe<Scalars['Float']>;
  avifOptions: InputMaybe<AVIFOptions>;
  backgroundColor: InputMaybe<Scalars['String']>;
  blurredOptions: InputMaybe<BlurredOptions>;
  breakpoints: InputMaybe<ReadonlyArray<InputMaybe<Scalars['Int']>>>;
  formats: InputMaybe<ReadonlyArray<InputMaybe<ImageFormat>>>;
  height: InputMaybe<Scalars['Int']>;
  jpgOptions: InputMaybe<JPGOptions>;
  layout?: InputMaybe<ImageLayout>;
  outputPixelDensities: InputMaybe<ReadonlyArray<InputMaybe<Scalars['Float']>>>;
  placeholder: InputMaybe<ImagePlaceholder>;
  pngOptions: InputMaybe<PNGOptions>;
  quality: InputMaybe<Scalars['Int']>;
  sizes: InputMaybe<Scalars['String']>;
  tracedSVGOptions: InputMaybe<Potrace>;
  transformOptions: InputMaybe<TransformOptions>;
  webpOptions: InputMaybe<WebPOptions>;
  width: InputMaybe<Scalars['Int']>;
};


type ImageSharp_resizeArgs = {
  background?: InputMaybe<Scalars['String']>;
  base64?: InputMaybe<Scalars['Boolean']>;
  cropFocus?: InputMaybe<ImageCropFocus>;
  duotone: InputMaybe<DuotoneGradient>;
  fit?: InputMaybe<ImageFit>;
  grayscale?: InputMaybe<Scalars['Boolean']>;
  height: InputMaybe<Scalars['Int']>;
  jpegProgressive?: InputMaybe<Scalars['Boolean']>;
  jpegQuality: InputMaybe<Scalars['Int']>;
  pngCompressionLevel?: InputMaybe<Scalars['Int']>;
  pngCompressionSpeed?: InputMaybe<Scalars['Int']>;
  pngQuality: InputMaybe<Scalars['Int']>;
  quality: InputMaybe<Scalars['Int']>;
  rotate?: InputMaybe<Scalars['Int']>;
  toFormat?: InputMaybe<ImageFormat>;
  traceSVG: InputMaybe<Potrace>;
  trim?: InputMaybe<Scalars['Float']>;
  webpQuality: InputMaybe<Scalars['Int']>;
  width: InputMaybe<Scalars['Int']>;
};

type ImageSharpConnection = {
  readonly distinct: ReadonlyArray<Scalars['String']>;
  readonly edges: ReadonlyArray<ImageSharpEdge>;
  readonly group: ReadonlyArray<ImageSharpGroupConnection>;
  readonly max: Maybe<Scalars['Float']>;
  readonly min: Maybe<Scalars['Float']>;
  readonly nodes: ReadonlyArray<ImageSharp>;
  readonly pageInfo: PageInfo;
  readonly sum: Maybe<Scalars['Float']>;
  readonly totalCount: Scalars['Int'];
};


type ImageSharpConnection_distinctArgs = {
  field: ImageSharpFieldsEnum;
};


type ImageSharpConnection_groupArgs = {
  field: ImageSharpFieldsEnum;
  limit: InputMaybe<Scalars['Int']>;
  skip: InputMaybe<Scalars['Int']>;
};


type ImageSharpConnection_maxArgs = {
  field: ImageSharpFieldsEnum;
};


type ImageSharpConnection_minArgs = {
  field: ImageSharpFieldsEnum;
};


type ImageSharpConnection_sumArgs = {
  field: ImageSharpFieldsEnum;
};

type ImageSharpEdge = {
  readonly next: Maybe<ImageSharp>;
  readonly node: ImageSharp;
  readonly previous: Maybe<ImageSharp>;
};

type ImageSharpFieldsEnum =
  | 'children'
  | 'children.children'
  | 'children.children.children'
  | 'children.children.children.children'
  | 'children.children.children.id'
  | 'children.children.id'
  | 'children.children.internal.content'
  | 'children.children.internal.contentDigest'
  | 'children.children.internal.contentFilePath'
  | 'children.children.internal.description'
  | 'children.children.internal.fieldOwners'
  | 'children.children.internal.ignoreType'
  | 'children.children.internal.mediaType'
  | 'children.children.internal.owner'
  | 'children.children.internal.type'
  | 'children.children.parent.children'
  | 'children.children.parent.id'
  | 'children.id'
  | 'children.internal.content'
  | 'children.internal.contentDigest'
  | 'children.internal.contentFilePath'
  | 'children.internal.description'
  | 'children.internal.fieldOwners'
  | 'children.internal.ignoreType'
  | 'children.internal.mediaType'
  | 'children.internal.owner'
  | 'children.internal.type'
  | 'children.parent.children'
  | 'children.parent.children.children'
  | 'children.parent.children.id'
  | 'children.parent.id'
  | 'children.parent.internal.content'
  | 'children.parent.internal.contentDigest'
  | 'children.parent.internal.contentFilePath'
  | 'children.parent.internal.description'
  | 'children.parent.internal.fieldOwners'
  | 'children.parent.internal.ignoreType'
  | 'children.parent.internal.mediaType'
  | 'children.parent.internal.owner'
  | 'children.parent.internal.type'
  | 'children.parent.parent.children'
  | 'children.parent.parent.id'
  | 'fixed.aspectRatio'
  | 'fixed.base64'
  | 'fixed.height'
  | 'fixed.originalName'
  | 'fixed.src'
  | 'fixed.srcSet'
  | 'fixed.srcSetWebp'
  | 'fixed.srcWebp'
  | 'fixed.tracedSVG'
  | 'fixed.width'
  | 'fluid.aspectRatio'
  | 'fluid.base64'
  | 'fluid.originalImg'
  | 'fluid.originalName'
  | 'fluid.presentationHeight'
  | 'fluid.presentationWidth'
  | 'fluid.sizes'
  | 'fluid.src'
  | 'fluid.srcSet'
  | 'fluid.srcSetWebp'
  | 'fluid.srcWebp'
  | 'fluid.tracedSVG'
  | 'gatsbyImageData'
  | 'id'
  | 'internal.content'
  | 'internal.contentDigest'
  | 'internal.contentFilePath'
  | 'internal.description'
  | 'internal.fieldOwners'
  | 'internal.ignoreType'
  | 'internal.mediaType'
  | 'internal.owner'
  | 'internal.type'
  | 'original.height'
  | 'original.src'
  | 'original.width'
  | 'parent.children'
  | 'parent.children.children'
  | 'parent.children.children.children'
  | 'parent.children.children.id'
  | 'parent.children.id'
  | 'parent.children.internal.content'
  | 'parent.children.internal.contentDigest'
  | 'parent.children.internal.contentFilePath'
  | 'parent.children.internal.description'
  | 'parent.children.internal.fieldOwners'
  | 'parent.children.internal.ignoreType'
  | 'parent.children.internal.mediaType'
  | 'parent.children.internal.owner'
  | 'parent.children.internal.type'
  | 'parent.children.parent.children'
  | 'parent.children.parent.id'
  | 'parent.id'
  | 'parent.internal.content'
  | 'parent.internal.contentDigest'
  | 'parent.internal.contentFilePath'
  | 'parent.internal.description'
  | 'parent.internal.fieldOwners'
  | 'parent.internal.ignoreType'
  | 'parent.internal.mediaType'
  | 'parent.internal.owner'
  | 'parent.internal.type'
  | 'parent.parent.children'
  | 'parent.parent.children.children'
  | 'parent.parent.children.id'
  | 'parent.parent.id'
  | 'parent.parent.internal.content'
  | 'parent.parent.internal.contentDigest'
  | 'parent.parent.internal.contentFilePath'
  | 'parent.parent.internal.description'
  | 'parent.parent.internal.fieldOwners'
  | 'parent.parent.internal.ignoreType'
  | 'parent.parent.internal.mediaType'
  | 'parent.parent.internal.owner'
  | 'parent.parent.internal.type'
  | 'parent.parent.parent.children'
  | 'parent.parent.parent.id'
  | 'resize.aspectRatio'
  | 'resize.height'
  | 'resize.originalName'
  | 'resize.src'
  | 'resize.tracedSVG'
  | 'resize.width';

type ImageSharpFilterInput = {
  readonly children: InputMaybe<NodeFilterListInput>;
  readonly fixed: InputMaybe<ImageSharpFixedFilterInput>;
  readonly fluid: InputMaybe<ImageSharpFluidFilterInput>;
  readonly gatsbyImageData: InputMaybe<GatsbyImageDataQueryOperatorInput>;
  readonly id: InputMaybe<StringQueryOperatorInput>;
  readonly internal: InputMaybe<InternalFilterInput>;
  readonly original: InputMaybe<ImageSharpOriginalFilterInput>;
  readonly parent: InputMaybe<NodeFilterInput>;
  readonly resize: InputMaybe<ImageSharpResizeFilterInput>;
};

type ImageSharpFilterListInput = {
  readonly elemMatch: InputMaybe<ImageSharpFilterInput>;
};

type ImageSharpFixed = {
  readonly aspectRatio: Maybe<Scalars['Float']>;
  readonly base64: Maybe<Scalars['String']>;
  readonly height: Scalars['Float'];
  readonly originalName: Maybe<Scalars['String']>;
  readonly src: Scalars['String'];
  readonly srcSet: Scalars['String'];
  readonly srcSetWebp: Maybe<Scalars['String']>;
  readonly srcWebp: Maybe<Scalars['String']>;
  readonly tracedSVG: Maybe<Scalars['String']>;
  readonly width: Scalars['Float'];
};

type ImageSharpFixedFilterInput = {
  readonly aspectRatio: InputMaybe<FloatQueryOperatorInput>;
  readonly base64: InputMaybe<StringQueryOperatorInput>;
  readonly height: InputMaybe<FloatQueryOperatorInput>;
  readonly originalName: InputMaybe<StringQueryOperatorInput>;
  readonly src: InputMaybe<StringQueryOperatorInput>;
  readonly srcSet: InputMaybe<StringQueryOperatorInput>;
  readonly srcSetWebp: InputMaybe<StringQueryOperatorInput>;
  readonly srcWebp: InputMaybe<StringQueryOperatorInput>;
  readonly tracedSVG: InputMaybe<StringQueryOperatorInput>;
  readonly width: InputMaybe<FloatQueryOperatorInput>;
};

type ImageSharpFluid = {
  readonly aspectRatio: Scalars['Float'];
  readonly base64: Maybe<Scalars['String']>;
  readonly originalImg: Maybe<Scalars['String']>;
  readonly originalName: Maybe<Scalars['String']>;
  readonly presentationHeight: Scalars['Int'];
  readonly presentationWidth: Scalars['Int'];
  readonly sizes: Scalars['String'];
  readonly src: Scalars['String'];
  readonly srcSet: Scalars['String'];
  readonly srcSetWebp: Maybe<Scalars['String']>;
  readonly srcWebp: Maybe<Scalars['String']>;
  readonly tracedSVG: Maybe<Scalars['String']>;
};

type ImageSharpFluidFilterInput = {
  readonly aspectRatio: InputMaybe<FloatQueryOperatorInput>;
  readonly base64: InputMaybe<StringQueryOperatorInput>;
  readonly originalImg: InputMaybe<StringQueryOperatorInput>;
  readonly originalName: InputMaybe<StringQueryOperatorInput>;
  readonly presentationHeight: InputMaybe<IntQueryOperatorInput>;
  readonly presentationWidth: InputMaybe<IntQueryOperatorInput>;
  readonly sizes: InputMaybe<StringQueryOperatorInput>;
  readonly src: InputMaybe<StringQueryOperatorInput>;
  readonly srcSet: InputMaybe<StringQueryOperatorInput>;
  readonly srcSetWebp: InputMaybe<StringQueryOperatorInput>;
  readonly srcWebp: InputMaybe<StringQueryOperatorInput>;
  readonly tracedSVG: InputMaybe<StringQueryOperatorInput>;
};

type ImageSharpGroupConnection = {
  readonly distinct: ReadonlyArray<Scalars['String']>;
  readonly edges: ReadonlyArray<ImageSharpEdge>;
  readonly field: Scalars['String'];
  readonly fieldValue: Maybe<Scalars['String']>;
  readonly group: ReadonlyArray<ImageSharpGroupConnection>;
  readonly max: Maybe<Scalars['Float']>;
  readonly min: Maybe<Scalars['Float']>;
  readonly nodes: ReadonlyArray<ImageSharp>;
  readonly pageInfo: PageInfo;
  readonly sum: Maybe<Scalars['Float']>;
  readonly totalCount: Scalars['Int'];
};


type ImageSharpGroupConnection_distinctArgs = {
  field: ImageSharpFieldsEnum;
};


type ImageSharpGroupConnection_groupArgs = {
  field: ImageSharpFieldsEnum;
  limit: InputMaybe<Scalars['Int']>;
  skip: InputMaybe<Scalars['Int']>;
};


type ImageSharpGroupConnection_maxArgs = {
  field: ImageSharpFieldsEnum;
};


type ImageSharpGroupConnection_minArgs = {
  field: ImageSharpFieldsEnum;
};


type ImageSharpGroupConnection_sumArgs = {
  field: ImageSharpFieldsEnum;
};

type ImageSharpOriginal = {
  readonly height: Maybe<Scalars['Float']>;
  readonly src: Maybe<Scalars['String']>;
  readonly width: Maybe<Scalars['Float']>;
};

type ImageSharpOriginalFilterInput = {
  readonly height: InputMaybe<FloatQueryOperatorInput>;
  readonly src: InputMaybe<StringQueryOperatorInput>;
  readonly width: InputMaybe<FloatQueryOperatorInput>;
};

type ImageSharpResize = {
  readonly aspectRatio: Maybe<Scalars['Float']>;
  readonly height: Maybe<Scalars['Int']>;
  readonly originalName: Maybe<Scalars['String']>;
  readonly src: Maybe<Scalars['String']>;
  readonly tracedSVG: Maybe<Scalars['String']>;
  readonly width: Maybe<Scalars['Int']>;
};

type ImageSharpResizeFilterInput = {
  readonly aspectRatio: InputMaybe<FloatQueryOperatorInput>;
  readonly height: InputMaybe<IntQueryOperatorInput>;
  readonly originalName: InputMaybe<StringQueryOperatorInput>;
  readonly src: InputMaybe<StringQueryOperatorInput>;
  readonly tracedSVG: InputMaybe<StringQueryOperatorInput>;
  readonly width: InputMaybe<IntQueryOperatorInput>;
};

type ImageSharpSortInput = {
  readonly fields: InputMaybe<ReadonlyArray<InputMaybe<ImageSharpFieldsEnum>>>;
  readonly order: InputMaybe<ReadonlyArray<InputMaybe<SortOrderEnum>>>;
};

type IntQueryOperatorInput = {
  readonly eq: InputMaybe<Scalars['Int']>;
  readonly gt: InputMaybe<Scalars['Int']>;
  readonly gte: InputMaybe<Scalars['Int']>;
  readonly in: InputMaybe<ReadonlyArray<InputMaybe<Scalars['Int']>>>;
  readonly lt: InputMaybe<Scalars['Int']>;
  readonly lte: InputMaybe<Scalars['Int']>;
  readonly ne: InputMaybe<Scalars['Int']>;
  readonly nin: InputMaybe<ReadonlyArray<InputMaybe<Scalars['Int']>>>;
};

type Internal = {
  readonly content: Maybe<Scalars['String']>;
  readonly contentDigest: Scalars['String'];
  readonly contentFilePath: Maybe<Scalars['String']>;
  readonly description: Maybe<Scalars['String']>;
  readonly fieldOwners: Maybe<ReadonlyArray<Maybe<Scalars['String']>>>;
  readonly ignoreType: Maybe<Scalars['Boolean']>;
  readonly mediaType: Maybe<Scalars['String']>;
  readonly owner: Scalars['String'];
  readonly type: Scalars['String'];
};

type InternalFilterInput = {
  readonly content: InputMaybe<StringQueryOperatorInput>;
  readonly contentDigest: InputMaybe<StringQueryOperatorInput>;
  readonly contentFilePath: InputMaybe<StringQueryOperatorInput>;
  readonly description: InputMaybe<StringQueryOperatorInput>;
  readonly fieldOwners: InputMaybe<StringQueryOperatorInput>;
  readonly ignoreType: InputMaybe<BooleanQueryOperatorInput>;
  readonly mediaType: InputMaybe<StringQueryOperatorInput>;
  readonly owner: InputMaybe<StringQueryOperatorInput>;
  readonly type: InputMaybe<StringQueryOperatorInput>;
};

type JPGOptions = {
  readonly progressive: InputMaybe<Scalars['Boolean']>;
  readonly quality: InputMaybe<Scalars['Int']>;
};

type JSONQueryOperatorInput = {
  readonly eq: InputMaybe<Scalars['JSON']>;
  readonly glob: InputMaybe<Scalars['JSON']>;
  readonly in: InputMaybe<ReadonlyArray<InputMaybe<Scalars['JSON']>>>;
  readonly ne: InputMaybe<Scalars['JSON']>;
  readonly nin: InputMaybe<ReadonlyArray<InputMaybe<Scalars['JSON']>>>;
  readonly regex: InputMaybe<Scalars['JSON']>;
};

type Mdx = Node & {
  readonly body: Scalars['String'];
  readonly children: ReadonlyArray<Node>;
  readonly excerpt: Scalars['String'];
  readonly fileAbsolutePath: Scalars['String'];
  readonly frontmatter: Maybe<MdxFrontmatter>;
  readonly headings: Maybe<ReadonlyArray<Maybe<MdxHeadingMdx>>>;
  readonly html: Maybe<Scalars['String']>;
  readonly id: Scalars['ID'];
  readonly internal: Internal;
  readonly mdxAST: Maybe<Scalars['JSON']>;
  readonly parent: Maybe<Node>;
  readonly rawBody: Scalars['String'];
  readonly slug: Maybe<Scalars['String']>;
  readonly tableOfContents: Maybe<Scalars['JSON']>;
  readonly timeToRead: Maybe<Scalars['Int']>;
  readonly wordCount: Maybe<MdxWordCount>;
};


type Mdx_excerptArgs = {
  pruneLength?: InputMaybe<Scalars['Int']>;
  truncate?: InputMaybe<Scalars['Boolean']>;
};


type Mdx_headingsArgs = {
  depth: InputMaybe<HeadingsMdx>;
};


type Mdx_tableOfContentsArgs = {
  maxDepth: InputMaybe<Scalars['Int']>;
};

type MdxConnection = {
  readonly distinct: ReadonlyArray<Scalars['String']>;
  readonly edges: ReadonlyArray<MdxEdge>;
  readonly group: ReadonlyArray<MdxGroupConnection>;
  readonly max: Maybe<Scalars['Float']>;
  readonly min: Maybe<Scalars['Float']>;
  readonly nodes: ReadonlyArray<Mdx>;
  readonly pageInfo: PageInfo;
  readonly sum: Maybe<Scalars['Float']>;
  readonly totalCount: Scalars['Int'];
};


type MdxConnection_distinctArgs = {
  field: MdxFieldsEnum;
};


type MdxConnection_groupArgs = {
  field: MdxFieldsEnum;
  limit: InputMaybe<Scalars['Int']>;
  skip: InputMaybe<Scalars['Int']>;
};


type MdxConnection_maxArgs = {
  field: MdxFieldsEnum;
};


type MdxConnection_minArgs = {
  field: MdxFieldsEnum;
};


type MdxConnection_sumArgs = {
  field: MdxFieldsEnum;
};

type MdxEdge = {
  readonly next: Maybe<Mdx>;
  readonly node: Mdx;
  readonly previous: Maybe<Mdx>;
};

type MdxFieldsEnum =
  | 'body'
  | 'children'
  | 'children.children'
  | 'children.children.children'
  | 'children.children.children.children'
  | 'children.children.children.id'
  | 'children.children.id'
  | 'children.children.internal.content'
  | 'children.children.internal.contentDigest'
  | 'children.children.internal.contentFilePath'
  | 'children.children.internal.description'
  | 'children.children.internal.fieldOwners'
  | 'children.children.internal.ignoreType'
  | 'children.children.internal.mediaType'
  | 'children.children.internal.owner'
  | 'children.children.internal.type'
  | 'children.children.parent.children'
  | 'children.children.parent.id'
  | 'children.id'
  | 'children.internal.content'
  | 'children.internal.contentDigest'
  | 'children.internal.contentFilePath'
  | 'children.internal.description'
  | 'children.internal.fieldOwners'
  | 'children.internal.ignoreType'
  | 'children.internal.mediaType'
  | 'children.internal.owner'
  | 'children.internal.type'
  | 'children.parent.children'
  | 'children.parent.children.children'
  | 'children.parent.children.id'
  | 'children.parent.id'
  | 'children.parent.internal.content'
  | 'children.parent.internal.contentDigest'
  | 'children.parent.internal.contentFilePath'
  | 'children.parent.internal.description'
  | 'children.parent.internal.fieldOwners'
  | 'children.parent.internal.ignoreType'
  | 'children.parent.internal.mediaType'
  | 'children.parent.internal.owner'
  | 'children.parent.internal.type'
  | 'children.parent.parent.children'
  | 'children.parent.parent.id'
  | 'excerpt'
  | 'fileAbsolutePath'
  | 'frontmatter.breadcrumb'
  | 'frontmatter.breadcrumb.name'
  | 'frontmatter.breadcrumb.slug'
  | 'frontmatter.cook'
  | 'frontmatter.cover.alt'
  | 'frontmatter.cover.image'
  | 'frontmatter.cover.title'
  | 'frontmatter.createdTime'
  | 'frontmatter.date'
  | 'frontmatter.description'
  | 'frontmatter.exclude'
  | 'frontmatter.id'
  | 'frontmatter.index'
  | 'frontmatter.level'
  | 'frontmatter.mimeType'
  | 'frontmatter.modifiedTime'
  | 'frontmatter.name'
  | 'frontmatter.page'
  | 'frontmatter.parents'
  | 'frontmatter.path'
  | 'frontmatter.prep'
  | 'frontmatter.servings'
  | 'frontmatter.slug'
  | 'frontmatter.starred'
  | 'frontmatter.tags'
  | 'frontmatter.template'
  | 'frontmatter.title'
  | 'headings'
  | 'headings.depth'
  | 'headings.value'
  | 'html'
  | 'id'
  | 'internal.content'
  | 'internal.contentDigest'
  | 'internal.contentFilePath'
  | 'internal.description'
  | 'internal.fieldOwners'
  | 'internal.ignoreType'
  | 'internal.mediaType'
  | 'internal.owner'
  | 'internal.type'
  | 'mdxAST'
  | 'parent.children'
  | 'parent.children.children'
  | 'parent.children.children.children'
  | 'parent.children.children.id'
  | 'parent.children.id'
  | 'parent.children.internal.content'
  | 'parent.children.internal.contentDigest'
  | 'parent.children.internal.contentFilePath'
  | 'parent.children.internal.description'
  | 'parent.children.internal.fieldOwners'
  | 'parent.children.internal.ignoreType'
  | 'parent.children.internal.mediaType'
  | 'parent.children.internal.owner'
  | 'parent.children.internal.type'
  | 'parent.children.parent.children'
  | 'parent.children.parent.id'
  | 'parent.id'
  | 'parent.internal.content'
  | 'parent.internal.contentDigest'
  | 'parent.internal.contentFilePath'
  | 'parent.internal.description'
  | 'parent.internal.fieldOwners'
  | 'parent.internal.ignoreType'
  | 'parent.internal.mediaType'
  | 'parent.internal.owner'
  | 'parent.internal.type'
  | 'parent.parent.children'
  | 'parent.parent.children.children'
  | 'parent.parent.children.id'
  | 'parent.parent.id'
  | 'parent.parent.internal.content'
  | 'parent.parent.internal.contentDigest'
  | 'parent.parent.internal.contentFilePath'
  | 'parent.parent.internal.description'
  | 'parent.parent.internal.fieldOwners'
  | 'parent.parent.internal.ignoreType'
  | 'parent.parent.internal.mediaType'
  | 'parent.parent.internal.owner'
  | 'parent.parent.internal.type'
  | 'parent.parent.parent.children'
  | 'parent.parent.parent.id'
  | 'rawBody'
  | 'slug'
  | 'tableOfContents'
  | 'timeToRead'
  | 'wordCount.paragraphs'
  | 'wordCount.sentences'
  | 'wordCount.words';

type MdxFilterInput = {
  readonly body: InputMaybe<StringQueryOperatorInput>;
  readonly children: InputMaybe<NodeFilterListInput>;
  readonly excerpt: InputMaybe<StringQueryOperatorInput>;
  readonly fileAbsolutePath: InputMaybe<StringQueryOperatorInput>;
  readonly frontmatter: InputMaybe<MdxFrontmatterFilterInput>;
  readonly headings: InputMaybe<MdxHeadingMdxFilterListInput>;
  readonly html: InputMaybe<StringQueryOperatorInput>;
  readonly id: InputMaybe<StringQueryOperatorInput>;
  readonly internal: InputMaybe<InternalFilterInput>;
  readonly mdxAST: InputMaybe<JSONQueryOperatorInput>;
  readonly parent: InputMaybe<NodeFilterInput>;
  readonly rawBody: InputMaybe<StringQueryOperatorInput>;
  readonly slug: InputMaybe<StringQueryOperatorInput>;
  readonly tableOfContents: InputMaybe<JSONQueryOperatorInput>;
  readonly timeToRead: InputMaybe<IntQueryOperatorInput>;
  readonly wordCount: InputMaybe<MdxWordCountFilterInput>;
};

type MdxFilterListInput = {
  readonly elemMatch: InputMaybe<MdxFilterInput>;
};

type MdxFrontmatter = {
  readonly breadcrumb: Maybe<ReadonlyArray<Maybe<MdxFrontmatterBreadcrumb>>>;
  readonly cook: Maybe<Scalars['String']>;
  readonly cover: Maybe<MdxFrontmatterCover>;
  readonly createdTime: Maybe<Scalars['Date']>;
  readonly date: Maybe<Scalars['Date']>;
  readonly description: Maybe<Scalars['String']>;
  readonly exclude: Maybe<Scalars['Boolean']>;
  readonly id: Maybe<Scalars['String']>;
  readonly index: Maybe<Scalars['Boolean']>;
  readonly level: Maybe<Scalars['String']>;
  readonly mimeType: Maybe<Scalars['String']>;
  readonly modifiedTime: Maybe<Scalars['Date']>;
  readonly name: Maybe<Scalars['String']>;
  readonly page: Maybe<Scalars['Boolean']>;
  readonly parents: Maybe<ReadonlyArray<Maybe<Scalars['String']>>>;
  readonly path: Maybe<Scalars['String']>;
  readonly prep: Maybe<Scalars['String']>;
  readonly servings: Maybe<Scalars['Int']>;
  readonly slug: Maybe<Scalars['String']>;
  readonly starred: Maybe<Scalars['Boolean']>;
  readonly tags: Maybe<ReadonlyArray<Maybe<Scalars['String']>>>;
  readonly template: Maybe<Scalars['String']>;
  readonly title: Scalars['String'];
};


type MdxFrontmatter_createdTimeArgs = {
  difference: InputMaybe<Scalars['String']>;
  formatString: InputMaybe<Scalars['String']>;
  fromNow: InputMaybe<Scalars['Boolean']>;
  locale: InputMaybe<Scalars['String']>;
};


type MdxFrontmatter_dateArgs = {
  difference: InputMaybe<Scalars['String']>;
  formatString: InputMaybe<Scalars['String']>;
  fromNow: InputMaybe<Scalars['Boolean']>;
  locale: InputMaybe<Scalars['String']>;
};


type MdxFrontmatter_modifiedTimeArgs = {
  difference: InputMaybe<Scalars['String']>;
  formatString: InputMaybe<Scalars['String']>;
  fromNow: InputMaybe<Scalars['Boolean']>;
  locale: InputMaybe<Scalars['String']>;
};

type MdxFrontmatterBreadcrumb = {
  readonly name: Maybe<Scalars['String']>;
  readonly slug: Maybe<Scalars['String']>;
};

type MdxFrontmatterBreadcrumbFilterInput = {
  readonly name: InputMaybe<StringQueryOperatorInput>;
  readonly slug: InputMaybe<StringQueryOperatorInput>;
};

type MdxFrontmatterBreadcrumbFilterListInput = {
  readonly elemMatch: InputMaybe<MdxFrontmatterBreadcrumbFilterInput>;
};

type MdxFrontmatterCover = {
  readonly alt: Maybe<Scalars['String']>;
  readonly image: Maybe<Scalars['String']>;
  readonly title: Maybe<Scalars['String']>;
};

type MdxFrontmatterCoverFilterInput = {
  readonly alt: InputMaybe<StringQueryOperatorInput>;
  readonly image: InputMaybe<StringQueryOperatorInput>;
  readonly title: InputMaybe<StringQueryOperatorInput>;
};

type MdxFrontmatterFilterInput = {
  readonly breadcrumb: InputMaybe<MdxFrontmatterBreadcrumbFilterListInput>;
  readonly cook: InputMaybe<StringQueryOperatorInput>;
  readonly cover: InputMaybe<MdxFrontmatterCoverFilterInput>;
  readonly createdTime: InputMaybe<DateQueryOperatorInput>;
  readonly date: InputMaybe<DateQueryOperatorInput>;
  readonly description: InputMaybe<StringQueryOperatorInput>;
  readonly exclude: InputMaybe<BooleanQueryOperatorInput>;
  readonly id: InputMaybe<StringQueryOperatorInput>;
  readonly index: InputMaybe<BooleanQueryOperatorInput>;
  readonly level: InputMaybe<StringQueryOperatorInput>;
  readonly mimeType: InputMaybe<StringQueryOperatorInput>;
  readonly modifiedTime: InputMaybe<DateQueryOperatorInput>;
  readonly name: InputMaybe<StringQueryOperatorInput>;
  readonly page: InputMaybe<BooleanQueryOperatorInput>;
  readonly parents: InputMaybe<StringQueryOperatorInput>;
  readonly path: InputMaybe<StringQueryOperatorInput>;
  readonly prep: InputMaybe<StringQueryOperatorInput>;
  readonly servings: InputMaybe<IntQueryOperatorInput>;
  readonly slug: InputMaybe<StringQueryOperatorInput>;
  readonly starred: InputMaybe<BooleanQueryOperatorInput>;
  readonly tags: InputMaybe<StringQueryOperatorInput>;
  readonly template: InputMaybe<StringQueryOperatorInput>;
  readonly title: InputMaybe<StringQueryOperatorInput>;
};

type MdxGroupConnection = {
  readonly distinct: ReadonlyArray<Scalars['String']>;
  readonly edges: ReadonlyArray<MdxEdge>;
  readonly field: Scalars['String'];
  readonly fieldValue: Maybe<Scalars['String']>;
  readonly group: ReadonlyArray<MdxGroupConnection>;
  readonly max: Maybe<Scalars['Float']>;
  readonly min: Maybe<Scalars['Float']>;
  readonly nodes: ReadonlyArray<Mdx>;
  readonly pageInfo: PageInfo;
  readonly sum: Maybe<Scalars['Float']>;
  readonly totalCount: Scalars['Int'];
};


type MdxGroupConnection_distinctArgs = {
  field: MdxFieldsEnum;
};


type MdxGroupConnection_groupArgs = {
  field: MdxFieldsEnum;
  limit: InputMaybe<Scalars['Int']>;
  skip: InputMaybe<Scalars['Int']>;
};


type MdxGroupConnection_maxArgs = {
  field: MdxFieldsEnum;
};


type MdxGroupConnection_minArgs = {
  field: MdxFieldsEnum;
};


type MdxGroupConnection_sumArgs = {
  field: MdxFieldsEnum;
};

type MdxHeadingMdx = {
  readonly depth: Maybe<Scalars['Int']>;
  readonly value: Maybe<Scalars['String']>;
};

type MdxHeadingMdxFilterInput = {
  readonly depth: InputMaybe<IntQueryOperatorInput>;
  readonly value: InputMaybe<StringQueryOperatorInput>;
};

type MdxHeadingMdxFilterListInput = {
  readonly elemMatch: InputMaybe<MdxHeadingMdxFilterInput>;
};

type MdxSortInput = {
  readonly fields: InputMaybe<ReadonlyArray<InputMaybe<MdxFieldsEnum>>>;
  readonly order: InputMaybe<ReadonlyArray<InputMaybe<SortOrderEnum>>>;
};

type MdxWordCount = {
  readonly paragraphs: Maybe<Scalars['Int']>;
  readonly sentences: Maybe<Scalars['Int']>;
  readonly words: Maybe<Scalars['Int']>;
};

type MdxWordCountFilterInput = {
  readonly paragraphs: InputMaybe<IntQueryOperatorInput>;
  readonly sentences: InputMaybe<IntQueryOperatorInput>;
  readonly words: InputMaybe<IntQueryOperatorInput>;
};

/** Node Interface */
type Node = {
  readonly children: ReadonlyArray<Node>;
  readonly id: Scalars['ID'];
  readonly internal: Internal;
  readonly parent: Maybe<Node>;
};

type NodeFilterInput = {
  readonly children: InputMaybe<NodeFilterListInput>;
  readonly id: InputMaybe<StringQueryOperatorInput>;
  readonly internal: InputMaybe<InternalFilterInput>;
  readonly parent: InputMaybe<NodeFilterInput>;
};

type NodeFilterListInput = {
  readonly elemMatch: InputMaybe<NodeFilterInput>;
};

type PNGOptions = {
  readonly compressionSpeed: InputMaybe<Scalars['Int']>;
  readonly quality: InputMaybe<Scalars['Int']>;
};

type PageInfo = {
  readonly currentPage: Scalars['Int'];
  readonly hasNextPage: Scalars['Boolean'];
  readonly hasPreviousPage: Scalars['Boolean'];
  readonly itemCount: Scalars['Int'];
  readonly pageCount: Scalars['Int'];
  readonly perPage: Maybe<Scalars['Int']>;
  readonly totalCount: Scalars['Int'];
};

type Potrace = {
  readonly alphaMax: InputMaybe<Scalars['Float']>;
  readonly background: InputMaybe<Scalars['String']>;
  readonly blackOnWhite: InputMaybe<Scalars['Boolean']>;
  readonly color: InputMaybe<Scalars['String']>;
  readonly optCurve: InputMaybe<Scalars['Boolean']>;
  readonly optTolerance: InputMaybe<Scalars['Float']>;
  readonly threshold: InputMaybe<Scalars['Int']>;
  readonly turdSize: InputMaybe<Scalars['Float']>;
  readonly turnPolicy: InputMaybe<PotraceTurnPolicy>;
};

type PotraceTurnPolicy =
  | 'black'
  | 'left'
  | 'majority'
  | 'minority'
  | 'right'
  | 'white';

type Query = {
  readonly allDirectory: DirectoryConnection;
  readonly allFile: FileConnection;
  readonly allGoogleDocs: GoogleDocsConnection;
  readonly allImageSharp: ImageSharpConnection;
  readonly allMdx: MdxConnection;
  readonly allSite: SiteConnection;
  readonly allSiteBuildMetadata: SiteBuildMetadataConnection;
  readonly allSiteFunction: SiteFunctionConnection;
  readonly allSitePage: SitePageConnection;
  readonly allSitePlugin: SitePluginConnection;
  readonly allThemeUiConfig: ThemeUiConfigConnection;
  readonly directory: Maybe<Directory>;
  readonly file: Maybe<File>;
  readonly googleDocs: Maybe<GoogleDocs>;
  readonly imageSharp: Maybe<ImageSharp>;
  readonly mdx: Maybe<Mdx>;
  readonly site: Maybe<Site>;
  readonly siteBuildMetadata: Maybe<SiteBuildMetadata>;
  readonly siteFunction: Maybe<SiteFunction>;
  readonly sitePage: Maybe<SitePage>;
  readonly sitePlugin: Maybe<SitePlugin>;
  readonly themeUiConfig: Maybe<ThemeUiConfig>;
};


type Query_allDirectoryArgs = {
  filter: InputMaybe<DirectoryFilterInput>;
  limit: InputMaybe<Scalars['Int']>;
  skip: InputMaybe<Scalars['Int']>;
  sort: InputMaybe<DirectorySortInput>;
};


type Query_allFileArgs = {
  filter: InputMaybe<FileFilterInput>;
  limit: InputMaybe<Scalars['Int']>;
  skip: InputMaybe<Scalars['Int']>;
  sort: InputMaybe<FileSortInput>;
};


type Query_allGoogleDocsArgs = {
  filter: InputMaybe<GoogleDocsFilterInput>;
  limit: InputMaybe<Scalars['Int']>;
  skip: InputMaybe<Scalars['Int']>;
  sort: InputMaybe<GoogleDocsSortInput>;
};


type Query_allImageSharpArgs = {
  filter: InputMaybe<ImageSharpFilterInput>;
  limit: InputMaybe<Scalars['Int']>;
  skip: InputMaybe<Scalars['Int']>;
  sort: InputMaybe<ImageSharpSortInput>;
};


type Query_allMdxArgs = {
  filter: InputMaybe<MdxFilterInput>;
  limit: InputMaybe<Scalars['Int']>;
  skip: InputMaybe<Scalars['Int']>;
  sort: InputMaybe<MdxSortInput>;
};


type Query_allSiteArgs = {
  filter: InputMaybe<SiteFilterInput>;
  limit: InputMaybe<Scalars['Int']>;
  skip: InputMaybe<Scalars['Int']>;
  sort: InputMaybe<SiteSortInput>;
};


type Query_allSiteBuildMetadataArgs = {
  filter: InputMaybe<SiteBuildMetadataFilterInput>;
  limit: InputMaybe<Scalars['Int']>;
  skip: InputMaybe<Scalars['Int']>;
  sort: InputMaybe<SiteBuildMetadataSortInput>;
};


type Query_allSiteFunctionArgs = {
  filter: InputMaybe<SiteFunctionFilterInput>;
  limit: InputMaybe<Scalars['Int']>;
  skip: InputMaybe<Scalars['Int']>;
  sort: InputMaybe<SiteFunctionSortInput>;
};


type Query_allSitePageArgs = {
  filter: InputMaybe<SitePageFilterInput>;
  limit: InputMaybe<Scalars['Int']>;
  skip: InputMaybe<Scalars['Int']>;
  sort: InputMaybe<SitePageSortInput>;
};


type Query_allSitePluginArgs = {
  filter: InputMaybe<SitePluginFilterInput>;
  limit: InputMaybe<Scalars['Int']>;
  skip: InputMaybe<Scalars['Int']>;
  sort: InputMaybe<SitePluginSortInput>;
};


type Query_allThemeUiConfigArgs = {
  filter: InputMaybe<ThemeUiConfigFilterInput>;
  limit: InputMaybe<Scalars['Int']>;
  skip: InputMaybe<Scalars['Int']>;
  sort: InputMaybe<ThemeUiConfigSortInput>;
};


type Query_directoryArgs = {
  absolutePath: InputMaybe<StringQueryOperatorInput>;
  accessTime: InputMaybe<DateQueryOperatorInput>;
  atime: InputMaybe<DateQueryOperatorInput>;
  atimeMs: InputMaybe<FloatQueryOperatorInput>;
  base: InputMaybe<StringQueryOperatorInput>;
  birthTime: InputMaybe<DateQueryOperatorInput>;
  birthtime: InputMaybe<DateQueryOperatorInput>;
  birthtimeMs: InputMaybe<FloatQueryOperatorInput>;
  changeTime: InputMaybe<DateQueryOperatorInput>;
  children: InputMaybe<NodeFilterListInput>;
  ctime: InputMaybe<DateQueryOperatorInput>;
  ctimeMs: InputMaybe<FloatQueryOperatorInput>;
  dev: InputMaybe<IntQueryOperatorInput>;
  dir: InputMaybe<StringQueryOperatorInput>;
  ext: InputMaybe<StringQueryOperatorInput>;
  extension: InputMaybe<StringQueryOperatorInput>;
  gid: InputMaybe<IntQueryOperatorInput>;
  id: InputMaybe<StringQueryOperatorInput>;
  ino: InputMaybe<FloatQueryOperatorInput>;
  internal: InputMaybe<InternalFilterInput>;
  mode: InputMaybe<IntQueryOperatorInput>;
  modifiedTime: InputMaybe<DateQueryOperatorInput>;
  mtime: InputMaybe<DateQueryOperatorInput>;
  mtimeMs: InputMaybe<FloatQueryOperatorInput>;
  name: InputMaybe<StringQueryOperatorInput>;
  nlink: InputMaybe<IntQueryOperatorInput>;
  parent: InputMaybe<NodeFilterInput>;
  prettySize: InputMaybe<StringQueryOperatorInput>;
  rdev: InputMaybe<IntQueryOperatorInput>;
  relativeDirectory: InputMaybe<StringQueryOperatorInput>;
  relativePath: InputMaybe<StringQueryOperatorInput>;
  root: InputMaybe<StringQueryOperatorInput>;
  size: InputMaybe<IntQueryOperatorInput>;
  sourceInstanceName: InputMaybe<StringQueryOperatorInput>;
  uid: InputMaybe<IntQueryOperatorInput>;
};


type Query_fileArgs = {
  absolutePath: InputMaybe<StringQueryOperatorInput>;
  accessTime: InputMaybe<DateQueryOperatorInput>;
  atime: InputMaybe<DateQueryOperatorInput>;
  atimeMs: InputMaybe<FloatQueryOperatorInput>;
  base: InputMaybe<StringQueryOperatorInput>;
  birthTime: InputMaybe<DateQueryOperatorInput>;
  birthtime: InputMaybe<DateQueryOperatorInput>;
  birthtimeMs: InputMaybe<FloatQueryOperatorInput>;
  blksize: InputMaybe<IntQueryOperatorInput>;
  blocks: InputMaybe<IntQueryOperatorInput>;
  changeTime: InputMaybe<DateQueryOperatorInput>;
  childImageSharp: InputMaybe<ImageSharpFilterInput>;
  children: InputMaybe<NodeFilterListInput>;
  childrenImageSharp: InputMaybe<ImageSharpFilterListInput>;
  ctime: InputMaybe<DateQueryOperatorInput>;
  ctimeMs: InputMaybe<FloatQueryOperatorInput>;
  dev: InputMaybe<IntQueryOperatorInput>;
  dir: InputMaybe<StringQueryOperatorInput>;
  ext: InputMaybe<StringQueryOperatorInput>;
  extension: InputMaybe<StringQueryOperatorInput>;
  gid: InputMaybe<IntQueryOperatorInput>;
  id: InputMaybe<StringQueryOperatorInput>;
  ino: InputMaybe<FloatQueryOperatorInput>;
  internal: InputMaybe<InternalFilterInput>;
  mode: InputMaybe<IntQueryOperatorInput>;
  modifiedTime: InputMaybe<DateQueryOperatorInput>;
  mtime: InputMaybe<DateQueryOperatorInput>;
  mtimeMs: InputMaybe<FloatQueryOperatorInput>;
  name: InputMaybe<StringQueryOperatorInput>;
  nlink: InputMaybe<IntQueryOperatorInput>;
  parent: InputMaybe<NodeFilterInput>;
  prettySize: InputMaybe<StringQueryOperatorInput>;
  rdev: InputMaybe<IntQueryOperatorInput>;
  relativeDirectory: InputMaybe<StringQueryOperatorInput>;
  relativePath: InputMaybe<StringQueryOperatorInput>;
  root: InputMaybe<StringQueryOperatorInput>;
  size: InputMaybe<IntQueryOperatorInput>;
  sourceInstanceName: InputMaybe<StringQueryOperatorInput>;
  uid: InputMaybe<IntQueryOperatorInput>;
  url: InputMaybe<StringQueryOperatorInput>;
};


type Query_googleDocsArgs = {
  breadcrumb: InputMaybe<BreadcrumbItemFilterListInput>;
  childMdx: InputMaybe<MdxFilterInput>;
  children: InputMaybe<NodeFilterListInput>;
  childrenMdx: InputMaybe<MdxFilterListInput>;
  cook: InputMaybe<StringQueryOperatorInput>;
  cover: InputMaybe<CoverFilterInput>;
  createdTime: InputMaybe<DateQueryOperatorInput>;
  date: InputMaybe<DateQueryOperatorInput>;
  description: InputMaybe<StringQueryOperatorInput>;
  dir: InputMaybe<StringQueryOperatorInput>;
  document: InputMaybe<GoogleDocsDocumentFilterInput>;
  exclude: InputMaybe<BooleanQueryOperatorInput>;
  id: InputMaybe<StringQueryOperatorInput>;
  images: InputMaybe<FileFilterListInput>;
  index: InputMaybe<BooleanQueryOperatorInput>;
  internal: InputMaybe<InternalFilterInput>;
  level: InputMaybe<StringQueryOperatorInput>;
  markdown: InputMaybe<StringQueryOperatorInput>;
  mimeType: InputMaybe<StringQueryOperatorInput>;
  modifiedTime: InputMaybe<DateQueryOperatorInput>;
  name: InputMaybe<StringQueryOperatorInput>;
  page: InputMaybe<BooleanQueryOperatorInput>;
  parent: InputMaybe<NodeFilterInput>;
  parents: InputMaybe<StringQueryOperatorInput>;
  path: InputMaybe<StringQueryOperatorInput>;
  prep: InputMaybe<StringQueryOperatorInput>;
  related: InputMaybe<GoogleDocsFilterListInput>;
  servings: InputMaybe<IntQueryOperatorInput>;
  slug: InputMaybe<StringQueryOperatorInput>;
  starred: InputMaybe<BooleanQueryOperatorInput>;
  tags: InputMaybe<StringQueryOperatorInput>;
  template: InputMaybe<StringQueryOperatorInput>;
};


type Query_imageSharpArgs = {
  children: InputMaybe<NodeFilterListInput>;
  fixed: InputMaybe<ImageSharpFixedFilterInput>;
  fluid: InputMaybe<ImageSharpFluidFilterInput>;
  gatsbyImageData: InputMaybe<GatsbyImageDataQueryOperatorInput>;
  id: InputMaybe<StringQueryOperatorInput>;
  internal: InputMaybe<InternalFilterInput>;
  original: InputMaybe<ImageSharpOriginalFilterInput>;
  parent: InputMaybe<NodeFilterInput>;
  resize: InputMaybe<ImageSharpResizeFilterInput>;
};


type Query_mdxArgs = {
  body: InputMaybe<StringQueryOperatorInput>;
  children: InputMaybe<NodeFilterListInput>;
  excerpt: InputMaybe<StringQueryOperatorInput>;
  fileAbsolutePath: InputMaybe<StringQueryOperatorInput>;
  frontmatter: InputMaybe<MdxFrontmatterFilterInput>;
  headings: InputMaybe<MdxHeadingMdxFilterListInput>;
  html: InputMaybe<StringQueryOperatorInput>;
  id: InputMaybe<StringQueryOperatorInput>;
  internal: InputMaybe<InternalFilterInput>;
  mdxAST: InputMaybe<JSONQueryOperatorInput>;
  parent: InputMaybe<NodeFilterInput>;
  rawBody: InputMaybe<StringQueryOperatorInput>;
  slug: InputMaybe<StringQueryOperatorInput>;
  tableOfContents: InputMaybe<JSONQueryOperatorInput>;
  timeToRead: InputMaybe<IntQueryOperatorInput>;
  wordCount: InputMaybe<MdxWordCountFilterInput>;
};


type Query_siteArgs = {
  buildTime: InputMaybe<DateQueryOperatorInput>;
  children: InputMaybe<NodeFilterListInput>;
  graphqlTypegen: InputMaybe<SiteGraphqlTypegenFilterInput>;
  host: InputMaybe<StringQueryOperatorInput>;
  id: InputMaybe<StringQueryOperatorInput>;
  internal: InputMaybe<InternalFilterInput>;
  jsxRuntime: InputMaybe<StringQueryOperatorInput>;
  parent: InputMaybe<NodeFilterInput>;
  pathPrefix: InputMaybe<StringQueryOperatorInput>;
  polyfill: InputMaybe<BooleanQueryOperatorInput>;
  port: InputMaybe<IntQueryOperatorInput>;
  siteMetadata: InputMaybe<SiteSiteMetadataFilterInput>;
  trailingSlash: InputMaybe<StringQueryOperatorInput>;
};


type Query_siteBuildMetadataArgs = {
  buildTime: InputMaybe<DateQueryOperatorInput>;
  children: InputMaybe<NodeFilterListInput>;
  id: InputMaybe<StringQueryOperatorInput>;
  internal: InputMaybe<InternalFilterInput>;
  parent: InputMaybe<NodeFilterInput>;
};


type Query_siteFunctionArgs = {
  absoluteCompiledFilePath: InputMaybe<StringQueryOperatorInput>;
  children: InputMaybe<NodeFilterListInput>;
  functionRoute: InputMaybe<StringQueryOperatorInput>;
  id: InputMaybe<StringQueryOperatorInput>;
  internal: InputMaybe<InternalFilterInput>;
  matchPath: InputMaybe<StringQueryOperatorInput>;
  originalAbsoluteFilePath: InputMaybe<StringQueryOperatorInput>;
  originalRelativeFilePath: InputMaybe<StringQueryOperatorInput>;
  parent: InputMaybe<NodeFilterInput>;
  pluginName: InputMaybe<StringQueryOperatorInput>;
  relativeCompiledFilePath: InputMaybe<StringQueryOperatorInput>;
};


type Query_sitePageArgs = {
  children: InputMaybe<NodeFilterListInput>;
  component: InputMaybe<StringQueryOperatorInput>;
  componentChunkName: InputMaybe<StringQueryOperatorInput>;
  id: InputMaybe<StringQueryOperatorInput>;
  internal: InputMaybe<InternalFilterInput>;
  internalComponentName: InputMaybe<StringQueryOperatorInput>;
  matchPath: InputMaybe<StringQueryOperatorInput>;
  pageContext: InputMaybe<JSONQueryOperatorInput>;
  parent: InputMaybe<NodeFilterInput>;
  path: InputMaybe<StringQueryOperatorInput>;
  pluginCreator: InputMaybe<SitePluginFilterInput>;
};


type Query_sitePluginArgs = {
  browserAPIs: InputMaybe<StringQueryOperatorInput>;
  children: InputMaybe<NodeFilterListInput>;
  id: InputMaybe<StringQueryOperatorInput>;
  internal: InputMaybe<InternalFilterInput>;
  name: InputMaybe<StringQueryOperatorInput>;
  nodeAPIs: InputMaybe<StringQueryOperatorInput>;
  packageJson: InputMaybe<JSONQueryOperatorInput>;
  parent: InputMaybe<NodeFilterInput>;
  pluginFilepath: InputMaybe<StringQueryOperatorInput>;
  pluginOptions: InputMaybe<JSONQueryOperatorInput>;
  resolve: InputMaybe<StringQueryOperatorInput>;
  ssrAPIs: InputMaybe<StringQueryOperatorInput>;
  version: InputMaybe<StringQueryOperatorInput>;
};


type Query_themeUiConfigArgs = {
  children: InputMaybe<NodeFilterListInput>;
  id: InputMaybe<StringQueryOperatorInput>;
  internal: InputMaybe<InternalFilterInput>;
  parent: InputMaybe<NodeFilterInput>;
  preset: InputMaybe<JSONQueryOperatorInput>;
  prismPreset: InputMaybe<JSONQueryOperatorInput>;
};

type Site = Node & {
  readonly buildTime: Maybe<Scalars['Date']>;
  readonly children: ReadonlyArray<Node>;
  readonly graphqlTypegen: Maybe<SiteGraphqlTypegen>;
  readonly host: Maybe<Scalars['String']>;
  readonly id: Scalars['ID'];
  readonly internal: Internal;
  readonly jsxRuntime: Maybe<Scalars['String']>;
  readonly parent: Maybe<Node>;
  readonly pathPrefix: Maybe<Scalars['String']>;
  readonly polyfill: Maybe<Scalars['Boolean']>;
  readonly port: Maybe<Scalars['Int']>;
  readonly siteMetadata: Maybe<SiteSiteMetadata>;
  readonly trailingSlash: Maybe<Scalars['String']>;
};


type Site_buildTimeArgs = {
  difference: InputMaybe<Scalars['String']>;
  formatString: InputMaybe<Scalars['String']>;
  fromNow: InputMaybe<Scalars['Boolean']>;
  locale: InputMaybe<Scalars['String']>;
};

type SiteBuildMetadata = Node & {
  readonly buildTime: Maybe<Scalars['Date']>;
  readonly children: ReadonlyArray<Node>;
  readonly id: Scalars['ID'];
  readonly internal: Internal;
  readonly parent: Maybe<Node>;
};


type SiteBuildMetadata_buildTimeArgs = {
  difference: InputMaybe<Scalars['String']>;
  formatString: InputMaybe<Scalars['String']>;
  fromNow: InputMaybe<Scalars['Boolean']>;
  locale: InputMaybe<Scalars['String']>;
};

type SiteBuildMetadataConnection = {
  readonly distinct: ReadonlyArray<Scalars['String']>;
  readonly edges: ReadonlyArray<SiteBuildMetadataEdge>;
  readonly group: ReadonlyArray<SiteBuildMetadataGroupConnection>;
  readonly max: Maybe<Scalars['Float']>;
  readonly min: Maybe<Scalars['Float']>;
  readonly nodes: ReadonlyArray<SiteBuildMetadata>;
  readonly pageInfo: PageInfo;
  readonly sum: Maybe<Scalars['Float']>;
  readonly totalCount: Scalars['Int'];
};


type SiteBuildMetadataConnection_distinctArgs = {
  field: SiteBuildMetadataFieldsEnum;
};


type SiteBuildMetadataConnection_groupArgs = {
  field: SiteBuildMetadataFieldsEnum;
  limit: InputMaybe<Scalars['Int']>;
  skip: InputMaybe<Scalars['Int']>;
};


type SiteBuildMetadataConnection_maxArgs = {
  field: SiteBuildMetadataFieldsEnum;
};


type SiteBuildMetadataConnection_minArgs = {
  field: SiteBuildMetadataFieldsEnum;
};


type SiteBuildMetadataConnection_sumArgs = {
  field: SiteBuildMetadataFieldsEnum;
};

type SiteBuildMetadataEdge = {
  readonly next: Maybe<SiteBuildMetadata>;
  readonly node: SiteBuildMetadata;
  readonly previous: Maybe<SiteBuildMetadata>;
};

type SiteBuildMetadataFieldsEnum =
  | 'buildTime'
  | 'children'
  | 'children.children'
  | 'children.children.children'
  | 'children.children.children.children'
  | 'children.children.children.id'
  | 'children.children.id'
  | 'children.children.internal.content'
  | 'children.children.internal.contentDigest'
  | 'children.children.internal.contentFilePath'
  | 'children.children.internal.description'
  | 'children.children.internal.fieldOwners'
  | 'children.children.internal.ignoreType'
  | 'children.children.internal.mediaType'
  | 'children.children.internal.owner'
  | 'children.children.internal.type'
  | 'children.children.parent.children'
  | 'children.children.parent.id'
  | 'children.id'
  | 'children.internal.content'
  | 'children.internal.contentDigest'
  | 'children.internal.contentFilePath'
  | 'children.internal.description'
  | 'children.internal.fieldOwners'
  | 'children.internal.ignoreType'
  | 'children.internal.mediaType'
  | 'children.internal.owner'
  | 'children.internal.type'
  | 'children.parent.children'
  | 'children.parent.children.children'
  | 'children.parent.children.id'
  | 'children.parent.id'
  | 'children.parent.internal.content'
  | 'children.parent.internal.contentDigest'
  | 'children.parent.internal.contentFilePath'
  | 'children.parent.internal.description'
  | 'children.parent.internal.fieldOwners'
  | 'children.parent.internal.ignoreType'
  | 'children.parent.internal.mediaType'
  | 'children.parent.internal.owner'
  | 'children.parent.internal.type'
  | 'children.parent.parent.children'
  | 'children.parent.parent.id'
  | 'id'
  | 'internal.content'
  | 'internal.contentDigest'
  | 'internal.contentFilePath'
  | 'internal.description'
  | 'internal.fieldOwners'
  | 'internal.ignoreType'
  | 'internal.mediaType'
  | 'internal.owner'
  | 'internal.type'
  | 'parent.children'
  | 'parent.children.children'
  | 'parent.children.children.children'
  | 'parent.children.children.id'
  | 'parent.children.id'
  | 'parent.children.internal.content'
  | 'parent.children.internal.contentDigest'
  | 'parent.children.internal.contentFilePath'
  | 'parent.children.internal.description'
  | 'parent.children.internal.fieldOwners'
  | 'parent.children.internal.ignoreType'
  | 'parent.children.internal.mediaType'
  | 'parent.children.internal.owner'
  | 'parent.children.internal.type'
  | 'parent.children.parent.children'
  | 'parent.children.parent.id'
  | 'parent.id'
  | 'parent.internal.content'
  | 'parent.internal.contentDigest'
  | 'parent.internal.contentFilePath'
  | 'parent.internal.description'
  | 'parent.internal.fieldOwners'
  | 'parent.internal.ignoreType'
  | 'parent.internal.mediaType'
  | 'parent.internal.owner'
  | 'parent.internal.type'
  | 'parent.parent.children'
  | 'parent.parent.children.children'
  | 'parent.parent.children.id'
  | 'parent.parent.id'
  | 'parent.parent.internal.content'
  | 'parent.parent.internal.contentDigest'
  | 'parent.parent.internal.contentFilePath'
  | 'parent.parent.internal.description'
  | 'parent.parent.internal.fieldOwners'
  | 'parent.parent.internal.ignoreType'
  | 'parent.parent.internal.mediaType'
  | 'parent.parent.internal.owner'
  | 'parent.parent.internal.type'
  | 'parent.parent.parent.children'
  | 'parent.parent.parent.id';

type SiteBuildMetadataFilterInput = {
  readonly buildTime: InputMaybe<DateQueryOperatorInput>;
  readonly children: InputMaybe<NodeFilterListInput>;
  readonly id: InputMaybe<StringQueryOperatorInput>;
  readonly internal: InputMaybe<InternalFilterInput>;
  readonly parent: InputMaybe<NodeFilterInput>;
};

type SiteBuildMetadataGroupConnection = {
  readonly distinct: ReadonlyArray<Scalars['String']>;
  readonly edges: ReadonlyArray<SiteBuildMetadataEdge>;
  readonly field: Scalars['String'];
  readonly fieldValue: Maybe<Scalars['String']>;
  readonly group: ReadonlyArray<SiteBuildMetadataGroupConnection>;
  readonly max: Maybe<Scalars['Float']>;
  readonly min: Maybe<Scalars['Float']>;
  readonly nodes: ReadonlyArray<SiteBuildMetadata>;
  readonly pageInfo: PageInfo;
  readonly sum: Maybe<Scalars['Float']>;
  readonly totalCount: Scalars['Int'];
};


type SiteBuildMetadataGroupConnection_distinctArgs = {
  field: SiteBuildMetadataFieldsEnum;
};


type SiteBuildMetadataGroupConnection_groupArgs = {
  field: SiteBuildMetadataFieldsEnum;
  limit: InputMaybe<Scalars['Int']>;
  skip: InputMaybe<Scalars['Int']>;
};


type SiteBuildMetadataGroupConnection_maxArgs = {
  field: SiteBuildMetadataFieldsEnum;
};


type SiteBuildMetadataGroupConnection_minArgs = {
  field: SiteBuildMetadataFieldsEnum;
};


type SiteBuildMetadataGroupConnection_sumArgs = {
  field: SiteBuildMetadataFieldsEnum;
};

type SiteBuildMetadataSortInput = {
  readonly fields: InputMaybe<ReadonlyArray<InputMaybe<SiteBuildMetadataFieldsEnum>>>;
  readonly order: InputMaybe<ReadonlyArray<InputMaybe<SortOrderEnum>>>;
};

type SiteConnection = {
  readonly distinct: ReadonlyArray<Scalars['String']>;
  readonly edges: ReadonlyArray<SiteEdge>;
  readonly group: ReadonlyArray<SiteGroupConnection>;
  readonly max: Maybe<Scalars['Float']>;
  readonly min: Maybe<Scalars['Float']>;
  readonly nodes: ReadonlyArray<Site>;
  readonly pageInfo: PageInfo;
  readonly sum: Maybe<Scalars['Float']>;
  readonly totalCount: Scalars['Int'];
};


type SiteConnection_distinctArgs = {
  field: SiteFieldsEnum;
};


type SiteConnection_groupArgs = {
  field: SiteFieldsEnum;
  limit: InputMaybe<Scalars['Int']>;
  skip: InputMaybe<Scalars['Int']>;
};


type SiteConnection_maxArgs = {
  field: SiteFieldsEnum;
};


type SiteConnection_minArgs = {
  field: SiteFieldsEnum;
};


type SiteConnection_sumArgs = {
  field: SiteFieldsEnum;
};

type SiteEdge = {
  readonly next: Maybe<Site>;
  readonly node: Site;
  readonly previous: Maybe<Site>;
};

type SiteFieldsEnum =
  | 'buildTime'
  | 'children'
  | 'children.children'
  | 'children.children.children'
  | 'children.children.children.children'
  | 'children.children.children.id'
  | 'children.children.id'
  | 'children.children.internal.content'
  | 'children.children.internal.contentDigest'
  | 'children.children.internal.contentFilePath'
  | 'children.children.internal.description'
  | 'children.children.internal.fieldOwners'
  | 'children.children.internal.ignoreType'
  | 'children.children.internal.mediaType'
  | 'children.children.internal.owner'
  | 'children.children.internal.type'
  | 'children.children.parent.children'
  | 'children.children.parent.id'
  | 'children.id'
  | 'children.internal.content'
  | 'children.internal.contentDigest'
  | 'children.internal.contentFilePath'
  | 'children.internal.description'
  | 'children.internal.fieldOwners'
  | 'children.internal.ignoreType'
  | 'children.internal.mediaType'
  | 'children.internal.owner'
  | 'children.internal.type'
  | 'children.parent.children'
  | 'children.parent.children.children'
  | 'children.parent.children.id'
  | 'children.parent.id'
  | 'children.parent.internal.content'
  | 'children.parent.internal.contentDigest'
  | 'children.parent.internal.contentFilePath'
  | 'children.parent.internal.description'
  | 'children.parent.internal.fieldOwners'
  | 'children.parent.internal.ignoreType'
  | 'children.parent.internal.mediaType'
  | 'children.parent.internal.owner'
  | 'children.parent.internal.type'
  | 'children.parent.parent.children'
  | 'children.parent.parent.id'
  | 'graphqlTypegen.generateOnBuild'
  | 'graphqlTypegen.typesOutputPath'
  | 'host'
  | 'id'
  | 'internal.content'
  | 'internal.contentDigest'
  | 'internal.contentFilePath'
  | 'internal.description'
  | 'internal.fieldOwners'
  | 'internal.ignoreType'
  | 'internal.mediaType'
  | 'internal.owner'
  | 'internal.type'
  | 'jsxRuntime'
  | 'parent.children'
  | 'parent.children.children'
  | 'parent.children.children.children'
  | 'parent.children.children.id'
  | 'parent.children.id'
  | 'parent.children.internal.content'
  | 'parent.children.internal.contentDigest'
  | 'parent.children.internal.contentFilePath'
  | 'parent.children.internal.description'
  | 'parent.children.internal.fieldOwners'
  | 'parent.children.internal.ignoreType'
  | 'parent.children.internal.mediaType'
  | 'parent.children.internal.owner'
  | 'parent.children.internal.type'
  | 'parent.children.parent.children'
  | 'parent.children.parent.id'
  | 'parent.id'
  | 'parent.internal.content'
  | 'parent.internal.contentDigest'
  | 'parent.internal.contentFilePath'
  | 'parent.internal.description'
  | 'parent.internal.fieldOwners'
  | 'parent.internal.ignoreType'
  | 'parent.internal.mediaType'
  | 'parent.internal.owner'
  | 'parent.internal.type'
  | 'parent.parent.children'
  | 'parent.parent.children.children'
  | 'parent.parent.children.id'
  | 'parent.parent.id'
  | 'parent.parent.internal.content'
  | 'parent.parent.internal.contentDigest'
  | 'parent.parent.internal.contentFilePath'
  | 'parent.parent.internal.description'
  | 'parent.parent.internal.fieldOwners'
  | 'parent.parent.internal.ignoreType'
  | 'parent.parent.internal.mediaType'
  | 'parent.parent.internal.owner'
  | 'parent.parent.internal.type'
  | 'parent.parent.parent.children'
  | 'parent.parent.parent.id'
  | 'pathPrefix'
  | 'polyfill'
  | 'port'
  | 'siteMetadata.description'
  | 'siteMetadata.title'
  | 'trailingSlash';

type SiteFilterInput = {
  readonly buildTime: InputMaybe<DateQueryOperatorInput>;
  readonly children: InputMaybe<NodeFilterListInput>;
  readonly graphqlTypegen: InputMaybe<SiteGraphqlTypegenFilterInput>;
  readonly host: InputMaybe<StringQueryOperatorInput>;
  readonly id: InputMaybe<StringQueryOperatorInput>;
  readonly internal: InputMaybe<InternalFilterInput>;
  readonly jsxRuntime: InputMaybe<StringQueryOperatorInput>;
  readonly parent: InputMaybe<NodeFilterInput>;
  readonly pathPrefix: InputMaybe<StringQueryOperatorInput>;
  readonly polyfill: InputMaybe<BooleanQueryOperatorInput>;
  readonly port: InputMaybe<IntQueryOperatorInput>;
  readonly siteMetadata: InputMaybe<SiteSiteMetadataFilterInput>;
  readonly trailingSlash: InputMaybe<StringQueryOperatorInput>;
};

type SiteFunction = Node & {
  readonly absoluteCompiledFilePath: Scalars['String'];
  readonly children: ReadonlyArray<Node>;
  readonly functionRoute: Scalars['String'];
  readonly id: Scalars['ID'];
  readonly internal: Internal;
  readonly matchPath: Maybe<Scalars['String']>;
  readonly originalAbsoluteFilePath: Scalars['String'];
  readonly originalRelativeFilePath: Scalars['String'];
  readonly parent: Maybe<Node>;
  readonly pluginName: Scalars['String'];
  readonly relativeCompiledFilePath: Scalars['String'];
};

type SiteFunctionConnection = {
  readonly distinct: ReadonlyArray<Scalars['String']>;
  readonly edges: ReadonlyArray<SiteFunctionEdge>;
  readonly group: ReadonlyArray<SiteFunctionGroupConnection>;
  readonly max: Maybe<Scalars['Float']>;
  readonly min: Maybe<Scalars['Float']>;
  readonly nodes: ReadonlyArray<SiteFunction>;
  readonly pageInfo: PageInfo;
  readonly sum: Maybe<Scalars['Float']>;
  readonly totalCount: Scalars['Int'];
};


type SiteFunctionConnection_distinctArgs = {
  field: SiteFunctionFieldsEnum;
};


type SiteFunctionConnection_groupArgs = {
  field: SiteFunctionFieldsEnum;
  limit: InputMaybe<Scalars['Int']>;
  skip: InputMaybe<Scalars['Int']>;
};


type SiteFunctionConnection_maxArgs = {
  field: SiteFunctionFieldsEnum;
};


type SiteFunctionConnection_minArgs = {
  field: SiteFunctionFieldsEnum;
};


type SiteFunctionConnection_sumArgs = {
  field: SiteFunctionFieldsEnum;
};

type SiteFunctionEdge = {
  readonly next: Maybe<SiteFunction>;
  readonly node: SiteFunction;
  readonly previous: Maybe<SiteFunction>;
};

type SiteFunctionFieldsEnum =
  | 'absoluteCompiledFilePath'
  | 'children'
  | 'children.children'
  | 'children.children.children'
  | 'children.children.children.children'
  | 'children.children.children.id'
  | 'children.children.id'
  | 'children.children.internal.content'
  | 'children.children.internal.contentDigest'
  | 'children.children.internal.contentFilePath'
  | 'children.children.internal.description'
  | 'children.children.internal.fieldOwners'
  | 'children.children.internal.ignoreType'
  | 'children.children.internal.mediaType'
  | 'children.children.internal.owner'
  | 'children.children.internal.type'
  | 'children.children.parent.children'
  | 'children.children.parent.id'
  | 'children.id'
  | 'children.internal.content'
  | 'children.internal.contentDigest'
  | 'children.internal.contentFilePath'
  | 'children.internal.description'
  | 'children.internal.fieldOwners'
  | 'children.internal.ignoreType'
  | 'children.internal.mediaType'
  | 'children.internal.owner'
  | 'children.internal.type'
  | 'children.parent.children'
  | 'children.parent.children.children'
  | 'children.parent.children.id'
  | 'children.parent.id'
  | 'children.parent.internal.content'
  | 'children.parent.internal.contentDigest'
  | 'children.parent.internal.contentFilePath'
  | 'children.parent.internal.description'
  | 'children.parent.internal.fieldOwners'
  | 'children.parent.internal.ignoreType'
  | 'children.parent.internal.mediaType'
  | 'children.parent.internal.owner'
  | 'children.parent.internal.type'
  | 'children.parent.parent.children'
  | 'children.parent.parent.id'
  | 'functionRoute'
  | 'id'
  | 'internal.content'
  | 'internal.contentDigest'
  | 'internal.contentFilePath'
  | 'internal.description'
  | 'internal.fieldOwners'
  | 'internal.ignoreType'
  | 'internal.mediaType'
  | 'internal.owner'
  | 'internal.type'
  | 'matchPath'
  | 'originalAbsoluteFilePath'
  | 'originalRelativeFilePath'
  | 'parent.children'
  | 'parent.children.children'
  | 'parent.children.children.children'
  | 'parent.children.children.id'
  | 'parent.children.id'
  | 'parent.children.internal.content'
  | 'parent.children.internal.contentDigest'
  | 'parent.children.internal.contentFilePath'
  | 'parent.children.internal.description'
  | 'parent.children.internal.fieldOwners'
  | 'parent.children.internal.ignoreType'
  | 'parent.children.internal.mediaType'
  | 'parent.children.internal.owner'
  | 'parent.children.internal.type'
  | 'parent.children.parent.children'
  | 'parent.children.parent.id'
  | 'parent.id'
  | 'parent.internal.content'
  | 'parent.internal.contentDigest'
  | 'parent.internal.contentFilePath'
  | 'parent.internal.description'
  | 'parent.internal.fieldOwners'
  | 'parent.internal.ignoreType'
  | 'parent.internal.mediaType'
  | 'parent.internal.owner'
  | 'parent.internal.type'
  | 'parent.parent.children'
  | 'parent.parent.children.children'
  | 'parent.parent.children.id'
  | 'parent.parent.id'
  | 'parent.parent.internal.content'
  | 'parent.parent.internal.contentDigest'
  | 'parent.parent.internal.contentFilePath'
  | 'parent.parent.internal.description'
  | 'parent.parent.internal.fieldOwners'
  | 'parent.parent.internal.ignoreType'
  | 'parent.parent.internal.mediaType'
  | 'parent.parent.internal.owner'
  | 'parent.parent.internal.type'
  | 'parent.parent.parent.children'
  | 'parent.parent.parent.id'
  | 'pluginName'
  | 'relativeCompiledFilePath';

type SiteFunctionFilterInput = {
  readonly absoluteCompiledFilePath: InputMaybe<StringQueryOperatorInput>;
  readonly children: InputMaybe<NodeFilterListInput>;
  readonly functionRoute: InputMaybe<StringQueryOperatorInput>;
  readonly id: InputMaybe<StringQueryOperatorInput>;
  readonly internal: InputMaybe<InternalFilterInput>;
  readonly matchPath: InputMaybe<StringQueryOperatorInput>;
  readonly originalAbsoluteFilePath: InputMaybe<StringQueryOperatorInput>;
  readonly originalRelativeFilePath: InputMaybe<StringQueryOperatorInput>;
  readonly parent: InputMaybe<NodeFilterInput>;
  readonly pluginName: InputMaybe<StringQueryOperatorInput>;
  readonly relativeCompiledFilePath: InputMaybe<StringQueryOperatorInput>;
};

type SiteFunctionGroupConnection = {
  readonly distinct: ReadonlyArray<Scalars['String']>;
  readonly edges: ReadonlyArray<SiteFunctionEdge>;
  readonly field: Scalars['String'];
  readonly fieldValue: Maybe<Scalars['String']>;
  readonly group: ReadonlyArray<SiteFunctionGroupConnection>;
  readonly max: Maybe<Scalars['Float']>;
  readonly min: Maybe<Scalars['Float']>;
  readonly nodes: ReadonlyArray<SiteFunction>;
  readonly pageInfo: PageInfo;
  readonly sum: Maybe<Scalars['Float']>;
  readonly totalCount: Scalars['Int'];
};


type SiteFunctionGroupConnection_distinctArgs = {
  field: SiteFunctionFieldsEnum;
};


type SiteFunctionGroupConnection_groupArgs = {
  field: SiteFunctionFieldsEnum;
  limit: InputMaybe<Scalars['Int']>;
  skip: InputMaybe<Scalars['Int']>;
};


type SiteFunctionGroupConnection_maxArgs = {
  field: SiteFunctionFieldsEnum;
};


type SiteFunctionGroupConnection_minArgs = {
  field: SiteFunctionFieldsEnum;
};


type SiteFunctionGroupConnection_sumArgs = {
  field: SiteFunctionFieldsEnum;
};

type SiteFunctionSortInput = {
  readonly fields: InputMaybe<ReadonlyArray<InputMaybe<SiteFunctionFieldsEnum>>>;
  readonly order: InputMaybe<ReadonlyArray<InputMaybe<SortOrderEnum>>>;
};

type SiteGraphqlTypegen = {
  readonly generateOnBuild: Maybe<Scalars['Boolean']>;
  readonly typesOutputPath: Maybe<Scalars['String']>;
};

type SiteGraphqlTypegenFilterInput = {
  readonly generateOnBuild: InputMaybe<BooleanQueryOperatorInput>;
  readonly typesOutputPath: InputMaybe<StringQueryOperatorInput>;
};

type SiteGroupConnection = {
  readonly distinct: ReadonlyArray<Scalars['String']>;
  readonly edges: ReadonlyArray<SiteEdge>;
  readonly field: Scalars['String'];
  readonly fieldValue: Maybe<Scalars['String']>;
  readonly group: ReadonlyArray<SiteGroupConnection>;
  readonly max: Maybe<Scalars['Float']>;
  readonly min: Maybe<Scalars['Float']>;
  readonly nodes: ReadonlyArray<Site>;
  readonly pageInfo: PageInfo;
  readonly sum: Maybe<Scalars['Float']>;
  readonly totalCount: Scalars['Int'];
};


type SiteGroupConnection_distinctArgs = {
  field: SiteFieldsEnum;
};


type SiteGroupConnection_groupArgs = {
  field: SiteFieldsEnum;
  limit: InputMaybe<Scalars['Int']>;
  skip: InputMaybe<Scalars['Int']>;
};


type SiteGroupConnection_maxArgs = {
  field: SiteFieldsEnum;
};


type SiteGroupConnection_minArgs = {
  field: SiteFieldsEnum;
};


type SiteGroupConnection_sumArgs = {
  field: SiteFieldsEnum;
};

type SitePage = Node & {
  readonly children: ReadonlyArray<Node>;
  readonly component: Scalars['String'];
  readonly componentChunkName: Scalars['String'];
  readonly id: Scalars['ID'];
  readonly internal: Internal;
  readonly internalComponentName: Scalars['String'];
  readonly matchPath: Maybe<Scalars['String']>;
  readonly pageContext: Maybe<Scalars['JSON']>;
  readonly parent: Maybe<Node>;
  readonly path: Scalars['String'];
  readonly pluginCreator: Maybe<SitePlugin>;
};

type SitePageConnection = {
  readonly distinct: ReadonlyArray<Scalars['String']>;
  readonly edges: ReadonlyArray<SitePageEdge>;
  readonly group: ReadonlyArray<SitePageGroupConnection>;
  readonly max: Maybe<Scalars['Float']>;
  readonly min: Maybe<Scalars['Float']>;
  readonly nodes: ReadonlyArray<SitePage>;
  readonly pageInfo: PageInfo;
  readonly sum: Maybe<Scalars['Float']>;
  readonly totalCount: Scalars['Int'];
};


type SitePageConnection_distinctArgs = {
  field: SitePageFieldsEnum;
};


type SitePageConnection_groupArgs = {
  field: SitePageFieldsEnum;
  limit: InputMaybe<Scalars['Int']>;
  skip: InputMaybe<Scalars['Int']>;
};


type SitePageConnection_maxArgs = {
  field: SitePageFieldsEnum;
};


type SitePageConnection_minArgs = {
  field: SitePageFieldsEnum;
};


type SitePageConnection_sumArgs = {
  field: SitePageFieldsEnum;
};

type SitePageEdge = {
  readonly next: Maybe<SitePage>;
  readonly node: SitePage;
  readonly previous: Maybe<SitePage>;
};

type SitePageFieldsEnum =
  | 'children'
  | 'children.children'
  | 'children.children.children'
  | 'children.children.children.children'
  | 'children.children.children.id'
  | 'children.children.id'
  | 'children.children.internal.content'
  | 'children.children.internal.contentDigest'
  | 'children.children.internal.contentFilePath'
  | 'children.children.internal.description'
  | 'children.children.internal.fieldOwners'
  | 'children.children.internal.ignoreType'
  | 'children.children.internal.mediaType'
  | 'children.children.internal.owner'
  | 'children.children.internal.type'
  | 'children.children.parent.children'
  | 'children.children.parent.id'
  | 'children.id'
  | 'children.internal.content'
  | 'children.internal.contentDigest'
  | 'children.internal.contentFilePath'
  | 'children.internal.description'
  | 'children.internal.fieldOwners'
  | 'children.internal.ignoreType'
  | 'children.internal.mediaType'
  | 'children.internal.owner'
  | 'children.internal.type'
  | 'children.parent.children'
  | 'children.parent.children.children'
  | 'children.parent.children.id'
  | 'children.parent.id'
  | 'children.parent.internal.content'
  | 'children.parent.internal.contentDigest'
  | 'children.parent.internal.contentFilePath'
  | 'children.parent.internal.description'
  | 'children.parent.internal.fieldOwners'
  | 'children.parent.internal.ignoreType'
  | 'children.parent.internal.mediaType'
  | 'children.parent.internal.owner'
  | 'children.parent.internal.type'
  | 'children.parent.parent.children'
  | 'children.parent.parent.id'
  | 'component'
  | 'componentChunkName'
  | 'id'
  | 'internalComponentName'
  | 'internal.content'
  | 'internal.contentDigest'
  | 'internal.contentFilePath'
  | 'internal.description'
  | 'internal.fieldOwners'
  | 'internal.ignoreType'
  | 'internal.mediaType'
  | 'internal.owner'
  | 'internal.type'
  | 'matchPath'
  | 'pageContext'
  | 'parent.children'
  | 'parent.children.children'
  | 'parent.children.children.children'
  | 'parent.children.children.id'
  | 'parent.children.id'
  | 'parent.children.internal.content'
  | 'parent.children.internal.contentDigest'
  | 'parent.children.internal.contentFilePath'
  | 'parent.children.internal.description'
  | 'parent.children.internal.fieldOwners'
  | 'parent.children.internal.ignoreType'
  | 'parent.children.internal.mediaType'
  | 'parent.children.internal.owner'
  | 'parent.children.internal.type'
  | 'parent.children.parent.children'
  | 'parent.children.parent.id'
  | 'parent.id'
  | 'parent.internal.content'
  | 'parent.internal.contentDigest'
  | 'parent.internal.contentFilePath'
  | 'parent.internal.description'
  | 'parent.internal.fieldOwners'
  | 'parent.internal.ignoreType'
  | 'parent.internal.mediaType'
  | 'parent.internal.owner'
  | 'parent.internal.type'
  | 'parent.parent.children'
  | 'parent.parent.children.children'
  | 'parent.parent.children.id'
  | 'parent.parent.id'
  | 'parent.parent.internal.content'
  | 'parent.parent.internal.contentDigest'
  | 'parent.parent.internal.contentFilePath'
  | 'parent.parent.internal.description'
  | 'parent.parent.internal.fieldOwners'
  | 'parent.parent.internal.ignoreType'
  | 'parent.parent.internal.mediaType'
  | 'parent.parent.internal.owner'
  | 'parent.parent.internal.type'
  | 'parent.parent.parent.children'
  | 'parent.parent.parent.id'
  | 'path'
  | 'pluginCreator.browserAPIs'
  | 'pluginCreator.children'
  | 'pluginCreator.children.children'
  | 'pluginCreator.children.children.children'
  | 'pluginCreator.children.children.id'
  | 'pluginCreator.children.id'
  | 'pluginCreator.children.internal.content'
  | 'pluginCreator.children.internal.contentDigest'
  | 'pluginCreator.children.internal.contentFilePath'
  | 'pluginCreator.children.internal.description'
  | 'pluginCreator.children.internal.fieldOwners'
  | 'pluginCreator.children.internal.ignoreType'
  | 'pluginCreator.children.internal.mediaType'
  | 'pluginCreator.children.internal.owner'
  | 'pluginCreator.children.internal.type'
  | 'pluginCreator.children.parent.children'
  | 'pluginCreator.children.parent.id'
  | 'pluginCreator.id'
  | 'pluginCreator.internal.content'
  | 'pluginCreator.internal.contentDigest'
  | 'pluginCreator.internal.contentFilePath'
  | 'pluginCreator.internal.description'
  | 'pluginCreator.internal.fieldOwners'
  | 'pluginCreator.internal.ignoreType'
  | 'pluginCreator.internal.mediaType'
  | 'pluginCreator.internal.owner'
  | 'pluginCreator.internal.type'
  | 'pluginCreator.name'
  | 'pluginCreator.nodeAPIs'
  | 'pluginCreator.packageJson'
  | 'pluginCreator.parent.children'
  | 'pluginCreator.parent.children.children'
  | 'pluginCreator.parent.children.id'
  | 'pluginCreator.parent.id'
  | 'pluginCreator.parent.internal.content'
  | 'pluginCreator.parent.internal.contentDigest'
  | 'pluginCreator.parent.internal.contentFilePath'
  | 'pluginCreator.parent.internal.description'
  | 'pluginCreator.parent.internal.fieldOwners'
  | 'pluginCreator.parent.internal.ignoreType'
  | 'pluginCreator.parent.internal.mediaType'
  | 'pluginCreator.parent.internal.owner'
  | 'pluginCreator.parent.internal.type'
  | 'pluginCreator.parent.parent.children'
  | 'pluginCreator.parent.parent.id'
  | 'pluginCreator.pluginFilepath'
  | 'pluginCreator.pluginOptions'
  | 'pluginCreator.resolve'
  | 'pluginCreator.ssrAPIs'
  | 'pluginCreator.version';

type SitePageFilterInput = {
  readonly children: InputMaybe<NodeFilterListInput>;
  readonly component: InputMaybe<StringQueryOperatorInput>;
  readonly componentChunkName: InputMaybe<StringQueryOperatorInput>;
  readonly id: InputMaybe<StringQueryOperatorInput>;
  readonly internal: InputMaybe<InternalFilterInput>;
  readonly internalComponentName: InputMaybe<StringQueryOperatorInput>;
  readonly matchPath: InputMaybe<StringQueryOperatorInput>;
  readonly pageContext: InputMaybe<JSONQueryOperatorInput>;
  readonly parent: InputMaybe<NodeFilterInput>;
  readonly path: InputMaybe<StringQueryOperatorInput>;
  readonly pluginCreator: InputMaybe<SitePluginFilterInput>;
};

type SitePageGroupConnection = {
  readonly distinct: ReadonlyArray<Scalars['String']>;
  readonly edges: ReadonlyArray<SitePageEdge>;
  readonly field: Scalars['String'];
  readonly fieldValue: Maybe<Scalars['String']>;
  readonly group: ReadonlyArray<SitePageGroupConnection>;
  readonly max: Maybe<Scalars['Float']>;
  readonly min: Maybe<Scalars['Float']>;
  readonly nodes: ReadonlyArray<SitePage>;
  readonly pageInfo: PageInfo;
  readonly sum: Maybe<Scalars['Float']>;
  readonly totalCount: Scalars['Int'];
};


type SitePageGroupConnection_distinctArgs = {
  field: SitePageFieldsEnum;
};


type SitePageGroupConnection_groupArgs = {
  field: SitePageFieldsEnum;
  limit: InputMaybe<Scalars['Int']>;
  skip: InputMaybe<Scalars['Int']>;
};


type SitePageGroupConnection_maxArgs = {
  field: SitePageFieldsEnum;
};


type SitePageGroupConnection_minArgs = {
  field: SitePageFieldsEnum;
};


type SitePageGroupConnection_sumArgs = {
  field: SitePageFieldsEnum;
};

type SitePageSortInput = {
  readonly fields: InputMaybe<ReadonlyArray<InputMaybe<SitePageFieldsEnum>>>;
  readonly order: InputMaybe<ReadonlyArray<InputMaybe<SortOrderEnum>>>;
};

type SitePlugin = Node & {
  readonly browserAPIs: Maybe<ReadonlyArray<Maybe<Scalars['String']>>>;
  readonly children: ReadonlyArray<Node>;
  readonly id: Scalars['ID'];
  readonly internal: Internal;
  readonly name: Maybe<Scalars['String']>;
  readonly nodeAPIs: Maybe<ReadonlyArray<Maybe<Scalars['String']>>>;
  readonly packageJson: Maybe<Scalars['JSON']>;
  readonly parent: Maybe<Node>;
  readonly pluginFilepath: Maybe<Scalars['String']>;
  readonly pluginOptions: Maybe<Scalars['JSON']>;
  readonly resolve: Maybe<Scalars['String']>;
  readonly ssrAPIs: Maybe<ReadonlyArray<Maybe<Scalars['String']>>>;
  readonly version: Maybe<Scalars['String']>;
};

type SitePluginConnection = {
  readonly distinct: ReadonlyArray<Scalars['String']>;
  readonly edges: ReadonlyArray<SitePluginEdge>;
  readonly group: ReadonlyArray<SitePluginGroupConnection>;
  readonly max: Maybe<Scalars['Float']>;
  readonly min: Maybe<Scalars['Float']>;
  readonly nodes: ReadonlyArray<SitePlugin>;
  readonly pageInfo: PageInfo;
  readonly sum: Maybe<Scalars['Float']>;
  readonly totalCount: Scalars['Int'];
};


type SitePluginConnection_distinctArgs = {
  field: SitePluginFieldsEnum;
};


type SitePluginConnection_groupArgs = {
  field: SitePluginFieldsEnum;
  limit: InputMaybe<Scalars['Int']>;
  skip: InputMaybe<Scalars['Int']>;
};


type SitePluginConnection_maxArgs = {
  field: SitePluginFieldsEnum;
};


type SitePluginConnection_minArgs = {
  field: SitePluginFieldsEnum;
};


type SitePluginConnection_sumArgs = {
  field: SitePluginFieldsEnum;
};

type SitePluginEdge = {
  readonly next: Maybe<SitePlugin>;
  readonly node: SitePlugin;
  readonly previous: Maybe<SitePlugin>;
};

type SitePluginFieldsEnum =
  | 'browserAPIs'
  | 'children'
  | 'children.children'
  | 'children.children.children'
  | 'children.children.children.children'
  | 'children.children.children.id'
  | 'children.children.id'
  | 'children.children.internal.content'
  | 'children.children.internal.contentDigest'
  | 'children.children.internal.contentFilePath'
  | 'children.children.internal.description'
  | 'children.children.internal.fieldOwners'
  | 'children.children.internal.ignoreType'
  | 'children.children.internal.mediaType'
  | 'children.children.internal.owner'
  | 'children.children.internal.type'
  | 'children.children.parent.children'
  | 'children.children.parent.id'
  | 'children.id'
  | 'children.internal.content'
  | 'children.internal.contentDigest'
  | 'children.internal.contentFilePath'
  | 'children.internal.description'
  | 'children.internal.fieldOwners'
  | 'children.internal.ignoreType'
  | 'children.internal.mediaType'
  | 'children.internal.owner'
  | 'children.internal.type'
  | 'children.parent.children'
  | 'children.parent.children.children'
  | 'children.parent.children.id'
  | 'children.parent.id'
  | 'children.parent.internal.content'
  | 'children.parent.internal.contentDigest'
  | 'children.parent.internal.contentFilePath'
  | 'children.parent.internal.description'
  | 'children.parent.internal.fieldOwners'
  | 'children.parent.internal.ignoreType'
  | 'children.parent.internal.mediaType'
  | 'children.parent.internal.owner'
  | 'children.parent.internal.type'
  | 'children.parent.parent.children'
  | 'children.parent.parent.id'
  | 'id'
  | 'internal.content'
  | 'internal.contentDigest'
  | 'internal.contentFilePath'
  | 'internal.description'
  | 'internal.fieldOwners'
  | 'internal.ignoreType'
  | 'internal.mediaType'
  | 'internal.owner'
  | 'internal.type'
  | 'name'
  | 'nodeAPIs'
  | 'packageJson'
  | 'parent.children'
  | 'parent.children.children'
  | 'parent.children.children.children'
  | 'parent.children.children.id'
  | 'parent.children.id'
  | 'parent.children.internal.content'
  | 'parent.children.internal.contentDigest'
  | 'parent.children.internal.contentFilePath'
  | 'parent.children.internal.description'
  | 'parent.children.internal.fieldOwners'
  | 'parent.children.internal.ignoreType'
  | 'parent.children.internal.mediaType'
  | 'parent.children.internal.owner'
  | 'parent.children.internal.type'
  | 'parent.children.parent.children'
  | 'parent.children.parent.id'
  | 'parent.id'
  | 'parent.internal.content'
  | 'parent.internal.contentDigest'
  | 'parent.internal.contentFilePath'
  | 'parent.internal.description'
  | 'parent.internal.fieldOwners'
  | 'parent.internal.ignoreType'
  | 'parent.internal.mediaType'
  | 'parent.internal.owner'
  | 'parent.internal.type'
  | 'parent.parent.children'
  | 'parent.parent.children.children'
  | 'parent.parent.children.id'
  | 'parent.parent.id'
  | 'parent.parent.internal.content'
  | 'parent.parent.internal.contentDigest'
  | 'parent.parent.internal.contentFilePath'
  | 'parent.parent.internal.description'
  | 'parent.parent.internal.fieldOwners'
  | 'parent.parent.internal.ignoreType'
  | 'parent.parent.internal.mediaType'
  | 'parent.parent.internal.owner'
  | 'parent.parent.internal.type'
  | 'parent.parent.parent.children'
  | 'parent.parent.parent.id'
  | 'pluginFilepath'
  | 'pluginOptions'
  | 'resolve'
  | 'ssrAPIs'
  | 'version';

type SitePluginFilterInput = {
  readonly browserAPIs: InputMaybe<StringQueryOperatorInput>;
  readonly children: InputMaybe<NodeFilterListInput>;
  readonly id: InputMaybe<StringQueryOperatorInput>;
  readonly internal: InputMaybe<InternalFilterInput>;
  readonly name: InputMaybe<StringQueryOperatorInput>;
  readonly nodeAPIs: InputMaybe<StringQueryOperatorInput>;
  readonly packageJson: InputMaybe<JSONQueryOperatorInput>;
  readonly parent: InputMaybe<NodeFilterInput>;
  readonly pluginFilepath: InputMaybe<StringQueryOperatorInput>;
  readonly pluginOptions: InputMaybe<JSONQueryOperatorInput>;
  readonly resolve: InputMaybe<StringQueryOperatorInput>;
  readonly ssrAPIs: InputMaybe<StringQueryOperatorInput>;
  readonly version: InputMaybe<StringQueryOperatorInput>;
};

type SitePluginGroupConnection = {
  readonly distinct: ReadonlyArray<Scalars['String']>;
  readonly edges: ReadonlyArray<SitePluginEdge>;
  readonly field: Scalars['String'];
  readonly fieldValue: Maybe<Scalars['String']>;
  readonly group: ReadonlyArray<SitePluginGroupConnection>;
  readonly max: Maybe<Scalars['Float']>;
  readonly min: Maybe<Scalars['Float']>;
  readonly nodes: ReadonlyArray<SitePlugin>;
  readonly pageInfo: PageInfo;
  readonly sum: Maybe<Scalars['Float']>;
  readonly totalCount: Scalars['Int'];
};


type SitePluginGroupConnection_distinctArgs = {
  field: SitePluginFieldsEnum;
};


type SitePluginGroupConnection_groupArgs = {
  field: SitePluginFieldsEnum;
  limit: InputMaybe<Scalars['Int']>;
  skip: InputMaybe<Scalars['Int']>;
};


type SitePluginGroupConnection_maxArgs = {
  field: SitePluginFieldsEnum;
};


type SitePluginGroupConnection_minArgs = {
  field: SitePluginFieldsEnum;
};


type SitePluginGroupConnection_sumArgs = {
  field: SitePluginFieldsEnum;
};

type SitePluginSortInput = {
  readonly fields: InputMaybe<ReadonlyArray<InputMaybe<SitePluginFieldsEnum>>>;
  readonly order: InputMaybe<ReadonlyArray<InputMaybe<SortOrderEnum>>>;
};

type SiteSiteMetadata = {
  readonly description: Maybe<Scalars['String']>;
  readonly title: Maybe<Scalars['String']>;
};

type SiteSiteMetadataFilterInput = {
  readonly description: InputMaybe<StringQueryOperatorInput>;
  readonly title: InputMaybe<StringQueryOperatorInput>;
};

type SiteSortInput = {
  readonly fields: InputMaybe<ReadonlyArray<InputMaybe<SiteFieldsEnum>>>;
  readonly order: InputMaybe<ReadonlyArray<InputMaybe<SortOrderEnum>>>;
};

type SortOrderEnum =
  | 'ASC'
  | 'DESC';

type StringQueryOperatorInput = {
  readonly eq: InputMaybe<Scalars['String']>;
  readonly glob: InputMaybe<Scalars['String']>;
  readonly in: InputMaybe<ReadonlyArray<InputMaybe<Scalars['String']>>>;
  readonly ne: InputMaybe<Scalars['String']>;
  readonly nin: InputMaybe<ReadonlyArray<InputMaybe<Scalars['String']>>>;
  readonly regex: InputMaybe<Scalars['String']>;
};

type ThemeUiConfig = Node & {
  readonly children: ReadonlyArray<Node>;
  readonly id: Scalars['ID'];
  readonly internal: Internal;
  readonly parent: Maybe<Node>;
  readonly preset: Maybe<Scalars['JSON']>;
  readonly prismPreset: Maybe<Scalars['JSON']>;
};

type ThemeUiConfigConnection = {
  readonly distinct: ReadonlyArray<Scalars['String']>;
  readonly edges: ReadonlyArray<ThemeUiConfigEdge>;
  readonly group: ReadonlyArray<ThemeUiConfigGroupConnection>;
  readonly max: Maybe<Scalars['Float']>;
  readonly min: Maybe<Scalars['Float']>;
  readonly nodes: ReadonlyArray<ThemeUiConfig>;
  readonly pageInfo: PageInfo;
  readonly sum: Maybe<Scalars['Float']>;
  readonly totalCount: Scalars['Int'];
};


type ThemeUiConfigConnection_distinctArgs = {
  field: ThemeUiConfigFieldsEnum;
};


type ThemeUiConfigConnection_groupArgs = {
  field: ThemeUiConfigFieldsEnum;
  limit: InputMaybe<Scalars['Int']>;
  skip: InputMaybe<Scalars['Int']>;
};


type ThemeUiConfigConnection_maxArgs = {
  field: ThemeUiConfigFieldsEnum;
};


type ThemeUiConfigConnection_minArgs = {
  field: ThemeUiConfigFieldsEnum;
};


type ThemeUiConfigConnection_sumArgs = {
  field: ThemeUiConfigFieldsEnum;
};

type ThemeUiConfigEdge = {
  readonly next: Maybe<ThemeUiConfig>;
  readonly node: ThemeUiConfig;
  readonly previous: Maybe<ThemeUiConfig>;
};

type ThemeUiConfigFieldsEnum =
  | 'children'
  | 'children.children'
  | 'children.children.children'
  | 'children.children.children.children'
  | 'children.children.children.id'
  | 'children.children.id'
  | 'children.children.internal.content'
  | 'children.children.internal.contentDigest'
  | 'children.children.internal.contentFilePath'
  | 'children.children.internal.description'
  | 'children.children.internal.fieldOwners'
  | 'children.children.internal.ignoreType'
  | 'children.children.internal.mediaType'
  | 'children.children.internal.owner'
  | 'children.children.internal.type'
  | 'children.children.parent.children'
  | 'children.children.parent.id'
  | 'children.id'
  | 'children.internal.content'
  | 'children.internal.contentDigest'
  | 'children.internal.contentFilePath'
  | 'children.internal.description'
  | 'children.internal.fieldOwners'
  | 'children.internal.ignoreType'
  | 'children.internal.mediaType'
  | 'children.internal.owner'
  | 'children.internal.type'
  | 'children.parent.children'
  | 'children.parent.children.children'
  | 'children.parent.children.id'
  | 'children.parent.id'
  | 'children.parent.internal.content'
  | 'children.parent.internal.contentDigest'
  | 'children.parent.internal.contentFilePath'
  | 'children.parent.internal.description'
  | 'children.parent.internal.fieldOwners'
  | 'children.parent.internal.ignoreType'
  | 'children.parent.internal.mediaType'
  | 'children.parent.internal.owner'
  | 'children.parent.internal.type'
  | 'children.parent.parent.children'
  | 'children.parent.parent.id'
  | 'id'
  | 'internal.content'
  | 'internal.contentDigest'
  | 'internal.contentFilePath'
  | 'internal.description'
  | 'internal.fieldOwners'
  | 'internal.ignoreType'
  | 'internal.mediaType'
  | 'internal.owner'
  | 'internal.type'
  | 'parent.children'
  | 'parent.children.children'
  | 'parent.children.children.children'
  | 'parent.children.children.id'
  | 'parent.children.id'
  | 'parent.children.internal.content'
  | 'parent.children.internal.contentDigest'
  | 'parent.children.internal.contentFilePath'
  | 'parent.children.internal.description'
  | 'parent.children.internal.fieldOwners'
  | 'parent.children.internal.ignoreType'
  | 'parent.children.internal.mediaType'
  | 'parent.children.internal.owner'
  | 'parent.children.internal.type'
  | 'parent.children.parent.children'
  | 'parent.children.parent.id'
  | 'parent.id'
  | 'parent.internal.content'
  | 'parent.internal.contentDigest'
  | 'parent.internal.contentFilePath'
  | 'parent.internal.description'
  | 'parent.internal.fieldOwners'
  | 'parent.internal.ignoreType'
  | 'parent.internal.mediaType'
  | 'parent.internal.owner'
  | 'parent.internal.type'
  | 'parent.parent.children'
  | 'parent.parent.children.children'
  | 'parent.parent.children.id'
  | 'parent.parent.id'
  | 'parent.parent.internal.content'
  | 'parent.parent.internal.contentDigest'
  | 'parent.parent.internal.contentFilePath'
  | 'parent.parent.internal.description'
  | 'parent.parent.internal.fieldOwners'
  | 'parent.parent.internal.ignoreType'
  | 'parent.parent.internal.mediaType'
  | 'parent.parent.internal.owner'
  | 'parent.parent.internal.type'
  | 'parent.parent.parent.children'
  | 'parent.parent.parent.id'
  | 'preset'
  | 'prismPreset';

type ThemeUiConfigFilterInput = {
  readonly children: InputMaybe<NodeFilterListInput>;
  readonly id: InputMaybe<StringQueryOperatorInput>;
  readonly internal: InputMaybe<InternalFilterInput>;
  readonly parent: InputMaybe<NodeFilterInput>;
  readonly preset: InputMaybe<JSONQueryOperatorInput>;
  readonly prismPreset: InputMaybe<JSONQueryOperatorInput>;
};

type ThemeUiConfigGroupConnection = {
  readonly distinct: ReadonlyArray<Scalars['String']>;
  readonly edges: ReadonlyArray<ThemeUiConfigEdge>;
  readonly field: Scalars['String'];
  readonly fieldValue: Maybe<Scalars['String']>;
  readonly group: ReadonlyArray<ThemeUiConfigGroupConnection>;
  readonly max: Maybe<Scalars['Float']>;
  readonly min: Maybe<Scalars['Float']>;
  readonly nodes: ReadonlyArray<ThemeUiConfig>;
  readonly pageInfo: PageInfo;
  readonly sum: Maybe<Scalars['Float']>;
  readonly totalCount: Scalars['Int'];
};


type ThemeUiConfigGroupConnection_distinctArgs = {
  field: ThemeUiConfigFieldsEnum;
};


type ThemeUiConfigGroupConnection_groupArgs = {
  field: ThemeUiConfigFieldsEnum;
  limit: InputMaybe<Scalars['Int']>;
  skip: InputMaybe<Scalars['Int']>;
};


type ThemeUiConfigGroupConnection_maxArgs = {
  field: ThemeUiConfigFieldsEnum;
};


type ThemeUiConfigGroupConnection_minArgs = {
  field: ThemeUiConfigFieldsEnum;
};


type ThemeUiConfigGroupConnection_sumArgs = {
  field: ThemeUiConfigFieldsEnum;
};

type ThemeUiConfigSortInput = {
  readonly fields: InputMaybe<ReadonlyArray<InputMaybe<ThemeUiConfigFieldsEnum>>>;
  readonly order: InputMaybe<ReadonlyArray<InputMaybe<SortOrderEnum>>>;
};

type TransformOptions = {
  readonly cropFocus: InputMaybe<ImageCropFocus>;
  readonly duotone: InputMaybe<DuotoneGradient>;
  readonly fit: InputMaybe<ImageFit>;
  readonly grayscale: InputMaybe<Scalars['Boolean']>;
  readonly rotate: InputMaybe<Scalars['Int']>;
  readonly trim: InputMaybe<Scalars['Float']>;
};

type WebPOptions = {
  readonly quality: InputMaybe<Scalars['Int']>;
};

type GatsbyImageSharpFixedFragment = { readonly base64: string | null, readonly width: number, readonly height: number, readonly src: string, readonly srcSet: string };

type GatsbyImageSharpFixed_noBase64Fragment = { readonly width: number, readonly height: number, readonly src: string, readonly srcSet: string };

type GatsbyImageSharpFixed_tracedSVGFragment = { readonly tracedSVG: string | null, readonly width: number, readonly height: number, readonly src: string, readonly srcSet: string };

type GatsbyImageSharpFixed_withWebpFragment = { readonly base64: string | null, readonly width: number, readonly height: number, readonly src: string, readonly srcSet: string, readonly srcWebp: string | null, readonly srcSetWebp: string | null };

type GatsbyImageSharpFixed_withWebp_noBase64Fragment = { readonly width: number, readonly height: number, readonly src: string, readonly srcSet: string, readonly srcWebp: string | null, readonly srcSetWebp: string | null };

type GatsbyImageSharpFixed_withWebp_tracedSVGFragment = { readonly tracedSVG: string | null, readonly width: number, readonly height: number, readonly src: string, readonly srcSet: string, readonly srcWebp: string | null, readonly srcSetWebp: string | null };

type GatsbyImageSharpFluidFragment = { readonly base64: string | null, readonly aspectRatio: number, readonly src: string, readonly srcSet: string, readonly sizes: string };

type GatsbyImageSharpFluid_noBase64Fragment = { readonly aspectRatio: number, readonly src: string, readonly srcSet: string, readonly sizes: string };

type GatsbyImageSharpFluid_tracedSVGFragment = { readonly tracedSVG: string | null, readonly aspectRatio: number, readonly src: string, readonly srcSet: string, readonly sizes: string };

type GatsbyImageSharpFluid_withWebpFragment = { readonly base64: string | null, readonly aspectRatio: number, readonly src: string, readonly srcSet: string, readonly srcWebp: string | null, readonly srcSetWebp: string | null, readonly sizes: string };

type GatsbyImageSharpFluid_withWebp_noBase64Fragment = { readonly aspectRatio: number, readonly src: string, readonly srcSet: string, readonly srcWebp: string | null, readonly srcSetWebp: string | null, readonly sizes: string };

type GatsbyImageSharpFluid_withWebp_tracedSVGFragment = { readonly tracedSVG: string | null, readonly aspectRatio: number, readonly src: string, readonly srcSet: string, readonly srcWebp: string | null, readonly srcSetWebp: string | null, readonly sizes: string };

type GatsbyImageSharpFluidLimitPresentationSizeFragment = { readonly maxHeight: number, readonly maxWidth: number };

type HomeQueryQueryVariables = Exact<{ [key: string]: never; }>;


type HomeQueryQuery = { readonly page: { readonly id: string, readonly childMdx: { readonly body: string } | null } | null, readonly recipes: { readonly nodes: ReadonlyArray<{ readonly id: string, readonly name: string | null, readonly path: string, readonly cover: { readonly image: { readonly childImageSharp: { readonly gatsbyImageData: import('gatsby-plugin-image').IGatsbyImageData } | null } | null } | null }> } };

type MenuQueryQueryVariables = Exact<{ [key: string]: never; }>;


type MenuQueryQuery = { readonly menu: { readonly childMdx: { readonly body: string } | null } | null };

type PageQueryVariables = Exact<{
  path: Scalars['String'];
}>;


type PageQuery = { readonly page: { readonly name: string | null, readonly id: string, readonly cover: { readonly image: { readonly childImageSharp: { readonly gatsbyImageData: import('gatsby-plugin-image').IGatsbyImageData } | null } | null } | null, readonly childMdx: { readonly body: string } | null } | null };


}
